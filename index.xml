<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>YanTree</title><link>https://yantree.github.io/</link><description>Recent content on YanTree</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Jun 2021 20:21:12 +0800</lastBuildDate><atom:link href="https://yantree.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Shader入门精要-更加复杂的光照</title><link>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/</link><pubDate>Tue, 01 Jun 2021 20:21:12 +0800</pubDate><guid>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/</guid><description>&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/topimg.png" alt="Featured image of post Shader入门精要-更加复杂的光照" />&lt;h1 id="技术美术更加复杂的光照">技术美术——更加复杂的光照&lt;/h1>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前面的学习里，场景中只有一个光源且为平行光，但在实际的项目中，我们需要处理数目更多、类型更加复杂的光源，最重要的是需要得到 &lt;strong>阴影&lt;/strong>。这里，我们有必要知道 Unity 底层渲染引擎如何让我们在 shader 中访问它们的。&lt;/p>
&lt;h2 id="unity-渲染路径">Unity 渲染路径&lt;/h2>
&lt;h3 id="设置项目的渲染路径">设置项目的渲染路径&lt;/h3>
&lt;p>Unity 主要有三种渲染路径：&lt;strong>前向渲染路径&lt;/strong>、&lt;strong>延迟渲染路径&lt;/strong>、&lt;strong>顶点照明渲染路径&lt;/strong>，其中顶点照明渲染路径已经被淘汰，其次新的延迟渲染路径代替了原来的延迟渲染路径。&lt;/p>
&lt;p>在项目中，整个项目会设置为其中一个渲染路径，默认情况下是 &lt;strong>前向渲染路径&lt;/strong>，如果希望使用多个渲染路径，我们可以在摄像机的渲染路径设置中设置该摄像机使用的渲染路径，覆盖 &lt;strong>Graphics&lt;/strong> 中的设置。&lt;/p>
&lt;h3 id="设置-pass-的渲染路径">设置 Pass 的渲染路径&lt;/h3>
&lt;p>完成以上设置，我们就可以在每个 Pass 中使用标签来指定该 Pass 使用的渲染路径。这是通过设置 Pass 的 &lt;strong>LightMode&lt;/strong> 标签实现的。例如：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面代码告诉 Unity 该 Pass 使用前向渲染路径中的 &lt;strong>ForwardBase&lt;/strong> 路径。Pass 的 &lt;strong>LightMode&lt;/strong> 标签支持的渲染路径设置选项。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>标签名&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Always&lt;/td>
&lt;td>不管使用哪种渲染路径，该 Pass 总会被渲染，但 &lt;strong>不会计算光照&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ForwardBase&lt;/td>
&lt;td>仅用于 &lt;strong>前向渲染&lt;/strong>，该 Pass 会计算环境光、最重要的平行光、逐顶点/ SH光源和 Lightmaps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ForwardAdd&lt;/td>
&lt;td>仅用于 &lt;strong>前向渲染&lt;/strong>，该 Pass 会计算额外的逐像素光源，每个 Pass 对应一个光源&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deferred&lt;/td>
&lt;td>仅用于 &lt;strong>延迟渲染&lt;/strong>，该 Pass 会渲染 G 缓冲（G-buffer）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ShadowCaster&lt;/td>
&lt;td>把物体的深度信息渲染到阴影映射纹理（shadowmap）或一张深度纹理中&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="指定渲染路径的作用">指定渲染路径的作用&lt;/h3>
&lt;p>借用网上一个例子，不同的渲染路径差距，如同不同的绘画方式&lt;/p>
&lt;p>&lt;figure style="flex-grow: 214; flex-basis: 515px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/draw-bird.jpg" data-size="1024x477">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/draw-bird.jpg"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/draw-bird_hu36238907ece5c20ca9d2f66cbb1f8b71_34481_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/draw-bird_hu36238907ece5c20ca9d2f66cbb1f8b71_34481_1024x0_resize_q75_box.jpg 1024w"
width="1024"
height="477"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>指定渲染路径就是告诉 Unity 底层渲染引擎以什么渲染流程去准备光照属性与光源信息。如果没有指定任何渲染路径，那么一些光照变量很可能不会被正确赋值，计算出的效果很可能就是错误的。&lt;/p>
&lt;h2 id="前向渲染路径">前向渲染路径&lt;/h2>
&lt;h3 id="前向渲染路径的原理">前向渲染路径的原理&lt;/h3>
&lt;p>前向渲染的光照计算由一个 Pass 块来完成，我们在这个 Pass 块中计算平行光或者其他光源。它的缺点是每个光源都要被 Pass 计算一遍才行。一个物体 n 个光源，计算 1 * n 次，m 个物体 n 个光源，计算 m * n 次。在实际情况中，后一个光源可能把前一个光源给覆盖了(由于光源强度等问题)。&lt;/p>
&lt;p>缺点：很多时候如果场景中光源过多，那么前向渲染会做非常多根本不需要的工作，前向渲染路径里面不能使用过多的光源。否则性能就会急速下降。&lt;/p>
&lt;p>为了改善前向渲染的问题，引擎通常会限制每个物体的逐像素光照数目。前向渲染的伪代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Pass&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="n">primitive&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">covered&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="n">primitive&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">failed&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">depth&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="c1">//若片元没通过深度测试，舍弃&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">//若片元可见，进行光照的计算&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Shading&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">materialInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">//写入帧缓存&lt;/span>
&lt;span class="n">writeFrameBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragment&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="unity-中的前向渲染">Unity 中的前向渲染&lt;/h2>
&lt;p>Unity 中，前向渲染有 3 种处理光照 (照亮物体) 的方式：&lt;strong>逐顶点处理&lt;/strong>、&lt;strong>逐像素处理&lt;/strong>、&lt;strong>球谐函数处理 ( Spherical Harmonics，SH )&lt;/strong>。&lt;/p>
&lt;h3 id="哪种方式处理光照">哪种方式处理光照&lt;/h3>
&lt;p>决定一个光源按哪种方式处理光照取决于自身的类型和渲染模式&lt;/p>
&lt;ul>
&lt;li>光源的 &lt;strong>类型&lt;/strong> 是指该光源是平行光还是其他类型的光源&lt;/li>
&lt;li>光源的 &lt;strong>渲染模式&lt;/strong> 是指该光源是否是 &lt;strong>重要的 (Important)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>前向渲染中，Unity 会根据场景中各个光源的设置以及光源对物体的影响程度 (距离远近、光源强度等)，对光源进行一个权重排序。然后 Unity 将一定数量的光源 &lt;strong>逐像素处理&lt;/strong>，最多 4 个光源 &lt;strong>逐顶点处理&lt;/strong>，剩下的光源 &lt;strong>SH方式处理&lt;/strong>。&lt;/p>
&lt;p>其中的判断规则如下：&lt;/p>
&lt;ol>
&lt;li>最亮的平行光逐像素处理&lt;/li>
&lt;li>渲染模式设置为 &lt;strong>Important&lt;/strong> 的光源，逐像素处理&lt;/li>
&lt;li>渲染模式设置为 &lt;strong>Not Important&lt;/strong> 的光源，逐顶点处理或者 SH 处理&lt;/li>
&lt;li>若以上规则得到的逐像素光源的数量小于 &lt;strong>Quality Setting&lt;/strong> 中的逐像素光源数量 (Pixel Light Count)，会有更多的光源以逐像素方式处理。&lt;/li>
&lt;/ol>
&lt;h3 id="在哪进行光照计算">在哪进行光照计算&lt;/h3>
&lt;p>前向渲染有两种 Pass：&lt;strong>Base Pass&lt;/strong> 和 &lt;strong>Additional Pass&lt;/strong>。通常这两种进行标签和渲染设置以及常规光照计算如图所示：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 118; flex-basis: 284px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/compute-light.png" data-size="1024x864">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/compute-light.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/compute-light_hudc4eff7cfe87f43fddfbdd7bafdaf6cd_156328_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%9B%B4%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%9A%84%E5%85%89%E7%85%A7/compute-light_hudc4eff7cfe87f43fddfbdd7bafdaf6cd_156328_1024x0_resize_box_2.png 1024w"
width="1024"
height="864"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>几点说明：&lt;/p>
&lt;ol>
&lt;li>使用了 &lt;strong>#pragma multi_compile_fwdbase&lt;/strong> 编译指令，以保证 Unity 可以为相应类型的 Pass 生成所需的 Shader 变种，这些变种会处理不同条件下的渲染逻辑，例如是否使用了光照贴图，当前处理哪种光源类型，是否开启了阴影等，同时 Unity 也会在背后声明相关的内置变量并传递到 Shader 中。&lt;/li>
&lt;li>Base Pass 旁边的注释给出了 Base Pass 中支持的一些光照特性。例如在 Base Pass 中我们可以访问光照纹理（lightmap）&lt;/li>
&lt;li>Base Pass 中渲染的平行光默认是支持阴影的（如果开启了光源的阴影功能），而 Additional Pass 中渲染的光源在默认情况下是没有阴影效果的，即便我们在它的 Light 组件中设置了有阴影的 &lt;strong>Shadow Type&lt;/strong>。但我们可以在 Additional Pass 中使用 &lt;strong>#pragma multi_compile_fwdadd_fullshadows&lt;/strong> 代替 &lt;strong>#pragma multi_compile_fwdadd&lt;/strong> 编译指令，为点光源和聚光灯开启阴影效果，但这需要在 Unity 内部使用更多的 Shader 变种。&lt;/li>
&lt;li>环境光和自发光也是在 Base pass 中计算的。这是因为对于一个物体来说，环境光和自发光我们只希望计算一次即可，而如果我们在 Additional Pass 中计算这两种光照，就会造成叠加多次环境光和自发光，这不是我们想要的。&lt;/li>
&lt;li>在 Additional Pass 的渲染设置中，我们还开启和设置了混合模式。这是因为我们希望每个 Additional Pass 可以与上一次的光照结果在帧缓存中进行叠加，从而得到最终有多个光照的渲染效果。如果我们没有开启和设置混合模式，那么 Additional Pass 的渲染结果会覆盖掉之前的渲染结果，看起来好像该物体只受该光源的影响。通常情况下，我们选择的混合模式是 &lt;strong>Blend One One&lt;/strong>。&lt;/li>
&lt;li>对于前向渲染来说，一个 UnityShader 通常会定义一个 Base Pass（Base Pass 也可以被定义多次，例如需要双面渲染的情况）以及一个 Additional Pass。一个 Base Pass 仅会执行一次（定义了多个 Base Pass 的情况除外），而一个 Additional Pass 会根据影响该物体的其他逐像素光源数目被多次调用，即每个逐像素光源会执行一次 Additional Pass。&lt;/li>
&lt;/ol>
&lt;p>上图给出的光照计算是 &lt;strong>通常情况&lt;/strong> 下我们在每种Pass中进行的计算。实际上，&lt;strong>渲染路径的设置用于告诉Unity该Pass在前向渲染路径中的位置，然后底层的渲染引擎会进行相关计算并填充一些内置变量（如_LightColor0等）&lt;/strong>，如何使用这些内置变量进行计算完全取决于开发者的选择。例如我们完全可以利用 Unity 提供的内置变量在 Base Pass 中只进行逐顶点光照；同样，我们也可以完全在 Additional Pass 中按逐顶点的方式进行光照计算，不进行任何逐像素计算。&lt;/p>
&lt;h3 id="内置的光照变量和函数">内置的光照变量和函数&lt;/h3>
&lt;p>根据使用的渲染路径 (即 Pass 标签中 &lt;strong>LightMode&lt;/strong> 的值)，Unity 会把不同的光照变量传递给 Shader，在 Unity5 中，对于前向渲染 (即 &lt;strong>LightMode&lt;/strong> 为 &lt;strong>ForwardBase&lt;/strong> 或 &lt;strong>ForwardAdd&lt;/strong>) 来说，下表给出了我们可以在 Shader 中访问的光照变量。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>_LightColor0&lt;/td>
&lt;td>float4&lt;/td>
&lt;td>该 Pass 处理的逐像素光源的颜色。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>_WorldSpaceLightPos0&lt;/td>
&lt;td>float4&lt;/td>
&lt;td>_WorldSpaceLightPos0.xyz 是该 Pass 处理逐像素光源的位置。若为平行光，那么 WorldSpaceLightPos0.w 为 0，其它光源类型 w 值为 1。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>_LightMatrix0&lt;/td>
&lt;td>float4x4&lt;/td>
&lt;td>从世界空间到光源空间的变换矩阵，可以用于采样 cookie 和光源衰减（attenuation）纹理。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0&lt;/td>
&lt;td>float4&lt;/td>
&lt;td>仅用于 Base Pass，前 4 个非重要的点光源在世界空间中的位置。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>unity_4LightAtten0&lt;/td>
&lt;td>float4&lt;/td>
&lt;td>仅用于 Base Pass，存储了前 4 个非重要的点光源的衰减因子。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>unity_LightColor&lt;/td>
&lt;td>half4[4]&lt;/td>
&lt;td>仅用于 Base Pass，存储了前 4 个非重要的点光源的颜色。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>仅&lt;/strong> 可在前向渲染中可以使用的内置光照函数&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>函数名&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>float3 WorldSpaceLightDir(float4 Mpos)&lt;/td>
&lt;td>输入一个模型空间的顶点位置，返回世界空间中该点到光源的光照方向。内部实现使用了 UnityWorldSpaceLightDir 函数，没有归一化。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>float3 UnityWorldSpaceLightDir(float4 Wpos)&lt;/td>
&lt;td>输入一个世界空间的顶点位置，返回世界空间中该点到光源的光照方向。没有归一化。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>float3 ObjSpaceLightDir(float4 Mpos)&lt;/td>
&lt;td>输入一个模型空间的顶点位置，返回模型空间中该点到光源的光照方向。没有归一化。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>float3 Shade4PointLights(&amp;hellip;)&lt;/td>
&lt;td>计算四个点光源的光照，它的参数已经打包进矢量的光照数据，通常就是上个表格中的内置变量，如：unity_4LightAtten0、unity_LightColor等，前向渲染通常使用这个函数计算逐顶点光照。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="延迟渲染路径">延迟渲染路径&lt;/h2>
&lt;p>因解决前向渲染所带来的瓶颈问题而流行起来&lt;/p>
&lt;h3 id="原理">原理&lt;/h3>
&lt;p>除了前向渲染中使用的颜色缓冲和深度缓冲外，延迟渲染还会利用额外的缓冲区，这些缓冲也被称为 &lt;strong>G&lt;/strong> 缓冲（G-buffer），其中G是英文Geometry的缩写。G缓冲区存储了我们所关心的表面（通常指的是离摄像机最近的表面）的其他信息，例如该表面的法线、位置、用于光照计算的材质属性等。&lt;/p>
&lt;p>延迟渲染主要包含量两个Pass：&lt;/p>
&lt;ul>
&lt;li>在第一个Pass中，我们不进行任何光照计算，而仅仅计算哪片片元是可见的，这主要是通过深度缓冲区技术来实现，当发现一个片元是可见的，我们就把它的相关信息存储到 &lt;strong>G&lt;/strong> 缓冲区中。&lt;/li>
&lt;li>在第二个Pass中，我们利用 &lt;strong>G&lt;/strong> 缓冲区的各个片元信息，例如表面法线、视角方向、漫反射系数等，进行真正的光照计算。&lt;/li>
&lt;/ul>
&lt;p>延迟渲染的伪代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Pass1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 延迟渲染第一个 Pass 不用于计算光照，而是收集所有的深度信息，法线信息等&lt;/span>
&lt;span class="c1">// 在第二个Pass中进行实际的光照计算，因而也被称为延迟渲染。&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="n">primitive&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">covered&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="k">this&lt;/span> &lt;span class="n">primitve&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">failed&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">depth&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="c1">// 如果没有通过深度测试，说明该片元是不可见的&lt;/span>
&lt;span class="k">discard&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">writeGBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">materialInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 如果该片元可见，就把需要的信息存储到G缓冲中去&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass2&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="n">pixel&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">screen&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">the&lt;/span> &lt;span class="n">pixel&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">valid&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="c1">// 如果该像素有效，那么就读取它对应的G缓冲中的信息&lt;/span>
&lt;span class="n">readGBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">materialInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 在此处计算光照&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Shading&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">materialInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">writeFrameBuffer&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 更新帧缓存&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>延迟渲染的效率不依赖于场景的复杂度，而是和我们使用的屏幕空间大小有关。这是因为，我们需要的信息都存储在缓冲区中，而这些缓冲区可以理解成是一张张2D图像，我们的计算实际上就是在这些图像空间中进行的。&lt;/p>
&lt;/blockquote>
&lt;h2 id="unity-中的延迟渲染">Unity 中的延迟渲染&lt;/h2>
&lt;p>延迟渲染路径，它最适合在场景中光源数目很多、如果使用前向渲染会造成性能瓶颈的情况下使用。而且，延迟渲染路径中的每个光源都可以按照逐像素的方式处理。但是，延迟渲染也有一些缺点。&lt;/p>
&lt;ol>
&lt;li>不支持真正的抗锯齿（anti-aliasing）功能。&lt;/li>
&lt;li>不能处理半透明物体&lt;/li>
&lt;li>对显卡有一定要求。如果要使用延迟渲染的话，显卡必须支持 MRT（Multiple Render Targets）、Shader Mode3.0 及以上、深度渲染纹理以及双面的模板缓冲。&lt;/li>
&lt;/ol>
&lt;h3 id="unity-要求提供两个-pass">unity 要求提供两个 Pass&lt;/h3>
&lt;ul>
&lt;li>第一个Pass用于渲染 G 缓冲。在这个 Pass 中，我们会把物体的漫反射颜色、高光反射颜色、平滑度、法线、自发光和深度等信息渲染到屏幕空间的 G 缓冲区中。对于每个物体来说，这个 Pass 仅会执行一次。&lt;/li>
&lt;li>第二个 Pass 用于计算真正的光照模型。这个 Pass 会使用上一个 Pass 中渲染的数据来计算最终的光照颜色，再存储到帧缓冲中。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>注意：当在第二个 Pass 计算光照时，默认情况下仅可以使用 Unity 内置的 Standard 光照模型。如果我们想要使用其它的光照模型，就需要替换掉原有的 Internal-DefferedShading.shader 文件。&lt;/p>
&lt;/blockquote>
&lt;h3 id="默认的-g-缓冲区">默认的 G 缓冲区&lt;/h3>
&lt;p>注意，不同 Unity 版本的渲染纹理存储内容会有所不同，缓冲区包含了以下几个渲染纹理（Render Texture，RT）&lt;/p>
&lt;ul>
&lt;li>RT0：格式是 AGRB32，RGB 通道用于存储漫反射颜色，A通道没有被使用】&lt;/li>
&lt;li>RT1：格式是 AGRB32，RGB 通道用于存储高光反射颜色，A通道用于存储高光反射的指数部分。&lt;/li>
&lt;li>RT2：格式是 ARGB2101010，RGB 通道用于存储法线，A通道没有使用&lt;/li>
&lt;li>RT3：格式是 ARGB32（非HDR）或 ARGBHalf（HDR），用于存储自发光 +lightmap+ 反射探针（reflection probes）&lt;/li>
&lt;/ul>
&lt;h3 id="可访问的内置变量和函数">可访问的内置变量和函数&lt;/h3>
&lt;p>下表给出了处理延迟渲染路径可以使用的光照变量。这些变量都可以在&lt;code>UnityDefferedLibrary.cginc&lt;/code>文件中找到它们的声明。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>_LightColor&lt;/td>
&lt;td>float4&lt;/td>
&lt;td>光源颜色&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>_LightMatrix0&lt;/td>
&lt;td>float4x4&lt;/td>
&lt;td>从世界空间到光源空间的变换矩阵，可以用于采样 cookie 和光强衰减纹理&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="unity-光源类型">Unity 光源类型&lt;/h2>
&lt;p>Unity 中提供了4种光源类型：&lt;strong>平行光、点光源、聚光灯&lt;/strong>和&lt;strong>面光源（area light）&lt;/strong>。面光源尽在烘焙时才可发挥作用，因此我们不讨它。&lt;/p>
&lt;p>光源的五大属性：&lt;strong>位置&lt;/strong>、&lt;strong>方向&lt;/strong>、&lt;strong>颜色&lt;/strong>、&lt;strong>强度&lt;/strong>、&lt;strong>衰减&lt;/strong>。&lt;/p>
&lt;h2 id="前向渲染中处理不同的光源类型">前向渲染中处理不同的光源类型&lt;/h2>
&lt;p>代码中使用了 Blinn-Phong 光照模型，并定义了 &lt;strong>Base Pass&lt;/strong> 和 &lt;strong>Additional Pass&lt;/strong> 来处理多个光源，原理代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unity&lt;/span> &lt;span class="n">Shaders&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Chapter&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Forward&lt;/span> &lt;span class="n">Rendering&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Diffuse&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Diffuse&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Gloss&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Gloss&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// BasePass&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 环境光和第一像素光(方向光) Pass&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// 显然需要添加此声明&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// _WorldSpaceLightPos0平行光方向&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 计算场景中的环境光&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// _LightColor0平行光颜色和强度&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 平行光的衰减为1&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Additional Pass&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 其他像素光源Pass&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardAdd&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// 开启混合模式用于叠加光照&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">One&lt;/span> &lt;span class="n">One&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// 显然需要添加此声明&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdadd&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 用于判断当前光源是否是平行光&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">ifdef&lt;/span> &lt;span class="n">USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="c1">// 获取平行光的方向&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="c1">// 通过点光源（或聚光灯）的位置减去世界空间下顶点位置，获得光的方向&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 判断当前光源是否是平行光&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">ifdef&lt;/span> &lt;span class="n">USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="c1">// 平行光衰减值为1&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="c1">// 如果是点光源，光的衰减值计算&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="o">defined&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">POINT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_WorldToLight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 如果是聚光灯，光的衰减值计算&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">elif&lt;/span> &lt;span class="o">defined&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SPOT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_WorldToLight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTextureB0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">FallBack&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>上诉代码只是讲述原理，不可用于真正的项目中&lt;/p>
&lt;/blockquote>
&lt;h3 id="渲染顺序">渲染顺序&lt;/h3>
&lt;p>我们知道，如果逐像素光源的数目很多的话，该物体的 Additional Pass 就会被调用多次，影响性能，我们可以通过把光源的 &lt;strong>Render Mode&lt;/strong> 设为 &lt;strong>Not Important&lt;/strong> 来告诉Unity，我们不希望把该光源当成逐像素处理。&lt;/p>
&lt;h2 id="unity-的光照衰减">Unity 的光照衰减&lt;/h2>
&lt;p>Unity 中，如果是平行光的话，衰减值为 1.0。如果是其它的光源类型，那么处理更复杂一些。尽管我们可以使用数学表达式来计算给顶点相对于点光源和聚光灯的衰减，但这些计算往往涉及开根号、除法等计算量较大的操作，因此 Unity 选择了使用一张纹理作为查找表（&lt;strong>Lookup Table，LUT&lt;/strong>），以在片元着色器中得到光源的衰减。我们首先得到光源空间下的坐标，然后利用该坐标对衰减纹理进行采样得到衰减值。&lt;/p>
&lt;p>这样的好处在于，计算衰减不依赖于数学公式的复杂性，我们只要使用一个参数值去纹理中采样即可。但使用纹理查找来计算衰减也有一些弊端：&lt;/p>
&lt;ul>
&lt;li>需要预处理得到采样纹理，而且纹理的大小也会影响衰减的精度&lt;/li>
&lt;li>不直观，同时也不方便，因此一旦把数据存储到查找表中，我们就无法使用其它数学公式来计算衰减&lt;/li>
&lt;/ul>
&lt;p>但由于这种方法可以在一定程度上提升性能，而且得到的效果在大部分情况下都是良好的，因此 Unity 默认的就是使用这种纹理查找方式来计算逐像素的点光源和聚光灯的衰减的。&lt;/p>
&lt;h3 id="用于光照衰减的纹理">用于光照衰减的纹理&lt;/h3>
&lt;p>Unity 在内部使用一张叫做 &lt;strong>_LightTexture0&lt;/strong> 的纹理来计算光源的衰减，需要注意的是，如果我们对光源使用了cookie（相当于一张阴影贴纸），那么衰减查找纹理就成了 &lt;strong>_LightTextureB0&lt;/strong> ，但这不是重点。在这张纹理上，（0，0）点表明了与光源位置重合点的衰减（就是最近点），（1，1）表明了光源涉及到的范围的最远点的衰减。&lt;/p>
&lt;p>为了对 &lt;strong>_LightTexture0&lt;/strong> 纹理采样得到给定点到该光源的衰减值，我们首先需要得到该点在光源空间中的位置，这是通过 &lt;strong>_LightMatrix0&lt;/strong> 变换矩阵得到的。在前面我们已经知道 &lt;strong>_LightMatrix0&lt;/strong> 可以把顶点从世界空间变换到光源空间。因此，我们只需把 &lt;strong>_LightMatrix0&lt;/strong> 和世界空间中的顶点坐标相乘即可得到光源空间中的相应位置。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">float3&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightMatrix0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPosition&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，我们可以使用这个坐标模的平方对衰减纹理进行采样，得到衰减值：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以发现，在上面的代码中，我们使用了光源空间中顶点距离的平方（通过 dot 函数来得到）来对纹理采样，之所以没有使用距离值来采样是因为这种方法可以避免开方操作。最后，我们使用宏 &lt;strong>UNITY_ATTEN_CHANNEL&lt;/strong> 来得到衰减纹理中衰减值所在的分量，以得到最终的衰减值。&lt;/p>
&lt;h3 id="使用数学公式计算">使用数学公式计算&lt;/h3>
&lt;p>尽管纹理衰减的方法可以减少计算衰减时的复杂度，但有时我们希望可以在代码中利用公式来计算光源的衰减。例如下面的代码可以计算光源的线性衰减。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">float&lt;/span> &lt;span class="n">distance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPosition&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">distance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//线性衰减&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unity 没有在文档中给出内置衰减计算的说明。&lt;/p>
&lt;h2 id="unity-阴影计算">Unity 阴影计算&lt;/h2>
&lt;h3 id="阴影实现-shadowmap技术">阴影实现 (shadowmap技术)&lt;/h3>
&lt;p>在实时渲染中，我们最常使用是一种名为 &lt;strong>Shadow Map&lt;/strong> 的技术。这种技术理解起来非常简单，它会首先把摄像机的位置放在与光源重合的位置上，那么场景中该光源的阴影区域就是那些摄像机看不到的地方，而 Unity 使用的就是这样的技术。 在前向渲染路径中，如果场景中最重要的平行光开启了阴影，Unity 就会为该光源计算它的 &lt;strong>阴影映射纹理（shadowmap）&lt;/strong> 。这张阴影映射纹理本质上也是一张 &lt;strong>深度图&lt;/strong>，它记录了从该光源位置出发、能看到的场景中距离它最近的表面位置（深度信息）。&lt;/p>
&lt;h3 id="距离阴影映射纹理最近的表面位置">距离阴影映射纹理最近的表面位置&lt;/h3>
&lt;p>在计算阴影映射纹理时，我们如何判定距离它最近的表面位置呢？&lt;/p>
&lt;ul>
&lt;li>
&lt;p>一种方法是，先把摄像机放置到光源位置上，然后按正常的渲染流程，即调用 Base Pass 和 Additional Pass 来更新深度信息，得到阴影映射纹理。&lt;/p>
&lt;p>但这种方法会对性能造成一定的浪费，因为实际上我们仅仅需要深度信息而已，而 Base Pass 和 Additional Pass 往往会涉及很多复杂的光照模型计算。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Unity 选择使用一个额外的 Pass 来专门更新光源的阴影映射纹理，这个 Pass 就是 &lt;strong>LightMode&lt;/strong> 标签被设置为 &lt;strong>ShadowCaster&lt;/strong> 的 Pass。这个 Pass 的渲染目标不是帧缓存，而是 &lt;strong>阴影映射纹理（或深度纹理）&lt;/strong>。&lt;/p>
&lt;p>Unity 首先把摄像机放置到光源位置上，然后调用该 Pass，通过对顶点变换后得到光源空间下的位置，并据此来输出深度信息到阴影映射纹理中。&lt;/p>
&lt;p>因此，当开启了光源的阴影效果后，底层渲染引擎首先会在当前渲染物体的 UnityShader 中找到 LightMode 为 ShadowCaster 的 Pass，如果没有，它就会在 Fallback 指定的 Unity Shader 中继续寻找，如果仍然没有找到，该物体就无法向其它物体投射阴影（但它仍然可以接收来自其它物体的阴影）。当找到一个 &lt;strong>LightMode&lt;/strong> 为 &lt;strong>ShadowCaster&lt;/strong> 的 Pass 后，Unity 会使用该 Pass 来更新光源的阴影映射纹理。&lt;/p>
&lt;h3 id="阴影映射纹理实现">阴影映射纹理实现&lt;/h3>
&lt;p>阴影映射纹理实现是如何实现的呢？&lt;/p>
&lt;ul>
&lt;li>在传统的阴影映射纹理的实现中，我们会在正常渲染的Pass中把顶点位置变换到光源空间下，以得到它在光源空间中的三维位置信息。然后我们使用xy分量对阴影映射纹理进行采样，得到阴影映射纹理中该位置的深度信息。如果该深度值小于该顶点的深度值（通常由z分量得到），那么说明该点位于阴影中。&lt;/li>
&lt;li>在 Unity5 中，Unity 使用了不同于这种传统的阴影采样技术，即 &lt;strong>屏幕空间的阴影映射技术（Screenspace Shadow Map）&lt;/strong> 。屏幕空间的阴影映射原本是延迟渲染中产生阴影的方法。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>需要注意的是，并不是所有平台的 Unity 都会使用这种技术。这是因为，屏幕空间的阴影映射需要显卡支持 MRT，而有些移动平台不支持这种特性。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="unity-中阴影映射技术具体实现">Unity 中阴影映射技术具体实现&lt;/h3>
&lt;p>当使用了屏幕空间的阴影映射技术时，Unity 首先会通过调用 LightMode 为 ShadowCaster 的 Pass 来得到可投射阴影的光源的阴影映射纹理以及摄像机的深度纹理。然后，根据光源的阴影映射纹理和摄像机的深度纹理来得到屏幕空间的阴影图。&lt;/p>
&lt;p>如果摄像机的深度图中记录的表面深度大于转换到阴影映射纹理的深度值，就说明该表面虽然是可见的，但却处于该光源的阴影中。通过这样的方式，阴影图就包含了屏幕空间中所有有阴影的区域。&lt;/p>
&lt;p>如果我们想要一个物体接收来自其它物体的阴影，只需要在 Shader 中对阴影图进行采样。由于阴影图是屏幕空间下的，因此我们首先需要把表面坐标从模型空间变换到屏幕空间中，然后使用这个坐标对阴影图进行采样即可。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;ul>
&lt;li>如果我们想要一个物体接收来自其它物体的阴影，就必须在 Shader 中对阴影映射纹理（包括屏幕空间的阴影图）进行采样，把采样结果和最后光照结果相乘来产生阴影效果。&lt;/li>
&lt;li>如果我们想要一个物体向其它物体投射阴影，就必须把该物体加入到光源的阴影映射纹理的计算中，从而让其它物体对阴影映射纹理采样时可以得到该物体的相关信息。&lt;/li>
&lt;/ul>
&lt;p>Unity 中，这个过程是通过为该物体执行 &lt;strong>LightMode&lt;/strong> 为 ShadowCaster 的 Pass 来实现的。如果使用了屏幕空间的投影映射技术，Unity 还会使用这个 Pass 产生一张摄像机的深度纹理。&lt;/p>
&lt;h3 id="不透明物体阴影">不透明物体阴影&lt;/h3>
&lt;p>为了让场景中可以产生阴影，首先需要让平行光可以收集阴影信息。这需要在光源的 Light 组件中开启阴影。&lt;/p>
&lt;h4 id="让物体投射阴影">让物体投射阴影&lt;/h4>
&lt;p>Unity 中，我们可以选择是否让一个物体投射或接收阴影。通过设置 Mesh Renderer 组件中的 Cast Shadows 和 Receive Shadows 属性来实现的。&lt;/p>
&lt;p>&lt;strong>Cast Shadows&lt;/strong> 可以被设置为开启（On）或关闭（Off）。若开启 &lt;strong>Cast Shadows&lt;/strong> 属性，Unity 会把该物体加入光源的阴影映射纹理的计算中，从而让其它物体在对阴影映射纹理采样时可以得到该物体的相关信息，也就是该物体可以向其他物体投射阴影。&lt;/p>
&lt;p>&lt;strong>Receive Shadows&lt;/strong> 则可以选择是否让物体接收来自其它物体的阴影。若没有开启 &lt;strong>Receive Shadows&lt;/strong>，那么当我们调用 Unity 的内置宏和变量计算阴影时，这些宏通过判断该物体没有开启接收阴影的功能，就不会在内部为我们计算阴影。&lt;/p>
&lt;h4 id="让物体接受阴影">让物体接受阴影&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>我们在Base Pass中包含进一个新的内值文件，用于获取我们后续要使用到的宏：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="cp">#include &amp;#34;AutoLight.cginc&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>SHADOW_COORDS、TRANSFER_SHADOW 和 SHADOW_ATTENUATION 是计算阴影时的 “三剑客” 。我们可以在 AutoLight.cginc 中找到它们的声明。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>在前向渲染中，宏 SHADOW_COORDS 实际上就是声明了一个名为 _ShadowCoord 的阴影纹理坐标变量。而 TRANSFER_SHADOW 的实现会根据平台不同而有所差异。如果当前平台可以使用屏幕空间的阴影映射技术（通过判断是否定义了 UNITY_NO_SCREENSPACE_SHADOWS 来得到），TRANSFER_SHADOW 会调用内置的 ComputePos 函数来计算 _ShadowCoord；如果该平台不支持屏幕空间的阴影映射技术，就会使用传统的阴影映射技术，TRANSFER_SHADOW 会把顶点坐标从模型空间变换到光源空间后存储到 _ShadowCoord 中。然后 SHADOW_ATTENUATION 负责使用 _ShadowCoord 对相关纹理进行采样，得到阴影信息。&lt;/p>
&lt;blockquote>
&lt;p>这些宏会使用上下文变量来进行相关计算，例如 TRANSFER_SHADOW 会使用 v.vertex 或 a.pos 来计算坐标，因此为了能够让这些宏正确工作，我们需要保证自定义的变量名和这些宏中使用的变量名相匹配。我们需要保证：a2f 结构体中顶点坐标变量名必须是 vertex，顶点着色器的输出结构体 v2f 必须命名为 v，且 v2f 中的顶点位置变量必须命名为 pos。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unity&lt;/span> &lt;span class="n">Shaders&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Chapter&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Shadow&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Diffuse&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Diffuse&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Gloss&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Gloss&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 环境光和第一像素光(方向光)Pass&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// 显然需要添加此声明&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="c1">// 需要这些文件获得内置宏&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 这个宏用于声明一个作用于阴影纹理采样的坐标&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 这个宏用于将阴影坐标传递到像素着色器&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 使用宏坐标来采样阴影贴图&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">shadow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SHADOW_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">shadow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 其他像素光源Pass&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardAdd&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">One&lt;/span> &lt;span class="n">One&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// 显然需要添加此声明&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdadd&lt;/span>
&lt;span class="c1">// 使用下面的line为点光源和聚光灯添加阴影&lt;/span>
&lt;span class="c1">// #pragma multi_compile_fwdadd_fullshadows&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">position&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">ifdef&lt;/span> &lt;span class="n">USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">ifdef&lt;/span> &lt;span class="n">USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_WorldToLight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">FallBack&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="统一管理光照和衰减">统一管理光照和衰减&lt;/h3>
&lt;p>在前面，我们已经讲过如何在 UnityShader 的前向渲染路径中计算光照衰减——在 Base Pass 中，平行光的衰减因子总是等于1，而在 Additional Pass 中，我们需要判断该 Pass 处理的光源类型，再使用内置变量和宏计算衰减因子。那么是不是有一个方法可以同时计算两个信息呢？好消息是，Unity 在 Shader 里提供了这样的功能，这主要是通过内置的 &lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong> 宏来实现的。&lt;/p>
&lt;p>&lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong> 是 Unity 内置的用于计算光照衰减和阴影的宏，我们可以在内置的 AutoLight.cginc 里找到它们的相关声明。它接收3个参数：&lt;/p>
&lt;ul>
&lt;li>atten：光照衰减和阴影值相乘后的结果存储到第一个参数中。注意到，我们并没有在代码中声明第一个参数atten，这是因为 &lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong> 会帮我们声明这个变量。&lt;/li>
&lt;li>结构体 v2f，这个参数会传递给 &lt;strong>SHADOW_ATTENUATION&lt;/strong> ，用来计算阴影值。&lt;/li>
&lt;li>世界空间的坐标，正如我们在前面讲的那样，这个参数会用于计算光源空间下的坐标，再对光照衰减纹理采样得到的光照衰减。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ShadowRecive&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specualr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specualr&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">SpecularPower&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specualr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specualr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardAdd&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">One&lt;/span> &lt;span class="n">One&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdadd&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specualr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specualr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Fallback&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于我们使用了 &lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong>，我们的 &lt;strong>Base Pass&lt;/strong> 和 &lt;strong>Additional Pass&lt;/strong> 的代码得以统一，我们不需要在 Base Pass 里单独处理阴影，也不需要在 Additional Pass 中判断光源类型来处理光照衰减，一切都只需要通过 &lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong> 来完成即可。&lt;/p>
&lt;p>如果我们希望可以在 &lt;strong>Additional Pass&lt;/strong> 中添加阴影效果，就需要使用 &lt;code>#pragma multi_compile_fwdadd_fullshadows&lt;/code> 编译指令来代替 &lt;strong>Additional Pass&lt;/strong> 中的 &lt;code>#pragma multi_compile_fwdadd&lt;/code> 指令。这样一来，Unity 也会为这些额外的逐像素光源计算阴影，并传递给 Shader。&lt;/p>
&lt;h3 id="透明物体的阴影">透明物体的阴影&lt;/h3>
&lt;h4 id="透明度测试的阴影">透明度测试的阴影&lt;/h4>
&lt;p>透明度测试的处理比较简单，但如果我们仍然直接使用 &lt;strong>VertexLit&lt;/strong>、&lt;strong>Diffuse&lt;/strong>、&lt;strong>Specular&lt;/strong> 等做为回调，往往无法得到正确的阴影。这是因为透明度测试需要在片元着色器中舍弃某些片元，而 &lt;strong>Transparent/Cutout/VertexLit&lt;/strong> 中的阴影投射纹理并没有进行这样的操作。&lt;/p>
&lt;p>我们采用和透明度测试时同样的 Shader 代码进行改造：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>添加需要的头文件：&lt;/p>
&lt;pre>&lt;code>#include &amp;quot;Lighting.cginc&amp;quot;
#include &amp;quot;AutoLight.cginc&amp;quot;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>在 v2f 中使用内置宏 SHADOW_COORDS 声明阴影纹理坐标：&lt;/p>
&lt;p>注意到，由于我们已经占用了3个插值寄存器（使用 &lt;strong>TEXCOORD0&lt;/strong>、&lt;strong>TEXCOORD1&lt;/strong> 和 &lt;strong>TEXCOORD2&lt;/strong> 修饰的变量），因此 &lt;strong>SHADOW_COORDS&lt;/strong> 传入的参数是&lt;strong>3&lt;/strong>，这意味着阴影纹理坐标将占用第四个插值寄存器 &lt;strong>TEXCOORD3&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>在顶点着色器中使用内值宏 &lt;strong>TRANSFER_SHADOW&lt;/strong> 计算阴影纹理坐标后传递给片元着色器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在片元着色器中，使用内置宏 &lt;strong>UNITY_LIGHT_ATTENUATION&lt;/strong> 计算阴影和光照衰减&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这次，我们更改它的 &lt;strong>Fallback&lt;/strong>，使用 &lt;strong>Transparent/Cutout/VertexLit&lt;/strong> 作为它的回调 Shader&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">TransparentVetexLit&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specualr&lt;/span> &lt;span class="n">Power&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="n">_Cutoff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">CutOff&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.2&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Cutoff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">clip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_Cutoff&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardAdd&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">One&lt;/span> &lt;span class="n">One&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdadd&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Cutoff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">clip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_Cutoff&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Fallback &amp;#34;VertexLit&amp;#34;&lt;/span>
&lt;span class="n">Fallback&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Cutout&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">VertexLit&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="透明度混合的阴影">透明度混合的阴影&lt;/h4>
&lt;p>事实上，所有内置的透明度混合的 Unity Shader，如 &lt;strong>Transparent/VertexLit&lt;/strong> 等，都没有包含阴影投射的 Pass。这意味着，这些半透明物体不会参与深度图和阴影映射纹理的计算，也就是说，它们不会向其他物体投射阴影，同样它们也不会接受来自其它物体的阴影 。&lt;/p>
&lt;p>由于透明度混合需要关闭深度写入，由此带来的问题也影响了阴影的生成。总体来说，要想为这些透明半透明物体产生正确的阴影，需要在每个光源空间下仍然严格按照从后往前的顺序进行渲染，这会让阴影处理变得非常复杂，而且会影响性能。因此，在 Unity 中，所有内置的半透明 Shader 是不会产生任何阴影效果的。&lt;/p>
&lt;h4 id="强制阴影效果">强制阴影效果&lt;/h4>
&lt;p>我们可以使用一些 &lt;strong>dirty trick&lt;/strong> 来强制为半透明物体生成阴影，这可以通过把它们的 &lt;strong>Fallback&lt;/strong> 设置为 &lt;strong>VertexLit、Diffuse&lt;/strong> 这些不透明物体使用的 UnityShader，这样 Unity 就会在它的 &lt;strong>Fallback&lt;/strong> 找到一个阴影投射的Pass，然后我们可以通过物体的 &lt;strong>Mesh Render&lt;/strong> 组件上的 &lt;strong>Cast Shadows&lt;/strong> 和 &lt;strong>Receive Shadows&lt;/strong> 选项来控制是否需要向其他物体投射或接收阴影。&lt;/p>
&lt;p>代码参考实现：(这一串代码并没用，而且还不能投射阴影，通过修改后也只能投射阴影不能接受阴影)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unity&lt;/span> &lt;span class="n">Shaders&lt;/span> &lt;span class="n">Book&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Chapter&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Alpha&lt;/span> &lt;span class="n">Blend&lt;/span> &lt;span class="n">With&lt;/span> &lt;span class="n">Shadow&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Color&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="n">Tint&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Main&lt;/span> &lt;span class="n">Tex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">_AlphaScale&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Alpha&lt;/span> &lt;span class="n">Scale&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">IgnoreProjector&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">True&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">SrcAlpha&lt;/span> &lt;span class="n">OneMinusSrcAlpha&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">_AlphaScale&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TRANSFORM_TEX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 传递阴影坐标到像素着色器&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">texColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c1">// UNITY_LIGHT_ATTENUATION)不仅可以计算衰减，还可以计算阴影信息&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_AlphaScale&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">FallBack&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">VertexLit&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="c1">// 或用force应用阴影&lt;/span>
&lt;span class="c1">// FallBack &amp;#34;VertexLit&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="可使用的标准光照着色器">可使用的标准光照着色器&lt;/h2>
&lt;p>在这里，这个 Shader 包含了对法线纹理、多光源、光照衰减和阴影的相关处理。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">DiffuseBump&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">BumpTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specualr&lt;/span> &lt;span class="n">Power&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// Base Pass 平行光逐像素渲染&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdbase&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">tangent&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TANGENT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW0&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW2&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 声明一个光源的阴影映射纹理&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 应用 _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 应用 _BumpTex 的缩放和平移&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldTangent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点切线转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldBinormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldTangent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算得到世界空间下的顶点副切线&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算声明过的阴影映射纹理&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 世界空间下的坐标&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 世界空间下的光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 世界空间下的视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnpackNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 采样法线贴图&lt;/span>
&lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">)));&lt;/span>&lt;span class="c1">// 法线坐标从切线空间转到世界空间&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn-phong&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 采样常规纹理，计算漫反射系数&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算漫反射光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算高光&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算光照衰减和阴影&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardAdd&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="c1">// addtional Pass 逐像素渲染&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">multi_compile_fwdadd&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AutoLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">tangent&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TANGENT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW0&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW2&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">SHADOW_COORDS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 声明一个光源的阴影映射纹理&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 应用 _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 应用 _BumpTex 的缩放和平移&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldTangent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点切线转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldBinormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldTangent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算得到世界空间下的顶点副切线&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">TRANSFER_SHADOW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算声明过的阴影映射纹理&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 世界空间下的坐标&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 世界空间下的光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 世界空间下的视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnpackNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 采样法线贴图&lt;/span>
&lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">)));&lt;/span>&lt;span class="c1">// 法线坐标从切线空间转到世界空间&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn-phong&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 采样常规纹理，计算漫反射系数&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算漫反射光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecualrPower&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算高光&lt;/span>
&lt;span class="n">UNITY_LIGHT_ATTENUATION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算光照衰减和阴影&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">atten&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Fallback&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Diffuse&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>该章主要讲述了前向渲染中，不同类型光源的处理方式，以及 Unity 如何计算光照阴影 (shadowmap 技术)，最后又探讨了一下透明物体的阴影计算。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>shader 中有两个 Pass，Base Pass 逐像素计算最重要的平行光，以及所有逐顶点光源和 SH 光源；Additional Pass 根据权重逐像素计算其它类型的光源，每个光源执行一次 Pass。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算光照衰减，常用的是纹理查找，也可直接用数学方法进行计算。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="cp">#ifdef USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="c1">// 获取平行光的方向&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="cp">#else&lt;/span>
&lt;span class="c1">// 通过点光源（或聚光灯）的位置减去世界空间下顶点位置，获得光的方向&lt;/span>
&lt;span class="n">fixed3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="cp">#endif&lt;/span>
&lt;span class="c1">// 判断当前光源是否是平行光&lt;/span>
&lt;span class="cp">#ifdef USING_DIRECTIONAL_LIGHT&lt;/span>
&lt;span class="c1">// 平行光衰减值为1&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="cp">#else&lt;/span>
&lt;span class="c1">// 如果是点光源，光的衰减值计算&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="o">defined&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">POINT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_WorldToLight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 如果是聚光灯，光的衰减值计算&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">elif&lt;/span> &lt;span class="o">defined&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SPOT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">lightCoord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_WorldToLight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mo">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTexture0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_LightTextureB0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightCoord&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightCoord&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">UNITY_ATTEN_CHANNEL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="k">else&lt;/span>
&lt;span class="k">fixed&lt;/span> &lt;span class="n">atten&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">endif&lt;/span>
&lt;span class="cp">#endif&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Shader入门精要-透明效果</title><link>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/</link><pubDate>Tue, 01 Jun 2021 14:24:53 +0800</pubDate><guid>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/</guid><description>&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/topimg.png" alt="Featured image of post Shader入门精要-透明效果" />&lt;h1 id="技术美术透明效果">技术美术——透明效果&lt;/h1>
&lt;p>Unity 中通常使用两种方法来实现透明：&lt;strong>透明度测试 (AlphaTest)&lt;/strong> 和 &lt;strong>透明度混合 (AlphaBlend)&lt;/strong> 。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>透明度测试&lt;/strong>：一个片元透明度不满足条件(小于某个阈值)，那么它对应的片元就会被舍弃。被舍弃的片元将不再进行任何处理，不如写入颜色信息到 color buffer；否则，按照普通的不透明物体的处理方式来处理它，即进行 &lt;strong>深度测试&lt;/strong>、&lt;strong>深度写入&lt;/strong> 等。透明度测试不需要关闭深度写入，它与其他不透明物体最大的不同就是它会根据透明度来舍弃一些片元，所以它产生的效果很极端，要么完全透明，要么完全不透明，不能实现半透明效果。&lt;/li>
&lt;li>&lt;strong>透明度混合&lt;/strong>：使用当前片元的透明度作为混合因子，与已经存储在 color buffer 中的颜色值进行混合，得到新的颜色。透明度混合需要 &lt;strong>关闭深度写入&lt;/strong>，也就是当前物体的深度信息不会被记录，但是 &lt;strong>深度测试是开启的&lt;/strong>，也就是说当使用透明度混合渲染一个片元时，还是会比较当前物体的深度值与 depth buffer 中的深度值，如果当前物体的深度值距离摄像机更远，那么就不再进行混合操作。这一点决定了，一个不透明物体出现在一个透明物体的前面，先渲染了不透明物体，它可以正常的遮挡住透明物体。归根结底，&lt;strong>对于透明度混合，depth buffer 是只可读的&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2 id="渲染顺序">渲染顺序&lt;/h2>
&lt;p>对于透明度混合技术，我们需要关闭深度写入，但是关闭深度写入，那我们就需要小心处理透明物体的渲染顺序。&lt;/p>
&lt;p>&lt;strong>为什么需要关闭深度写入？&lt;/strong>&lt;/p>
&lt;p>如果不关闭深度写入，半透明物体表面背后的面本来可以透过表面看到背后的面，由于深度测试判断半透明物体表面距离摄像机更近，就会导致表面背后的面被剔除，也就无法透过表面看到背后的面。&lt;/p>
&lt;p>&lt;strong>关闭深度写入会发生什么？&lt;/strong>&lt;/p>
&lt;p>假设我们要渲染两个物体，一个是半透明物体 A，一个是不透明物体 B，A 在 b 前面 ( A 离摄像机更近)&lt;/p>
&lt;ul>
&lt;li>一，先渲染 B，再渲染 A。因为不透明物体开启了深度测试和深度写入，所以 B 的数据会写进深度缓存里，当我们渲染 A 的时候，先提取深度缓存中的数据，然后和 A 进行透明度混合，显示结果正确。&lt;/li>
&lt;li>二，先渲染 A，再渲染 B。由于半透明物体关闭了深度吸入，A 的深度信息不会写入深度缓存里；当渲染 B 的时候，B 的深度信息直接覆盖写入深度缓存里。实际上 B 应该再 A 的后面，但是从视角来看，B 出现在了 A 前面，显示结果错误。&lt;/li>
&lt;/ul>
&lt;p>又假设两个物体都是半透明物体呢？假设我们有两个物体 A 和 B，A 在 B 的前面（离摄像机更近），并且两者都是半透明物体。&lt;/p>
&lt;ul>
&lt;li>一，先渲染 B，再渲染 A，B 的颜色会被写入颜色缓冲（和深度缓冲很像，可以理解为当前颜色），这样 A 会正确的获得颜色缓冲中的 B 的颜色数据，然后正确的混合。&lt;/li>
&lt;li>二，先渲染 A，再渲染 B，A 的数据会被先写入颜色缓冲，然后渲染 B 的时候，会提取 A 的数据，和 B 进行混合。这样最终结果看起来像是 B 在 A 的前面。这就是错误的结果。&lt;/li>
&lt;/ul>
&lt;h2 id="引擎如何处理透明度混合技术">引擎如何处理透明度混合技术&lt;/h2>
&lt;ol>
&lt;li>先渲染所有的不透明物体，并开启他们的深度写入和深度测试。&lt;/li>
&lt;li>把半透明物体按他们距离摄像机的远近进行排序，然后按照从后往前的顺序渲染这些半透明物体，并开启他们的深度测试，但关闭深度写入。&lt;/li>
&lt;/ol>
&lt;h3 id="引擎无法处理的问题">引擎无法处理的问题&lt;/h3>
&lt;p>&lt;figure style="flex-grow: 114; flex-basis: 274px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/loop-halftransparent-object.png" data-size="1024x895">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/loop-halftransparent-object.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/loop-halftransparent-object_hu0db74e15e313c6ae7f279217c18728b8_42973_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/loop-halftransparent-object_hu0db74e15e313c6ae7f279217c18728b8_42973_1024x0_resize_box_2.png 1024w"
width="1024"
height="895"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>在上图中，由于3个物体相互重叠，我们不可能的得到一个正确的排序顺序。这时候，我们可以选择把物体拆分成两个部分，然后再进行正确的排序。&lt;/p>
&lt;p>但即便我们通过分割的方法解决了循环覆盖的问题，还是会有其他的情况来捣乱。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 156; flex-basis: 374px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/camrea-depth.png" data-size="1024x656">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/camrea-depth.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/camrea-depth_hu7ad251c1d3ea249d926109d5bbf0ad7a_67649_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/camrea-depth_hu7ad251c1d3ea249d926109d5bbf0ad7a_67649_1024x0_resize_box_2.png 1024w"
width="1024"
height="656"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>一个物体的网格结构往往占据了空间中的某一块区域，也就是说，这个网格上每一个点的深度值可能都不一样，我们选择哪个深度值来作物整个物体的深度值和其他物体进行排序呢？不幸的是基于上图的情况，无论我们选择哪个点，排序的结果都是A物体在B物体前面。这种问题解决方案通常也是分割网格。&lt;/p>
&lt;h2 id="unityshader-渲染顺序">UnityShader 渲染顺序&lt;/h2>
&lt;p>Unity 通过一组 &lt;strong>Queue&lt;/strong> 标签来决定模型属于哪个 &lt;strong>渲染队列&lt;/strong>，队列由整数索引表示，值越小越先渲染。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>队列索引号&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Background&lt;/td>
&lt;td>1000&lt;/td>
&lt;td>最开始渲染的队列，通常使用该队列来渲染那些需要绘制再背景上的物体&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Geometry&lt;/td>
&lt;td>2000&lt;/td>
&lt;td>默认的渲染队列，大多数物体使用这个队列。不透明物体使用该队列&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AlphaTest&lt;/td>
&lt;td>2450&lt;/td>
&lt;td>需要透明度测试的物体使用这个队列。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transparent&lt;/td>
&lt;td>3000&lt;/td>
&lt;td>在所有 Geometry 和 AlphaTest 物体渲染后，再按从后往前的顺序进行渲染，任何使用了透明度混合（例如关闭深度写入的 Shader）的物体都应该使用该队列&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Overlay&lt;/td>
&lt;td>4000&lt;/td>
&lt;td>用于实现一些叠加效果，任何需要再最后渲染的物体都应该使用该队列&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>如果我们要控制物体的渲染顺序，需要在着色器中指出。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">SubShader&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="c1">// Tansparent 渲染队列&lt;/span>
&lt;span class="n">Pass&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 变比深度写入&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="c1">//...other code&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="透明度测试">透明度测试&lt;/h2>
&lt;p>透明度测试简单粗暴，片元透明度不满足条件则被舍弃，且被舍弃的片元不会参与后面的计算，深度写入，颜色写入。再片元着色器中使用 &lt;code>clip&lt;/code> 函数来进行透明度测试，定义如下。&lt;/p>
&lt;ul>
&lt;li>函数：void clip(float4 x); void clip(float3 x); void clip(float2 x); void clip(float x);&lt;/li>
&lt;li>参数：裁剪时使用的标量或矢量条件；&lt;/li>
&lt;li>描述：如果给定参数任何一个分量是负数，就会舍弃当前像素的输出颜色。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">AlphaTestOff&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Texture&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_AlphaClip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AlphaClip&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">TransparentCutout&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AlphaTest&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">IgnoreProjector&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="k">true&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="c1">// 关闭剔除效果&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_AlphaClip&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">clip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">albedo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">_AlphaClip&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 简单粗暴裁剪掉片元，被裁减片元不再参与之后的计算&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="透明度混合">透明度混合&lt;/h2>
&lt;p>可以实现真正的半透明效果。使用当前片元的透明度作为混合因子，与已经存储在颜色缓存中的颜色值进行混合，得到新的颜色。但是，需要关闭深度写入，要非常小心物体的渲染顺序。为了进行混合，还需要使用 Unity 提供的混合命令 - &lt;strong>Blend&lt;/strong>，&lt;strong>Blend&lt;/strong> 是 Unity 提供的设置混合模式的命令。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>语义&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Blend Off&lt;/td>
&lt;td>关闭混合&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blend SrcFactor DstFactor&lt;/td>
&lt;td>开启混合，设置混合因子。源颜色 (片元颜色) 乘以 SrcFactor，而目标颜色 (color buffer的颜色)乘以 DstFactor，然后把两者相加后再存入颜色缓冲中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blend SrcFactor DstFactor, SrcFactorA DstFactorA&lt;/td>
&lt;td>和上面几乎一样，只是使用不同的因子来混合透明通道&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BlendOp BlendOperation&lt;/td>
&lt;td>并非把源颜色与目标颜色简单相加后混合，而是使用 BlendOperation 对他们进行其他操作&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这里使用第二种语义，即 &lt;strong>Blend SrcFactor DsFactor&lt;/strong> 来进行混合。我们需要把源颜色的混合因子 &lt;strong>SrcFactor&lt;/strong> 设置为 SrcAlpha，而目标颜色的混合因子 &lt;strong>DstFactor&lt;/strong> 设为 &lt;strong>OneMinusSrcAlpha&lt;/strong> 。这样意味着经过混合后新的颜色是：&lt;/p>
&lt;blockquote>
&lt;p>DstColornew = SrcAlpha * SrcColor + ( 1 - SrcAlpha ) * DstColorold&lt;/p>
&lt;/blockquote>
&lt;h3 id="开启深度写入的半透明效果">开启深度写入的半透明效果&lt;/h3>
&lt;p>关闭深度写入会带来各种问题，下图给出了由于排序错误而产生的错误的透明效果，这是由于我们关闭了深度写入造成的。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 112; flex-basis: 270px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide.png" data-size="616x546">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide_huab81494e3fbb45b2fc522ca14c003199_192547_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide_huab81494e3fbb45b2fc522ca14c003199_192547_1024x0_resize_box_2.png 1024w"
width="616"
height="546"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>为了解决这一问题，我们给出了一种解决办法，使用两个 &lt;strong>Pass&lt;/strong> 来渲染模型：&lt;/p>
&lt;ul>
&lt;li>第一个 Pass 开启深度写入，但不输出任何颜色信息，它的目的仅仅是为了把该模型的深度值写入深度缓冲区中；&lt;/li>
&lt;li>第二个 Pass 进行正常的透明度混合，由于上一个 Pass 已经得到了逐像素的正确的深度信息，该 Pass 就可以按照像素级别的深度排序结果进行透明渲染。&lt;/li>
&lt;/ul>
&lt;p>这样做的缺陷在于，多使用一个 &lt;strong>Pass&lt;/strong> 会对性能造成一定的影响。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 110; flex-basis: 266px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide-true.png" data-size="616x555">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide-true.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide-true_hu3e27bfec6ce75d13a8bd649b68bc9dd9_139077_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C/alpha-blend-one-slide-true_hu3e27bfec6ce75d13a8bd649b68bc9dd9_139077_1024x0_resize_box_2.png 1024w"
width="616"
height="555"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>我们使用同上面透明度混合同样的代码，仅仅增加一个 Pass 用于深度写入。在该 Pass 的第一行，我们开起了深度写入；第二行我们使用了一个新的渲染命令—— &lt;strong>ColorMask&lt;/strong>，在 ShaderLab 中，ColorMask 用于设置颜色通道的掩码。语义如下：&lt;/p>
&lt;blockquote>
&lt;p>ColorMask RGB | A | 0 | 其他任何R、G、B、A的组合&lt;/p>
&lt;/blockquote>
&lt;p>当ColorMask设置为0时，意味着该Pass不写入仍和颜色通道，即不会输出任何颜色。这正是我们所需要的——该Pass只需要写入深度缓存即可。这是 &lt;strong>单面渲染&lt;/strong> 详细代码：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">AlphaBlendOneSlide&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_AlphaBlend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">AlphaBlend&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">IngoreProjector&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">True&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// 开启深度写入&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">On&lt;/span>
&lt;span class="c1">// 不写入任何颜色信息到 color buffer&lt;/span>
&lt;span class="n">ColorMask&lt;/span> &lt;span class="mo">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 关闭深度写入，也就是不将深度值存入深度buffer中&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">Off&lt;/span>
&lt;span class="c1">// 混合方式&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">SrcAlpha&lt;/span> &lt;span class="n">OneMinusSrcAlpha&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_AlphaBlend&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置从模型空间转到世界空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化世界法线&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化主光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">texColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 从纹理读取漫反射系数&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">// half lambert&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_AlphaBlend&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>双面渲染&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">AlphaBlendTwoSlide&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Alpha&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Alpha&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">IgnoreProjector&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">True&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Front&lt;/span> &lt;span class="c1">// 剔除正面&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">off&lt;/span> &lt;span class="c1">// 关闭深度写入&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">SrcAlpha&lt;/span> &lt;span class="n">OneMinusSrcAlpha&lt;/span> &lt;span class="c1">// 混合方式&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Alpha&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线从模型空间转世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置从模型空间转世界空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化法线方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化主光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">texColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Alpha&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Back&lt;/span> &lt;span class="c1">// 剔除背面&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">off&lt;/span> &lt;span class="c1">// 关闭深度写入&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">SrcAlpha&lt;/span> &lt;span class="n">OneMinusSrcAlpha&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Alpha&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线从模型空间转世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置从模型空间转世界空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化法线方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化主光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">texColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Alpha&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>关于半透明物体的渲染解决方法，&lt;strong>多添加一个 Pass&lt;/strong>；&lt;/p>
&lt;p>单面渲染，第一个 Pass 开启深度写入 &lt;code>ZWrite On&lt;/code> 且不要写入任何信息(颜色、透明度) &lt;code>ColorMask 0&lt;/code>；第二个 Pass 关闭深度写入 &lt;code>ZWrite Off&lt;/code> ，设置好混合方式 &lt;code>Blend SrcAlpha OneMinusSrcAlpha&lt;/code> 。&lt;/p>
&lt;p>双面渲染，两个 Pass 同时关闭深度写入 &lt;code>ZWrite On&lt;/code>，设置好混合方式 &lt;code>Blend SraAlpha OneMinusSrcAlpha&lt;/code>，第一个 Pass 剔除正面 &lt;code>Cull Front&lt;/code>，第二个 Pass 剔除背面 &lt;code>Cull Back&lt;/code>。&lt;/p>
&lt;p>调整透明度，从常规纹理那儿读取纹理的 Alpha 值&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">half4&lt;/span> &lt;span class="n">texColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 纹理采样 &lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">// half lambert&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_AlphaBlend&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Shader入门精要-基础纹理</title><link>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/</link><pubDate>Mon, 31 May 2021 16:00:26 +0800</pubDate><guid>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/</guid><description>&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/topimg.png" alt="Featured image of post Shader入门精要-基础纹理" />&lt;h1 id="技术美术基础纹理">技术美术——基础纹理&lt;/h1>
&lt;h2 id="常规纹理">常规纹理&lt;/h2>
&lt;p>纹理的一种使用方式就是作为常规纹理，可以理解为一张照片。在这里纹理的作用是代替 &lt;strong>物体的漫反射系数&lt;/strong> ，这里我们会再之前的 Blinn-Phong 高光反射 shader 的基础上实现一个基础的纹理 shader。这里可以知道常规纹理会参与 &lt;strong>环境光&lt;/strong> ，物体 &lt;strong>漫反射&lt;/strong> 的计算。在基本光照模型中，由于没有相关材质贴图，所以在计算公式中&lt;/p>
&lt;blockquote>
&lt;p>C = (c * m) * max(0 , n * l )&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>m&lt;/strong> 的值取为 1，不会影响到漫反射光的计算。当 &lt;strong>m&lt;/strong> 值存在时，也就是有常规纹理的时候，光照计算中的 &lt;strong>m&lt;/strong> 就要从常规纹理图中读取，读取方法见下面 albedo 的计算方法。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">MainTex0&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Texture&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularCol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Col&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Strength&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">LOD&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">_SpecularCol&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点位置从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 使用纹理属性的_ST对顶点纹理坐标进行变换&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 主光源放方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// Lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// BlinnPhong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 漫反射系数，从纹理采样漫反射颜色作为其值&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="c1">// 漫反射光 = 入射光线强度 * 材质的漫反射系数 * 取值为正数(表面法线方向 · 光源方向)&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// half lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_SpecularCol&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// blinn phong&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fixed4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">ambient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="凹凸映射">凹凸映射&lt;/h2>
&lt;p>凹凸映射的作用就是使用一张纹理来修改模型表面的法线，提供更多的细节效果。主要有两种方法：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>高度映射&lt;/p>
&lt;p>一张高度纹理来模拟表面位移，然后得到一个修改后的法线值。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>法线映射&lt;/p>
&lt;p>一张法线纹理来直接存储表面法线。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>通常我们将高度映射和法线映射当成一种技术，但是两者的本质是有所区别的。&lt;/p>
&lt;h3 id="法线纹理">法线纹理&lt;/h3>
&lt;p>法线纹理中存储的是表面的法线方向，由于发现分量的取值范围在 [-1, 1] 之间，而像素的分量范围在 [0, 1] ，因此两者的转换还需要做一个映射：&lt;/p>
&lt;blockquote>
&lt;p>pixel = (normal + 1) / 2&lt;/p>
&lt;/blockquote>
&lt;p>反映射后就能得到原先的法线方向&lt;/p>
&lt;blockquote>
&lt;p>normal = pixel * 2 - 1&lt;/p>
&lt;/blockquote>
&lt;h4 id="法线的坐标空间">法线的坐标空间&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>模型空间的法线纹理&lt;/p>
&lt;p>模型顶点的法线定义在模型空间中，一种直接的想法就是将修改后的模型空间中的表面法线存储在一张纹理中，这种纹理被称之为 &lt;strong>模型空间的法线纹理&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>切线空间的法线纹理&lt;/p>
&lt;p>实际应用中，我们常用模型顶点的 &lt;strong>切线空间&lt;/strong> 存储法线。对于模型的每个顶点，都有属于自己的切线空间，模型的顶点就是切线空间的原点，顶点的法线作切线空间的 z 轴 (n)，顶点的切线方向作 x 轴 (t)，顶点的 y 轴可由 x、z 叉乘求得，也被称为 &lt;strong>副切线&lt;/strong> 或 &lt;strong>副法线&lt;/strong> (b)，这就是 &lt;strong>切线空间的法线纹理&lt;/strong>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="计算方式">计算方式&lt;/h4>
&lt;p>由于法线纹理中存储的是切线空间下的方向，因此我们通常有两种选择：&lt;/p>
&lt;ol>
&lt;li>在切线空间下进行光照计算，需要将光照方向、视角方向变换到切线空间下。&lt;/li>
&lt;li>在世界空间下进行光照计算，需要把采样得到的法线方向变换到世界空间下，再和世界空间下的光照方向和视角方向进行计算。&lt;/li>
&lt;/ol>
&lt;p>效率上考虑，第一种优于第二种，因为整个空间的变换过程在顶点着色器中完成。&lt;/p>
&lt;p>通用性考虑，第二种优于第一种，因为有时需要在世界空间进行一次矩阵操作。&lt;/p>
&lt;h5 id="切线空间计算">切线空间计算&lt;/h5>
&lt;p>思路：1. 在顶点着色器里将模型空间下的光源方向、视角方向转到切线空间；2. 在片元着色器里直接对法线纹理进行采样，得到切线空间下的法线数值；3. 进行光照计算。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">MainBumpT&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">BumpTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_BumpStrength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Bump&lt;/span> &lt;span class="n">Strength&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="n">Tint&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Strength&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">LOD&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="c1">//#include &amp;#34;UnityCG.cginc&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">_BumpStrength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">tangent&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TANGENT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// flaot4 因为使用了两张纹理贴图，所以成 flaot4 了&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightDir&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// MainTex 的 Tiling 和 Offset&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// BumpTex 的 Tiling 和 offset&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">binnormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 得到模型空间下的副切线(.w 是取一个方向作为切线方向)&lt;/span>
&lt;span class="n">float3x3&lt;/span> &lt;span class="n">rotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float3x3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">binnormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 一个切线空间 (顶点切线方向作为 x,叉乘值作为 y, 顶点法线作为 z)&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ObjSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 模型空间下的光照方向转到切线空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ObjSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 模型空间下的视角方向转到切线空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化光照方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tangentViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化半角方向&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">packNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 对法线贴图进行采样&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">tangentNormal&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">UnpackNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packNormal&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="o">*=&lt;/span>&lt;span class="n">_BumpStrength&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 调整法线缩放，控制凹凸强度&lt;/span>
&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tangentLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">RdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 漫反射系数(从贴图中读取)&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// half lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RdotL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularStrength&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="世界空间计算">世界空间计算&lt;/h5>
&lt;p>思路：1. 在顶点着色器里将模型空间下的顶点位置、顶点法线、顶点切线、顶点副切线转到世界空间，并创建法线从切线空间转世界空间的 &lt;strong>矩阵&lt;/strong>，用于后面采样法线纹理将法线从切线空间转到世界空间；2. 计算世界空间下的光照方向、视角方向，对法线纹理进行采样，并且将其从切线空间转到世界空间；3. 进行光照计算。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">MainBumpW&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">BumpTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Bump&lt;/span> &lt;span class="n">Scale&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Power&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">tangent&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TANGENT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">TtoW2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">TEXCOORD3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _MainTex 缩放平移属性&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _BumpTex 缩放平移属性&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 顶点位置从模型空间转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldTangent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点切线从模型空间转到世界空间&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldBinormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldTangent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 计算世界空间下的副切线&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldTangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldBinormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">lightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnpackNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 从法线贴出中读取法线信息&lt;/span>
&lt;span class="n">bump&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="o">*=&lt;/span>&lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 缩放法线贴图&lt;/span>
&lt;span class="n">bump&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">bump&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">half3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TtoW2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bump&lt;/span>&lt;span class="p">)));&lt;/span>&lt;span class="c1">// 切线空间转世界空间&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bump&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 读取漫反射系数&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">ambient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="渐变纹理">渐变纹理&lt;/h2>
&lt;p>如常规纹理一样，我们在渲染中使用纹理是为了定义一个物体的颜色。&lt;strong>纹理其实可以用于存储任何表面属性&lt;/strong>，一种常见的作法就是使用纹理渐变来控制漫反射光照结果。其核心部分是纹理采样计算部分，使用了 &lt;strong>Half Lambert&lt;/strong> 作为采样UV。&lt;/p>
&lt;blockquote>
&lt;p>注意将纹理的 Wrap mode 设为 Clamp&lt;/p>
&lt;/blockquote>
&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 426px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/gradient.png" data-size="1541x867">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/gradient.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/gradient_hu553dc67d125d0461a42a74d531399e0e_372717_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/gradient_hu553dc67d125d0461a42a74d531399e0e_372717_1024x0_resize_box_2.png 1024w"
width="1541"
height="867"
loading="lazy"
alt="渐变纹理">
&lt;/a>
&lt;figcaption>渐变纹理&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gradient&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_RampTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Ramp&lt;/span> &lt;span class="n">Texture&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="n">Tint&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Power&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_RampTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_RampTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">Float&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unity_ObjectToWorld&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 位置从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_RampTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_RampTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// UV 的缩放和平移属性&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化法线方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化主光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityWorldSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 归一化视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 归一化半角方向&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuseColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_RampTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">half2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NdotL&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 反射颜色 = 使用渐变纹理来采样半兰伯特光照生成的纹理&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">diffuseColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">FallBack&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="遮罩纹理">遮罩纹理&lt;/h2>
&lt;p>遮罩纹理可以让我们更加自由的控制模型表面的性质。遮罩纹理的使用一般是：通过采样得到遮罩纹理的纹素值，然后使用其中某个（或某几个）通道的值来与某种表面属性进行相乘，这样，当该通道的值为0时，可以保护表面不受该属性的影响。这里样例使用的高光的 &lt;strong>mask&lt;/strong> ，并且是纹理的 &lt;strong>r&lt;/strong> 通道。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 425px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/mask.png" data-size="1537x867">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/mask.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/mask_hu6ab1f5e7d148a1d5886edf48c8120b93_314054_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E5%9F%BA%E7%A1%80%E7%BA%B9%E7%90%86/mask_hu6ab1f5e7d148a1d5886edf48c8120b93_314054_1024x0_resize_box_2.png 1024w"
width="1537"
height="867"
loading="lazy"
alt="MainBump &amp;#43; MainBumpMask">
&lt;/a>
&lt;figcaption>MainBump + MainBumpMask&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Unlit&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mask&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_MainTex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">MainTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_Color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">BumpTex&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">whire&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">BumptScale&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;span class="n">_SpecularMask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Mask&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">white&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">_SpecularScale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Scale&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specualr&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span> &lt;span class="n">Power&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">8.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">256&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightModel&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">ForwardBase&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">LOD&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_MainTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">sampler2D&lt;/span> &lt;span class="n">_SpecularMask&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularScale&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">texcoord&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">tangent&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TANGENT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">posWorld&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">uv&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightDir&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_MainTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _MainTex 的缩放和平移&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">texcoord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">_BumpTex_ST&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// _BumpTex 的缩放和平移&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">binormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cross&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 副切线&lt;/span>
&lt;span class="n">float3x3&lt;/span> &lt;span class="n">rotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float3x3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tangent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">binormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 变换矩阵&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ObjSpaceLightDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 主光源方向从模型空间转到切线空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mul&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ObjSpaceViewDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 视角方向从模型空间转到切线空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lightDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 切线空间下主光源方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentViewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 切线空间下的视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tangentViewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 半角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">tangentNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnpackNormal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_BumpTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zw&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 从法线贴图读取法线信息&lt;/span>
&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="n">_BumpScale&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 缩放法线&lt;/span>
&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">)));&lt;/span> &lt;span class="c1">// 计算法线的 z 值&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tangentLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tangentNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn-phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_MainTex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xy&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 从材质贴图计算漫反射率&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">albedo&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算漫反射光&lt;/span>
&lt;span class="k">half&lt;/span> &lt;span class="n">specularMask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tex2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_SpecularMask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uv&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 从高光贴图中读取高光反射值&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">specularMask&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularPower&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>拓展&lt;/strong> ：Mask 的应用还有很大的空间，可以试着举例出来：UV 顶点动画。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>漫反射系数&lt;/th>
&lt;th>法线系数&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>无纹理&lt;/td>
&lt;td>1&lt;/td>
&lt;td>模型法线&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>常规纹理&lt;/td>
&lt;td>tex2D(_MainTex,i.uv).rgb * _Color.rgb&lt;/td>
&lt;td>模型法线&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>法线纹理&lt;/td>
&lt;td>tex2D(_MainTex,i.uv) * _Color.rgb&lt;/td>
&lt;td>tex2D(_BumpTex,i.uv.zw)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>渐变纹理&lt;/td>
&lt;td>tex2D(_RampTex, &lt;em>half2&lt;/em>(NdotL, NdotL)).rgb * _Color.rgb&lt;/td>
&lt;td>模型法线&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>遮罩纹理&lt;/td>
&lt;td>tex2D(_MainTex, i.uv.xy).rgb * _Color.rgb&lt;/td>
&lt;td>(tex2D(_BumpTex, i.uv.zw)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Shader入门精要-简单光照模型</title><link>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/</link><pubDate>Fri, 28 May 2021 22:34:22 +0800</pubDate><guid>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/</guid><description>&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/topimg.webp" alt="Featured image of post Shader入门精要-简单光照模型" />&lt;h1 id="技术美术基础光照模型">技术美术——基础光照模型&lt;/h1>
&lt;h2 id="lambert">Lambert&lt;/h2>
&lt;p>Lambert 光照模型的光照计算简单粗暴，是光源方向点成法线方向，其值在 [-1, 1] 之间，基本计算公式如下：&lt;/p>
&lt;blockquote>
&lt;p>C = (c * m) * max(0 , n * l )&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="c1">// 法线方向点乘光源方向&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalDirection&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDirection&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">LambertDiffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">SurfaceColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">finalColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LambertDiffuse&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">LightColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="half-lambert">Half Lambert&lt;/h2>
&lt;p>Lambert 光照模型是一个简单方便的光照计算模型，但是，有一个问题存在。在光照无法照射的区域，模型外观变成了全黑，没有任何明暗的变化，使得模型背光区看起来像一个平面，失去了模型细节表现。可以通过添加环境光来得到非全黑的效果，但即使这样仍然无法解决背光面明暗一样的缺点。为了解决这个问题，有人在 Lambert 光照模型的基础上进行改良，这就是 &lt;code>Half Lambert&lt;/code> 光照模型，通过乘以一个系数 a 再加上一个系数 b 的方法，将 &lt;code>Lambert&lt;/code> 光照模型的值 [-1, 1] 重新映射至 [-a + b, a + b]，绝大多数情况下 a b 的值都取 0.5 ，这样 &lt;code>Half Lambert&lt;/code> 光照模型的值 [0, 1]，在一定程度上改善了 &lt;code>Lambert&lt;/code> 光照模型所带来的问题：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="c1">// &lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalDirection&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">lightDirection&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">HalfLambertDiffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">SurfaceColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">finalColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HalfLambertDiffuse&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">LightColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="phong-lighting">Phong Lighting&lt;/h2>
&lt;p>高光计算部分，基本计算公式：&lt;/p>
&lt;blockquote>
&lt;p>Cspecular = (Clight * M specular)Max(0, V * r)&lt;/p>
&lt;/blockquote>
&lt;p>需要四个参数参与计算，入射光的颜色和强度 Clight，材质的高光反射系数 Mspecular，视线方向 v 以及反射方向 r。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="c1">// 视线方向，摄像机坐标 - 顶点坐标得到视线方向，向量从顶点指向摄像机，就是视线方向 &lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">viewDirection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 光线反射方向，有光源方向和顶点的法线方向计算得到&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightReflectDirection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reflect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">lightDirection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">normalDirection&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="c1">// Lambert 光照模型&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">normalDirection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightDirection&lt;/span> &lt;span class="p">));&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">RdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">lightReflectDirection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">viewDirection&lt;/span> &lt;span class="p">));&lt;/span>
&lt;span class="c1">// 计算具体的高光，是一个指数函数，再乘以光照强度、高光颜色&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">specularity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpecularGloss&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">_SpecularPower&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">_SpecularColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightingModel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">diffuseColor&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specularity&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="blinn-phong">Blinn-Phong&lt;/h2>
&lt;p>高光计算部分，基本公式：&lt;/p>
&lt;blockquote>
&lt;p>Cspecular = (Clight * M specular)Max(0, n * h)&lt;/p>
&lt;/blockquote>
&lt;p>不同于 &lt;code>Phong&lt;/code> 模型，这里不使用视线方向 v 和反射方向 r，取而代之的是引入新的矢量 h，通过视角方向 v 和光照方向 i 相加归一化处理后得到。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="c1">// 视线方向，摄像机坐标 - 顶点坐标得到视线方向，向量从顶点指向摄像机，就是视线方向 &lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">viewDirection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">posWorld&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 半角方向，根据经验取得的模型，让视线方向+光源方向作为光反射的方向&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">halfDirection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDirection&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">lightDirection&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">normalDirection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightDirection&lt;/span> &lt;span class="p">));&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mo">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">normalDirection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDirection&lt;/span> &lt;span class="p">));&lt;/span>
&lt;span class="c1">// 计算具体的高光，是一个指数函数，再乘以光照强度、高光颜色&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">specularity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="n">_SpecularGloss&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">_SpecularPower&lt;/span>
&lt;span class="o">*&lt;/span>&lt;span class="n">_SpecularColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">lightingModel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">diffuseColor&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specularity&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>在实际应用中，我们还是大量使用 &lt;code>Half Lambert&lt;/code> 和 &lt;code>Blinn-Phong&lt;/code> 光照模型，需要注意的是，这两个模型都是 &lt;strong>经验&lt;/strong> 模型，我们从物理的角度看，这两个模型都是不正确的，但是，在实际的渲染中，这两个模型的结果更让人满意。最后给出适用的代码，可以根据需要自行注释掉关于光照部分计算的代码来观察不同光照模型之间的区别&lt;/p>
&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 425px">
&lt;a href="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/lightingmodel.png" data-size="1547x872">&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/lightingmodel.png"
srcset="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/lightingmodel_huf926d0fb8ea00f04d34bca55eaa16dd7_262933_480x0_resize_box_2.png 480w, https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E7%AE%80%E5%8D%95%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B/lightingmodel_huf926d0fb8ea00f04d34bca55eaa16dd7_262933_1024x0_resize_box_2.png 1024w"
width="1547"
height="872"
loading="lazy"
alt="四种不同光照模型的结果">
&lt;/a>
&lt;figcaption>四种不同光照模型的结果&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">URP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">HalfLambertBlinnPhong&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Diffuse&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Diffuse&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Specular&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Specular&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_Gloss&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Gloss&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderPipeline&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UniversalRenderPipeline&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">LightMode&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UniversalForward&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">HLSLPROGRAM&lt;/span>
&lt;span class="c1">// UnityCG.cginc 文件被代替，使用 HLSL 文件，这里引用文件&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Packages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pipelines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">universal&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ShaderLibrary&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Core&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hlsl&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Packages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pipelines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">universal&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ShaderLibrary&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hlsl&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Packages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pipelines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ShaderLibrary&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">SpaceTransforms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hlsl&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="n">CBUFFER_START&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UnityPerMaterial&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 兼容 SRP 批处理，将所有材质属性声明在一个 UnityPerMaterial 的 CBUFFER 块中 &lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">CBUFFER_END&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">a2v&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">lightmapUV&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a2v&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">ZERO_INITIALIZE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 初始化变量&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">TransformObjectToHClip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransformObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransformObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点从对象空间转到世界空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">frag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Light&lt;/span> &lt;span class="n">mainLight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GetMainLight&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 获取主光源&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点法线方向归一化&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TransformObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mainLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">direction&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// 主光源方向归一化&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算视角方向并且归一化&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">lightReflectDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reflect&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算 phong 模型中高光部分&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldLightDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">viewDir&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 计算半角方向且归一化&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// Lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">RdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightReflectDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// Phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// Blinn-Phong&lt;/span>
&lt;span class="c1">/// lambert + Phong&lt;/span>
&lt;span class="c1">//half3 diffuse = mainLight.color.rgb * _Diffuse.rgb * NdotL;&lt;/span>
&lt;span class="c1">//half3 specular = mainLight.color.rgb * _Specular.rgb * pow(RdotV, _Gloss);&lt;/span>
&lt;span class="c1">/// Lambert + Blinn-Phong&lt;/span>
&lt;span class="c1">//half3 diffuse = mainLight.color.rgb * _Diffuse.rgb * NdotL;&lt;/span>
&lt;span class="c1">//half3 specular = mainLight.color.rgb * _Specular.rgb * pow(NdotV, _Gloss);&lt;/span>
&lt;span class="c1">/// Half Lambert + Phong&lt;/span>
&lt;span class="c1">//half3 diffuse = mainLight.color.rgb * _Diffuse.rgb * pow(NdotL * 0.5 + 0.5, 2.0);&lt;/span>
&lt;span class="c1">//half3 specular = mainLight.color.rgb * _Specular.rgb * pow(RdotV, _Gloss);&lt;/span>
&lt;span class="c1">/// Half Lambert + Blinn-Phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mainLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mainLight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Specular&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_Gloss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// 计算环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_GlossyEnvironmentColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">half4&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ambient&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDHLSL&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">FallBack&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Packages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pipelines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">universal&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">FallbackError&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Shader&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">SRP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">HalfLambertBlinnPhong&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Properties&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Diffuse&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpcularColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Spcular&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">_SpcularStrength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Spcular&lt;/span> &lt;span class="n">Strenght&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">SubShader&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Opaque&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="n">LOD&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;span class="n">Pass&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">CGPROGRAM&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="n">vert&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">pragma&lt;/span> &lt;span class="n">fragment&lt;/span> &lt;span class="n">frag&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">UnityCG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="err">#&lt;/span>&lt;span class="n">include&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Lighting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cginc&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_Diffuse&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">_SpcularColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">_SpcularStrength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">appdata&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">vertex&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">struct&lt;/span> &lt;span class="n">v2f&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float4&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_POSITION&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">NORMAL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">float3&lt;/span> &lt;span class="n">worldPos&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">TEXCOORD0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">vert&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">appdata&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">v2f&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToClipPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顶点坐标从模型空间转到裁剪空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 将法线从模型空间转到世界空间&lt;/span>
&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UnityObjectToWorldDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">vertex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 将顶点从模型空间转到世界空间&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">o&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">fixed4&lt;/span> &lt;span class="n">frag&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v2f&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">SV_Target&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">ambient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UNITY_LIGHTMODEL_AMBIENT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 获取环境光&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceLightPos0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 主光源的方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">worldNormal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 法线方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">viewDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_WorldSpaceCameraPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">worldPos&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 视角方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">lightReflectDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reflect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldNormal&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 主光源光线反射方向&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">halfDir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">normalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewDir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worldLightDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// lambert&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">RdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lightReflectDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">NdotV&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">worldNormal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">halfDir&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// blinn phong&lt;/span>
&lt;span class="c1">// lambert + phong&lt;/span>
&lt;span class="c1">//half3 diffuse = _LightColor0.rgb * _Diffuse * NdotL;&lt;/span>
&lt;span class="c1">//half3 specular = _LightColor0.rgb * _SpcularColor.rgb * pow(RdotV, _SpcularStrength);&lt;/span>
&lt;span class="c1">// Lambert + blinn phong&lt;/span>
&lt;span class="c1">//half3 diffuse = _LightColor0.rgb * _Diffuse * NdotL;&lt;/span>
&lt;span class="c1">//half3 specular = _LightColor0.rgb * _SpcularColor.rgb * pow(NdotV, _SpcularStrength);&lt;/span>
&lt;span class="c1">// half lambert + phong&lt;/span>
&lt;span class="c1">//half3 diffuse = _LightColor0.rgb * _Diffuse * pow(NdotL * 0.5 + 0.5, 2.0);&lt;/span>
&lt;span class="c1">//half3 specular = _LightColor0.rgb * _SpcularColor.rgb * pow(RdotV, _SpcularStrength);&lt;/span>
&lt;span class="c1">// half lambert + blinn phong&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">diffuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Diffuse&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">half3&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_LightColor0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_SpcularColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rgb&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NdotV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_SpcularStrength&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">half4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">diffuse&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">specular&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">ambient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">ENDCG&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>相关链接 &lt;a class="link" href="https://www.jordanstevenstechart.com/lighting-models" target="_blank" rel="noopener"
> Lighting Models In Unity - Jordan Stevens &lt;/a>&lt;/p></description></item><item><title>Shader入门精要-渲染流水线</title><link>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%B8%B2%E6%9F%93%E6%B5%81%E6%B0%B4%E7%BA%BF/</link><pubDate>Sun, 23 May 2021 22:20:04 +0800</pubDate><guid>https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%B8%B2%E6%9F%93%E6%B5%81%E6%B0%B4%E7%BA%BF/</guid><description>&lt;img src="https://yantree.github.io/p/shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81-%E6%B8%B2%E6%9F%93%E6%B5%81%E6%B0%B4%E7%BA%BF/topimg.png" alt="Featured image of post Shader入门精要-渲染流水线" />&lt;h1 id="技术美术渲染流水线">技术美术——渲染流水线&lt;/h1>
&lt;h2 id="应用阶段cpu">应用阶段(CPU)&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>将场景数据加载到显存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置渲染状态&lt;/p>
&lt;p>这一步可配置的有 &lt;strong>渲染状态&lt;/strong>，类似如下设置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="n">Tags&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">RenderType&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">Transparent&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">IngoreProjector&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">True&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="n">Cull&lt;/span> &lt;span class="n">Front&lt;/span> &lt;span class="c1">// 剔除正面&lt;/span>
&lt;span class="n">ZWrite&lt;/span> &lt;span class="n">off&lt;/span> &lt;span class="c1">// 关闭深度写入&lt;/span>
&lt;span class="n">Blend&lt;/span> &lt;span class="n">SrcAlpha&lt;/span> &lt;span class="n">OneMinusSrcAlpha&lt;/span> &lt;span class="c1">// 混合方式&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>调用 DrawCall&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>输出：&lt;/strong> 几何体数据（顶点坐标、法向量、 纹理坐标、纹理等）通过数据总线传送到图形硬件（时间瓶颈）。&lt;/p>
&lt;h2 id="几何阶段gpu">几何阶段(GPU)&lt;/h2>
&lt;p>&lt;strong>输入：&lt;/strong> 上个阶段的输出。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>顶点着色器&lt;/strong>&lt;/p>
&lt;p>根据应用阶段传进来的顶点位置做坐标变换（MVP变换矩阵）和逐顶点光照。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>曲面细分着色器、几何着色器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>裁剪、屏幕映射&lt;/p>
&lt;p>用透视变换矩阵把顶点从视锥体变换到裁剪空间的 &lt;strong>CVV&lt;/strong> 中，这一步叫 &lt;strong>投影&lt;/strong> ； &lt;strong>CVV&lt;/strong> 中进行图元裁剪，这一步叫 &lt;strong>裁剪&lt;/strong>；将前述过程得到的坐标映射到 &lt;strong>屏幕空间坐标系&lt;/strong> 上，这一步叫屏幕映射。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>顶点着色器&lt;/strong>&lt;/p>
&lt;p>在顶点着色器中，我们经常要进行的操作是坐标空间的转换，根据光照计算的需要，我们可能会将顶点位置、法线、切线转到切线空间或者世界空间。&lt;/p>
&lt;p>&lt;strong>结果：&lt;/strong> 得到经过变换与投影之后的顶点坐标、颜色、以及纹理坐标。&lt;/p>
&lt;blockquote>
&lt;p>顶点着色器中计算光照叫逐顶点光照，还有一种实在片元着色器中计算光照叫逐像素光照。&lt;/p>
&lt;/blockquote>
&lt;h2 id="光栅化阶段gpu">光栅化阶段(GPU)&lt;/h2>
&lt;p>&lt;strong>输入：&lt;/strong> 上个阶段的输出&lt;/p>
&lt;ol>
&lt;li>
&lt;p>三角形设置、遍历&lt;/p>
&lt;p>根据上一步输出的三角形顶点位置，计算三角形网格表示数据的过程叫做三角形设置；检查每个像素是否被一个三角网格覆盖，若被覆盖，则生成一个片元，且根据三个顶点的顶点信息对整个覆盖区域的像素进行插值，这个过程叫做三角形遍历。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>片元着色器&lt;/strong>&lt;/p>
&lt;p>在这里最重要的技术之一就是纹理采样，通常会在顶点着色阶段输出每个顶点对应的纹理坐标，然后经过光栅化阶段对三角网格的三个顶点对应的纹理坐标进行插值后，就可以得到覆盖的片元的纹理坐标了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>逐片元操作&lt;/p>
&lt;p>决定每个片元的可见性，例如深度测试、模板测试等；&lt;/p>
&lt;p>混合操作，通过测试的片元需要把这个片元的颜色值和已经存储在颜色缓冲区中的颜色进行混合。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>结果：&lt;/strong> 为像素（Pixel）正确配色，以便绘制 完整图像，该阶段进行的都是单个像素的操作，每个像素的信息存储在颜色缓冲 器（color buffer 或者 frame buffer）中。&lt;/p></description></item><item><title>ShaderCode常用函数解释</title><link>https://yantree.github.io/p/shadercode%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E9%87%8A/</link><pubDate>Sat, 22 May 2021 20:09:54 +0800</pubDate><guid>https://yantree.github.io/p/shadercode%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E9%87%8A/</guid><description>&lt;h1 id="技美函数方法解释">技美——函数方法解释&lt;/h1>
&lt;p>&lt;strong>[TextureName]_ST&lt;/strong>&lt;/p>
&lt;p>举例来说一个纹理贴图：&lt;code>_Main_ST&lt;/code> ，其中 ST 代表的是纹理的缩放属性 (Scale) 和平移 (Translation) 的缩写。&lt;code>_Main_ST.xy&lt;/code> 存储缩放值，&lt;code>_Main_ST.zw&lt;/code> 存储偏移值。不知道什么是纹理的缩放和偏移，建议补一下计算机图形学，里面有详细的介绍。&lt;/p>
&lt;p>&lt;strong>POSITION vs SV_POSITION&lt;/strong>&lt;/p>
&lt;p>&lt;code>POSITION&lt;/code> 被用作 vertex shader 的输入，&lt;code>SV_POSITION&lt;/code> 被用作 vertex shader 的输出，fragment shader 的输入。SV 是 Systems Value 的简写，&lt;code>SV_POSITION&lt;/code> 用来标识经过 vertex shader 变换后的顶点坐标。&lt;/p>
&lt;p>&lt;strong>UnityObjectToClipPos&lt;/strong>&lt;/p>
&lt;p>在unity5.6 以前是 UNITY_MATRIX_MVP，用法：&lt;/p>
&lt;p>unity 5.6 前：o.vertex = mul(UNITY_MATRIX_MVP,v.vertex);&lt;/p>
&lt;p>unity 5.6 后：o.vertex = UnityObjectToClipPos(v.vertex);&lt;/p>
&lt;p>到这里就因该明白了，UnityObjectToClipPos 是一个 &lt;code>MVP&lt;/code> 变换方法。&lt;/p>
&lt;p>&lt;strong>TRANSFORM_TEX&lt;/strong>&lt;/p>
&lt;p>将模型顶点的UV与Tiling、Offset两个变量进行运算，计算出实际显示用的顶点UV，在UnityCG.cginc中的定义如下：&lt;/p>
&lt;pre>&lt;code class="language-shader" data-lang="shader">// Transforms 2D UV by scale/bias property
#define TRANSFORM_TEX(tex,name) (tex.xy * name##_ST.xy + name##_ST.zw)
&lt;/code>&lt;/pre>&lt;p>o.uv = TRANSFORM_TEX (v.texcoord, _MainTex);&lt;/p>
&lt;p>v 是 appdata_base 类型，v.texcoord 就是模型顶点的 uv 数据。&lt;/p>
&lt;p>_MainTex 是使用的图片；&lt;/p>
&lt;p>name##_ST 实际上就是 _MainTex_ST；
name## ST.xy 就是 Tiling 的 xy 值；&lt;/p>
&lt;p>name##_ST.zw 就是 Offset 的 xy 值。&lt;/p>
&lt;p>&lt;strong>Tex2D(_MainTex, IN.uv_MainTex)&lt;/strong>&lt;/p>
&lt;p>half4 c = tex2D (_MainTex, IN.uv_MainTex);&lt;/p>
&lt;p>&lt;code>tex2D(sampler2D tex, float2 s)&lt;/code>函数，这是CG程序中用来在一张贴图中对一个点进行采样的方法，返回一个float4。这里对 _MainTex在输入点上进行了采样，并将其颜色的rbg值赋予了输出的像素颜色，将a值赋予透明度。于是，着色器就明白了应当怎样工作：即找到贴图上 对应的uv点，直接使用颜色信息来进行着色&lt;/p>
&lt;p>&lt;strong>Scene Depth / Screen Position&lt;/strong>&lt;/p>
&lt;p>Scene Depth 是除开透明模型之外的深度，Screen Position是所有模型的深度。这里如果用视线空间的 Scene Depth 减去 Screen Position(Raw Model) 的 alpha，就可以得到透明模型与不透明模型相交的边缘。&lt;/p>
&lt;p>&lt;strong>Posterize Node&lt;/strong>&lt;/p>
&lt;p>使用该节点会生成的代码：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">void&lt;/span> &lt;span class="n">Unity_Posterize_float4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">float4&lt;/span> &lt;span class="n">In&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float4&lt;/span> &lt;span class="n">Steps&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">out&lt;/span> &lt;span class="n">float4&lt;/span> &lt;span class="n">Out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">Out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">In&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">Steps&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">Steps&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将连续的值以 ( 1 / Steps ) 为单位向下取整，产生以 ( 1 / Steps ) 为单位标量的值。(说人话：Steps 值越大，新生成的值越接近原来的值；Steps 值越小，新生成的值越偏离原来的值，最终结果可能只剩下两个值。举例来说：一条函数曲线在 Sterps 越小的情况下越接近一条直线。)&lt;/p>
&lt;p>&lt;strong>Ellipse Node(Fragment)&lt;/strong>&lt;/p>
&lt;p>使用该节点会生成的代码：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">void&lt;/span> &lt;span class="n">Unity_Ellipse_float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">float2&lt;/span> &lt;span class="n">UV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">float&lt;/span> &lt;span class="n">Width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">float&lt;/span> &lt;span class="n">Height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">out&lt;/span> &lt;span class="n">float4&lt;/span> &lt;span class="n">Out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">UV&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">float2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Height&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">Out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">saturate&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">fwidth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据输入 UV 以输入宽度和高度指定的大小生成椭圆形状。&lt;/p>
&lt;p>&lt;strong>Twirl Node&lt;/strong>&lt;/p>
&lt;p>使用该节点会生成的代码：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-glsl" data-lang="glsl">&lt;span class="k">void&lt;/span> &lt;span class="n">Unity_Twirl_float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">float2&lt;/span> &lt;span class="n">UV&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float2&lt;/span> &lt;span class="n">Center&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">float&lt;/span> &lt;span class="n">Strength&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">float2&lt;/span> &lt;span class="n">Offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">out&lt;/span> &lt;span class="n">float2&lt;/span> &lt;span class="n">Out&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">float2&lt;/span> &lt;span class="n">delta&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UV&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">Center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">angle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Strength&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">delta&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">angle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">angle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">float&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">angle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">cos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">angle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">Out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">float2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Center&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Offset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Center&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Offset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将类似于黑洞的旋转扭曲效果应用于输入UV的值。 变形效果的中心参考点由输入Center定义，效果的整体强度由输入Strength的值定义。 输入偏移量可用于偏移结果的各个通道。&lt;/p></description></item><item><title>Visual Studio &amp; OpenGL</title><link>https://yantree.github.io/p/visual-studio-opengl/</link><pubDate>Tue, 29 Dec 2020 23:09:27 +0800</pubDate><guid>https://yantree.github.io/p/visual-studio-opengl/</guid><description>&lt;img src="https://yantree.github.io/p/visual-studio-opengl/topimg.png" alt="Featured image of post Visual Studio &amp; OpenGL" />&lt;h1 id="visual-studio--opengl">Visual Studio &amp;amp; OpenGL&lt;/h1>
&lt;p>这里采用的方案与 &lt;strong>&lt;a class="link" href="https://learnopengl.com/Getting-started/Creating-a-window" target="_blank" rel="noopener"
>LearnOpenGL&lt;/a>&lt;/strong> 一样，使用 &lt;strong>glfw&lt;/strong> 和 &lt;strong>glad&lt;/strong>。❗ 个人使用 &lt;strong>win10&lt;/strong> 环境。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#visual-studio--opengl" >Visual Studio &amp;amp; OpenGL&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#1-%e9%85%8d%e7%bd%ae-visual-studio" >1. 配置 Visual Studio&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#2-%e6%9e%84%e5%bb%ba%e5%bc%80%e5%8f%91%e6%a8%a1%e5%9d%97" >2. 构建开发模块&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#3-visual-studio-%e7%bc%96%e8%af%91-glfw" >3. visual Studio 编译 GLFW&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#4-%e4%b8%8b%e8%bd%bd-glad" >4. 下载 GLAD&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#5-%e8%ae%be%e7%bd%ae%e9%a1%b9%e7%9b%ae" >5. 设置项目&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#6-%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b" >6. 测试用例&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-配置-visual-studio">1. 配置 Visual Studio&lt;/h2>
&lt;p>安装基本的开发包，有两个必装的包。这里我使用了英文，在语言包里，我还选择了 &lt;strong>English&lt;/strong> 安装包。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 200; flex-basis: 480px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-29-visual-studio-opengl-inistalize.png" data-size="1570x785">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-29-visual-studio-opengl-inistalize.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-29-visual-studio-opengl-inistalize_huda128796a8620fd8d1a2f0c57a1fdcea_123716_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-29-visual-studio-opengl-inistalize_huda128796a8620fd8d1a2f0c57a1fdcea_123716_1024x0_resize_box_2.png 1024w"
width="1570"
height="785"
loading="lazy"
alt="安装模块">
&lt;/a>
&lt;figcaption>安装模块&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="2-构建开发模块">2. 构建开发模块&lt;/h2>
&lt;p>新建一个 &lt;strong>OpenGL&lt;/strong> 文件夹&lt;/p>
&lt;ul>
&lt;li>
&lt;p>下载 &lt;strong>&lt;a class="link" href="https://cmake.org/download/" target="_blank" rel="noopener"
>CMake&lt;/a>&lt;/strong> ，新电脑选择 x64 的安装包，安装 CMake。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载 &lt;strong>&lt;a class="link" href="https://www.glfw.org/download.html" target="_blank" rel="noopener"
>GLFW官网&lt;/a>&lt;/strong>，点击下载 &lt;strong>Source package&lt;/strong>，并解压至 &lt;strong>OpenGL&lt;/strong> 文件夹。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 CMake 编译 GLFW。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>当前文件目录如下：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 141; flex-basis: 338px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory.png" data-size="1128x799">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory_hufbc7154665c30cd809f8d85de53662fe_52871_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory_hufbc7154665c30cd809f8d85de53662fe_52871_1024x0_resize_box_2.png 1024w"
width="1128"
height="799"
loading="lazy"
alt="项目目录">
&lt;/a>
&lt;figcaption>项目目录&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>build 文件夹是我自己创建的，待会编译会用到。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>双击 CMake-gui 程序，进行编译。&lt;/p>
&lt;p>先设置好对应文件夹，如下图所示：&lt;strong>source code&lt;/strong> 是解压后的 glfw-3.3.2 文件目录，&lt;strong>build binaries&lt;/strong> 是我们新建的 build 文件夹，对应关系如上图所示。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 229; flex-basis: 550px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-vs-2019.png" data-size="1271x554">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-vs-2019.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-vs-2019_hu8428fd3068b8e6fbca41ef419ab8ae22_93086_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-vs-2019_hu8428fd3068b8e6fbca41ef419ab8ae22_93086_1024x0_resize_box_2.png 1024w"
width="1271"
height="554"
loading="lazy"
alt="Cmake build glfw">
&lt;/a>
&lt;figcaption>Cmake build glfw&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>接下来点击下面的 Configure 按钮。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 218; flex-basis: 524px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-configure.png" data-size="1297x593">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-configure.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-configure_hu065d9883e451eafff5e12cd16c4ab913_126425_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-configure_hu065d9883e451eafff5e12cd16c4ab913_126425_1024x0_resize_box_2.png 1024w"
width="1297"
height="593"
loading="lazy"
alt="Cmake 配置">
&lt;/a>
&lt;figcaption>Cmake 配置&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>会弹出下图右边的小弹窗，确定选择的是 Visual Studio 16 2019 平台，完成后，点击下面的 Finish 按钮。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>真正开始编译&lt;/p>
&lt;p>上面点击完 Finish 后等一会会出现如下图左边的红色页面，此时我们点击左边的 &lt;strong>Generate&lt;/strong> 开始编译。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 233; flex-basis: 560px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-generate.png" data-size="1277x547">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-generate.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-generate_hu4a0fab0c16c2489634929aa5061bfdb3_223580_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-CMake-glfw-generate_hu4a0fab0c16c2489634929aa5061bfdb3_223580_1024x0_resize_box_2.png 1024w"
width="1277"
height="547"
loading="lazy"
alt="Cmake 编译">
&lt;/a>
&lt;figcaption>Cmake 编译&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>此时，CMake 已经完成了它的所有任务。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-visual-studio-编译-glfw">3. visual Studio 编译 GLFW&lt;/h2>
&lt;p>在 CMake 完成编译后，上图的右边部分，我们可以直接点击 &lt;strong>Open Project&lt;/strong> 用 Visual Studio 打开 project ，或者双击 build 后里的 &lt;strong>GLFW.sln&lt;/strong> 文件，打开 project 后，点击 &lt;strong>build -&amp;gt; build solution&lt;/strong>， 完成后会在 &lt;strong>build -&amp;gt; src -&amp;gt; Debug&lt;/strong> 里生成 &lt;strong>glfw3.lib&lt;/strong> 文件，这是我们需要的。&lt;/p>
&lt;h2 id="4-下载-glad">4. 下载 GLAD&lt;/h2>
&lt;p>点击 &lt;strong>&lt;a class="link" href="https://glad.dav1d.de/" target="_blank" rel="noopener"
>这里&lt;/a>&lt;/strong> 打开 GLAD 在线服务，设置如下：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 129; flex-basis: 310px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-glad-online.png" data-size="1229x951">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-glad-online.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-glad-online_hube4b39f3a15266da6f6fabb917df5c5a_67754_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-glad-online_hube4b39f3a15266da6f6fabb917df5c5a_67754_1024x0_resize_box_2.png 1024w"
width="1229"
height="951"
loading="lazy"
alt="下载GLAD">
&lt;/a>
&lt;figcaption>下载GLAD&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>确保 Options 下面勾选上了 &lt;strong>Generate a loader&lt;/strong>，最后点击页面最下面的 &lt;strong>GENERATE&lt;/strong>，此时会打开另一个页面，我们点击下面的 &lt;strong>glad.zip&lt;/strong> ，下载 glad。将其解压在 &lt;strong>OpenGL&lt;/strong> 文件夹下，此时 OpenGL 文件下会多出 &lt;strong>include、src&lt;/strong> 文件夹。&lt;/p>
&lt;h2 id="5-设置项目">5. 设置项目&lt;/h2>
&lt;p>这一步我们会重点关注两个文件夹，前面的 &lt;strong>OpenGL&lt;/strong> 和接下来要创建的项目文件夹 &lt;strong>Learn OpenGL&lt;/strong> 。&lt;/p>
&lt;p>打开 Visual Studio 新建一个空的 project，结果如图：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 150; flex-basis: 360px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-enpty-opengl-project.png" data-size="1277x849">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-enpty-opengl-project.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-enpty-opengl-project_hud1c1c592a931b72745d67f91fc603d9c_33866_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-enpty-opengl-project_hud1c1c592a931b72745d67f91fc603d9c_33866_1024x0_resize_box_2.png 1024w"
width="1277"
height="849"
loading="lazy"
alt="创建空项目">
&lt;/a>
&lt;figcaption>创建空项目&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>在 LearnOpenGL 项目里新建文件夹 OpenGL_Stuff，并创建子文件夹 includes，lib，当前 LearnOpenGL 项目目录结构&lt;/p>
&lt;p>&lt;figure style="flex-grow: 94; flex-basis: 225px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-before.png" data-size="237x252">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-before.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-before_hua6b082968871855f8558cacf914793a6_6572_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-before_hua6b082968871855f8558cacf914793a6_6572_1024x0_resize_box_2.png 1024w"
width="237"
height="252"
loading="lazy"
alt="项目目录">
&lt;/a>
&lt;figcaption>项目目录&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>当前的 OpenGL 目录如下：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 90; flex-basis: 216px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory-after.png" data-size="183x203">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory-after.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory-after_hu0537b940e5ce0bd5a95fe22a00371334_3520_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-directory-after_hu0537b940e5ce0bd5a95fe22a00371334_3520_1024x0_resize_box_2.png 1024w"
width="183"
height="203"
loading="lazy"
alt="项目目录">
&lt;/a>
&lt;figcaption>项目目录&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>将 &lt;strong>OpenGL -&amp;gt; build -&amp;gt; src -&amp;gt; Debug&lt;/strong> 里生成 &lt;strong>glfw3.lib&lt;/strong> 文件复制到 &lt;strong>LearnOpenGL -&amp;gt; OpenGL_Stuff -&amp;gt; lib&lt;/strong> 文件夹中，将 &lt;strong>OpenGL -&amp;gt; glfw-3.3.2 -&amp;gt; include&lt;/strong> 里的 &lt;strong>GLFW&lt;/strong> 文件夹复制到 &lt;strong>LearnOpenGL -&amp;gt; OpenGL_Stuff -&amp;gt; includes&lt;/strong> 文件夹中，将 **OpenGL -&amp;gt; include ** 里的 &lt;strong>glad，KHR&lt;/strong> 文件夹复制到 &lt;strong>LearnOpenGL -&amp;gt; OpenGL_Stuff -&amp;gt; includes&lt;/strong> 文件夹中。完成后的 &lt;strong>LearnOpenGL&lt;/strong> 项目目录结构：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 68; flex-basis: 164px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-after.png" data-size="243x354">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-after.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-after_hu15a13880a22a7df9277d197e00ac621b_8518_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-directory-after_hu15a13880a22a7df9277d197e00ac621b_8518_1024x0_resize_box_2.png 1024w"
width="243"
height="354"
loading="lazy"
alt="项目目录">
&lt;/a>
&lt;figcaption>项目目录&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>双击 &lt;strong>LearnOpenGL.sln&lt;/strong> 打开项目，还要将 &lt;strong>OpenGL -&amp;gt; src&lt;/strong> 里的 &lt;strong>glad.c&lt;/strong> 文件添加进 &lt;strong>Learn OpenGL&lt;/strong> 项目里。打开 Visual Studio 后，直接将 glad.c 文件拖拽至 &lt;strong>Source Files&lt;/strong> 目录里。&lt;/p>
&lt;figure>&lt;img src="../../../img/develop/2020-12-30-add-glad.c-file.png"
alt="2020-12-30-add-glad.c-file"/>
&lt;/figure>
&lt;p>&lt;figure style="flex-grow: 99; flex-basis: 237px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-add-glad-file.png" data-size="317x320">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-add-glad-file.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-add-glad-file_hu41a5803025f1b4689a66e82d7e910f29_18589_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-add-glad-file_hu41a5803025f1b4689a66e82d7e910f29_18589_1024x0_resize_box_2.png 1024w"
width="317"
height="320"
loading="lazy"
alt="项目目录">
&lt;/a>
&lt;figcaption>项目目录&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>接下来就是对 &lt;strong>Learn OpenGL&lt;/strong> 项目属性设置了，打开项目后，&lt;strong>Project -&amp;gt; Properties&lt;/strong> 。&lt;/p>
&lt;p>左边点击 &lt;strong>VC++ Directories&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>编辑右边的 &lt;strong>General -&amp;gt; Include Directories&lt;/strong>，选择 &lt;strong>includes&lt;/strong> 文件路径，点击一下右下角的 &lt;strong>Apply&lt;/strong> 按钮；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>编辑右边的 &lt;strong>General -&amp;gt; Library Directories&lt;/strong>，选择 &lt;strong>lib&lt;/strong> 文件路径，点击一下右下角的 &lt;strong>Apply&lt;/strong> 按钮；&lt;/p>
&lt;p>&lt;figure style="flex-grow: 170; flex-basis: 410px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-vc&amp;#43;&amp;#43;directory.png" data-size="1354x792">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-vc&amp;#43;&amp;#43;directory.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-vc&amp;#43;&amp;#43;directory_hu185b8888a615bcb010ded8a961893a72_73341_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-vc&amp;#43;&amp;#43;directory_hu185b8888a615bcb010ded8a961893a72_73341_1024x0_resize_box_2.png 1024w"
width="1354"
height="792"
loading="lazy"
alt="Visual Studio 添加文件路径">
&lt;/a>
&lt;figcaption>Visual Studio 添加文件路径&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>左边点击 &lt;strong>Linker -&amp;gt; Input&lt;/strong>&lt;/p>
&lt;p>编辑右边的 &lt;strong>Additional Dependencies&lt;/strong>，输入 &lt;strong>opengl32.lib&lt;/strong> 按一下回车继续输入 &lt;strong>glfw3.lib&lt;/strong> ，点击一下右下角的 &lt;strong>Apply&lt;/strong> 按钮；&lt;/p>
&lt;p>&lt;figure style="flex-grow: 169; flex-basis: 407px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-linker-input.png" data-size="1354x797">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-linker-input.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-linker-input_huaaefca8c85c78540c61faec8ec292904_59942_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-vs-linker-input_huaaefca8c85c78540c61faec8ec292904_59942_1024x0_resize_box_2.png 1024w"
width="1354"
height="797"
loading="lazy"
alt="Visual Studio 添加依赖">
&lt;/a>
&lt;figcaption>Visual Studio 添加依赖&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>到这儿，整个配置环境就搭建好了。&lt;/p>
&lt;h2 id="6-测试用例">6. 测试用例&lt;/h2>
&lt;p>新建cpp文件并测试，下面的是测试代码&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;glad/glad.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;GLFW/glfw3.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// settings
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_WIDTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// glfw: initialize and configure
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">glfwInit&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MAJOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MINOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_OPENGL_PROFILE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_OPENGL_CORE_PROFILE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="cp">#ifdef __APPLE__
&lt;/span>&lt;span class="cp">&lt;/span> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_OPENGL_FORWARD_COMPAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TRUE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="cp">#endif
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">// glfw window creation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// --------------------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glfwCreateWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SCR_WIDTH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;LearnOpenGL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to create GLFW window&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">glfwMakeContextCurrent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">glfwSetFramebufferSizeCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">framebuffer_size_callback&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// glad: load all OpenGL function pointers
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ---------------------------------------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">gladLoadGLLoader&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">GLADloadproc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">glfwGetProcAddress&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to initialize GLAD&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// render loop
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// -----------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">glfwWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// input
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// -----
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// render
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">glClearColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">glClear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_COLOR_BUFFER_BIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// -------------------------------------------------------------------------------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">glfwSwapBuffers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">glfwPollEvents&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// glfw: terminate, clearing all previously allocated GLFW resources.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------------------------------------------
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// process all input: query GLFW whether relevant keys are pressed/released this frame and react accordingly
&lt;/span>&lt;span class="c1">// ---------------------------------------------------------------------------------------------------------
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">glfwGetKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_KEY_ESCAPE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">GLFW_PRESS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">glfwSetWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// glfw: whenever the window size changed (by OS or user resize) this callback function executes
&lt;/span>&lt;span class="c1">// ---------------------------------------------------------------------------------------------
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">// make sure the viewport matches the new window dimensions; note that width and
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// height will be significantly larger than specified on retina displays.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">glViewport&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果有报错的话，很可能是上一步的 &lt;strong>Project -&amp;gt; Properties&lt;/strong> 的属性设置被复原了，此时查看一下对应的 &lt;strong>Include Directories ，Library Directories，Additional Dependencies&lt;/strong> 的设置，如果被复原了，再重复一遍上一步的项目属性设置的操作。完成后，再编译上面代码就能看到一个窗口了。&lt;/p>
&lt;figure>&lt;img src="../../../img/develop/"
alt="2020-12-30-opengl-hello-window"/>
&lt;/figure>
&lt;p>&lt;figure style="flex-grow: 177; flex-basis: 426px">
&lt;a href="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-hello-window.png" data-size="1920x1080">&lt;img src="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-hello-window.png"
srcset="https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-hello-window_hu099abefb2fae81d68b9b4545233550d5_147922_480x0_resize_box_2.png 480w, https://yantree.github.io/p/visual-studio-opengl/2020-12-30-opengl-hello-window_hu099abefb2fae81d68b9b4545233550d5_147922_1024x0_resize_box_2.png 1024w"
width="1920"
height="1080"
loading="lazy"
alt="OpenGL 简单窗口">
&lt;/a>
&lt;figcaption>OpenGL 简单窗口&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>配置过程中可能会出现的问题在第六步的最下面有提到过，这里的问题产生的原因在于项目创建之后，没有创建一份文件cpp，属性设置为 &lt;strong>Project -&amp;gt; Property&lt;/strong>，在创建一份cpp文件后，属性设置变为 &lt;strong>Project -&amp;gt; [project name] Property&lt;/strong>。不过，没什么大的问题，重新设置一下第5步提到的 directory 就可以了。&lt;/p></description></item><item><title>PBR基础理论</title><link>https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/</link><pubDate>Fri, 27 Nov 2020 09:59:25 +0800</pubDate><guid>https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/</guid><description>&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/topimg.jpg" alt="Featured image of post PBR基础理论" />&lt;h1 id="技美pbr-基础理论">技美——PBR 基础理论&lt;/h1>
&lt;p>PBR 全称 Physically Based Rendering，这是一个全新的，效果出众的光照模型，是近年来实时渲染领域的趋势。&lt;/p>
&lt;h2 id="diffusion--reflection">Diffusion &amp;amp; Reflection&lt;/h2>
&lt;p>Diffusion 和 Reflection 也被叫做 “diffuse” “specular”，分别描述了物体表面和光的最基本的相互作用。绿色箭头部分的光是 specular，产生完美的反射现象，这种行为跟一个球碰撞到地面发生弹射的行为一样。红色箭头部分的光是 diffuse，会进入物体内部，这部分光要不被物体吸收（通常转化为热能），要不在物体内部散射，其中一部分会从物体表面散射出来而被重新看到。这种现象称为 “漫反射” 或更复杂一点的 “次表面散射”。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 185; flex-basis: 444px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_diffuse.jpg" data-size="720x389">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_diffuse.jpg"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_diffuse_hu7e5f60eded90f739870309f3327160fc_35443_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_diffuse_hu7e5f60eded90f739870309f3327160fc_35443_1024x0_resize_q75_box.jpg 1024w"
width="720"
height="389"
loading="lazy"
alt="漫反射">
&lt;/a>
&lt;figcaption>漫反射&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>吸收或散射根据物体表面颜色不同而不同（比如，如果物体表面呈现蓝色，表示的是物体表面吸收蓝色以外所有的光，散射出蓝色波长的光）。通常散射方向具有相当的随机性，我们可以认为散射的方向是任何方向。通常着色程序用一个颜色变量称为 “albedo” 或 “diffuse color” 来近似描述物体表面散射颜色。&lt;/p>
&lt;p>&lt;strong>1. 不会进入物体部分的光经物体表面反射会形成高光区域 “specular”，依光源颜色决定，一般为白色。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>2. 进入物体部分的光会进一步在物体内部发生发射现象，出射方向是随机的，出射光 “diffuse color”，依物体属性决定&lt;/strong>&lt;/p>
&lt;h2 id="translucency--transparency">Translucency &amp;amp; Transparency&lt;/h2>
&lt;p>某些材质的漫反射要复杂一些——比如那些具有很长散射距离的材质：皮肤、蜡等的散射，通常一个简单的颜色变量是不够的，着色系统还需要考虑这些被照射物体的形状和厚度，如果物体足够薄，可以看到光从其背后散射出来，物体呈现半透明状；如果漫反射非常的小——比如玻璃，几乎没法注意到散射现象，光线完整的从物体的一边穿透到另一边，物体呈现全透明状。不同物体的次表面散射不尽相同，通常需要专门的“次表面散射”着色模型去模拟它。&lt;/p>
&lt;p>&lt;strong>当物体漫反射非常的小，diffusion 会穿过物体，呈透明状&lt;/strong>&lt;/p>
&lt;h2 id="energy-conservation">&lt;strong>Energy Conservation&lt;/strong>&lt;/h2>
&lt;p>根据上面的描述我们得到一个结论：漫反射和镜面反射是互斥的。这是因为被物体散射的光线必须进入物体表面（那它就不能被镜面反射了）。这个结论符合“能量守恒”，也就是说离开表面的光不可能比原始的入射光要亮。着色系统很容易做到这一点：假设1表示100%光能，用1减去镜面反射的光，剩下的就属于漫反射部分。这意味着强烈高光的物体几乎没有漫反射现象，原因就是没有光进入到物体表面，大部分被镜面反射了。反之亦然。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 338; flex-basis: 811px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_energy.jpg" data-size="680x201">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_energy.jpg"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_energy_hua5456e4b3a671daf155cb4d5dccedf6c_16280_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_energy_hua5456e4b3a671daf155cb4d5dccedf6c_16280_1024x0_resize_q75_box.jpg 1024w"
width="680"
height="201"
loading="lazy"
alt="能量守恒定律">
&lt;/a>
&lt;figcaption>能量守恒定律&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>能量守恒是PBR的一个重要概念。它可以保证美术合适的设置材质的反射率和albedo值，而不破坏物理规则。虽然在着色系统中强制能量守恒的物理限制并不等价于最后好看的着色效果，但起码可以使得渲染效果不至于背离物理规则太远，保证在不同光照条件下物体的光照表现一致性。&lt;/p>
&lt;h2 id="metals">&lt;strong>Metals&lt;/strong>&lt;/h2>
&lt;p>金属作为最常见导电材质，有几点特性值得被特殊提及。 首先，金属大多比绝缘体更容易发生镜面反射。导体一般的镜面反射率高达60-90%，而绝缘体一般在0-20%的范围。这种高反射率阻止了大部分光到达其内部产生散射，使得金属看起来很闪亮。 其次，导体的反射率在可见光谱中呈现多样变化，使得它们的反射光具有颜色（白光照射下）。反射光具有颜色很奇怪，但确实在我们日常的材质中出现（比如，金、铜和黄铜）。绝缘体大部分情况下不会呈现出这种效果，它们的反射光的颜色是一般跟光源颜色一致。 最后，导体通常对进入其表面的光是吸收而不是散射。这意味着理论上导体不会表现出任何的漫反射，但实际中由于金属表面氧化等原因，还是会表现出部分散射效果。根据金属的这些特性呢，PBR着色系统用“metalness”作为输入来表示材料的金属程度，而不是albedo &amp;amp; reflectivity。&lt;/p>
&lt;p>&lt;strong>Metals 属性，其反射光具有颜色&lt;/strong>&lt;/p>
&lt;h2 id="fresnel">&lt;strong>Fresnel&lt;/strong>&lt;/h2>
&lt;p>Fresnel 现象是光照反射现象中不可或缺的部分。计算机图形学中 Fresnel 用来定义不同角度下的不同反射率——入射光方向越平行于物体表面，反射率越高。这意味着物体表面在 Fresnel 效果作用下，物体的边缘会更亮。大部分人可能已经对 Fresnel 效果已经有所了解，并且 Fresnel 效果在计算机图形中也不是新东西，然而，PBR 对 Fresnel 估算公式做了一些重要的纠正。 首先，入射光方向接近平行于物体表面时，一切光滑物体边缘表现为完美镜面反射，只要它足够光滑并且在合适的观察角度（也接近平行于物体表面）下，任何材质物体都表现为完美镜面反射。这有点违反直觉，但物理现象就是如此。 其次对 Fresnel 属性的观察发现不同材质的随入射光角度变化得到的 Fresnel 变化曲线和梯度差异并不大。对我们来讲意味着：如果我们期望渲染更加真实，美术对 Fresnel 行为的控制应该被降低，而不是被放大，或者说，没必要暴露多余的 Fresnel 参数让美术去调节。少了参数控制，就简化了美术内容生成，这是个利好。PBR 光照模型根据光泽度和反射率就可以自动去计算合适的 Fresnel 效果。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 197; flex-basis: 474px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_fresnel.jpg" data-size="720x364">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_fresnel.jpg"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_fresnel_huae0484ae7e41b0a8d64ecc879f27d9d3_25992_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_fresnel_huae0484ae7e41b0a8d64ecc879f27d9d3_25992_1024x0_resize_q75_box.jpg 1024w"
width="720"
height="364"
loading="lazy"
alt="菲涅尔效应">
&lt;/a>
&lt;figcaption>菲涅尔效应&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Fresnel 效果会随着物体表面的光滑度变低快速的变弱，接下来的内容会介绍到这些。&lt;/p>
&lt;p>&lt;strong>入射光方向越平行于物体表面，反射率越高，越亮。&lt;/strong>&lt;/p>
&lt;h2 id="microsurface">Microsurface&lt;/h2>
&lt;p>散射和反射都依赖物体表面的朝向。宏观上来看，物体表面朝向由物体的网格形状决定，或者是网格的法线贴图决定。渲染系统根据法线信息已经可以很好的渲染散射和反射。但是真实世界的表面在微观世界是不完美的：小坑，小裂缝和小块，这些不容易被肉眼看到的微观世界下的表面特性对散射和反射仍产生巨大影响。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 162; flex-basis: 389px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_blurry.png" data-size="778x480">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_blurry.png"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_blurry_hu7afda07a60b3515b2f6b659df7ef43ae_35123_480x0_resize_box_2.png 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_blurry_hu7afda07a60b3515b2f6b659df7ef43ae_35123_1024x0_resize_box_2.png 1024w"
width="778"
height="480"
loading="lazy"
alt="模糊效果">
&lt;/a>
&lt;figcaption>模糊效果&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>上图中，平行的入射光线被粗糙的表面分散反射。因为光线发生碰撞的微表面的朝向各不相同，就像把球扔向凹凸不平的地面一样，球的弹射方向是不可预测的。简短的说，表面越粗糙，放射的光线越分散，呈现出“模糊”状。不过对每一个微表面进行反射估值在实时渲染计算中是不现实的，所以我们不直接描述微表面细节，而是通过一个粗糙度的概念和一个相当精确的光照模型得到接近的结果，这个通用的粗糙度叫做是 “Gloss”, “Smoothness” 或 “Roughness”。在材质中可以是一张贴图或一个固定值。材质中的微表面细节是非常重要的属性，它用来模拟真实世界中的各种微表面特征。光泽度贴图不是一个新概念，但是它在基于物理的着色中占有关键的地位，因为它对光的反射效果有决定性的影响。接下来我们将会看到。&lt;/p>
&lt;p>&lt;strong>粗糙度，物体表面的凹凸程度&lt;/strong>&lt;/p>
&lt;h2 id="energy-conservation-again">Energy Conservation (Again)&lt;/h2>
&lt;p>假设我们的着色系统已经考虑了微表面细节,反射多少入射光才是合适的是个值得研究的课题。光滑的表面会比粗糙的表面得到更加清楚的高光，这是符合能量守恒物理定律的：不同的材质反射了相同量级的入射光，但粗糙的表面反射的光线更加分散，看起来更模糊更暗，而光滑的表面反射更加集中，看起来更清晰更亮。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 338; flex-basis: 811px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_reflectivity.jpg" data-size="680x201">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_reflectivity.jpg"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_reflectivity_hu7c5b75146d993fd32fd41f2b0c309d4d_17175_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_reflectivity_hu7c5b75146d993fd32fd41f2b0c309d4d_17175_1024x0_resize_q75_box.jpg 1024w"
width="680"
height="201"
loading="lazy"
alt="反射率">
&lt;/a>
&lt;figcaption>反射率&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="all-hail-microsurface">All Hail Microsurface&lt;/h2>
&lt;p>基于上面的认识我们得到一个结论：物体微表面光泽度(粗糙度)直接影响了表面的光照表现。这意味着美术人员只用通过调整光泽贴图的形状和强度就可得到物体表面的划痕、凹痕、磨损或抛光等效果，而不额外需要高光遮罩贴图或反射率这些参数设置。&lt;/p>
&lt;p>微表面细节和反射率在物理上是相互联系的，就像之前描述的散射和反射一样，抛开它们之间的联系而单独分离的去设置它们有可能违背背后的光学物理规则。&lt;/p>
&lt;p>还有，对真实世界观察发现，材质之间的反射率的差异并不明显，比如水坑和泥巴，它们有非常相近的反射率，但泥巴非常粗糙，而水坑非常光滑，它们呈现出截然不同的反射表现。美术人员在创建这样的场景应该选择光泽度(粗糙度)而不是反射率来做为主要的材质差异设置项，见下图：&lt;/p>
&lt;p>&lt;figure style="flex-grow: 170; flex-basis: 410px">
&lt;a href="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_hail_microsurface.jpg" data-size="675x395">&lt;img src="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_hail_microsurface.jpg"
srcset="https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_hail_microsurface_hu3db3e5a95a4d0615da06353d1c0c1939_38107_480x0_resize_q75_box.jpg 480w, https://yantree.github.io/p/pbr%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/PBR_hail_microsurface_hu3db3e5a95a4d0615da06353d1c0c1939_38107_1024x0_resize_q75_box.jpg 1024w"
width="675"
height="395"
loading="lazy"
alt="微表面细节">
&lt;/a>
&lt;figcaption>微表面细节&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>微表面属性对其他一些效果也有略微影响。比如，Fresnel效果在粗糙表面上会变弱，还有，大或凹微表面会“捕获”更多的光线，导致光在表面出线多次反射，从而被吸收的光量增加，亮度降低。不同的PBR系统处理这些细节的方式可能有些不同，最后呈现的结果也可能有些许不同，但总体还是遵守能量守恒的。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;ol>
&lt;li>Reflection，反射光颜色为光源颜色。&lt;/li>
&lt;li>Diffuse Color，散射光部分里，物体吸收除开 Diffuse Color 颜色之外的所有光，散射出 Diffuse Color 颜色的光。&lt;/li>
&lt;li>Translucency &amp;amp; Transparency，考虑到物体的形状和厚度，如果物体足够薄，可以看到光从其背后散射出来，物体呈现半透明状；如果漫反射非常的小——比如玻璃，几乎没法注意到散射现象，光线完整的从物体的一边穿透到另一边，物体呈现全透明状。&lt;/li>
&lt;li>Metals，反射光具有颜色，不受光源颜色左右，材料的金属程度。&lt;/li>
&lt;li>Fresnel，入射光方向越平行于物体表面，反射率越高，越亮。&lt;/li>
&lt;li>Microsurface，物体的光泽度。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>原文连接：&lt;/p>
&lt;p>外文：https://marmoset.co/posts/basic-theory-of-physically-based-rendering/&lt;/p>
&lt;p>翻译：https://zhuanlan.zhihu.com/p/49564527&lt;/p>
&lt;/blockquote></description></item><item><title>Doom Emacs</title><link>https://yantree.github.io/p/doom-emacs/</link><pubDate>Fri, 06 Nov 2020 14:17:09 +0800</pubDate><guid>https://yantree.github.io/p/doom-emacs/</guid><description>&lt;img src="https://yantree.github.io/p/doom-emacs/topimg.png" alt="Featured image of post Doom Emacs" />&lt;h1 id="doom-emacs--win10">Doom Emacs &amp;amp; Win10&lt;/h1>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#doom-emacs--win10" >Doom Emacs &amp;amp; Win10&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c" >准备工作&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e7%bc%96%e8%be%91%e7%b3%bb%e7%bb%9f%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f" >编辑系统环境变量&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%ae%89%e8%a3%85doom" >安装Doom&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#all-the-icons" >All the icons&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;a class="link" href="https://github.com/hlissner/doom-emacs" target="_blank" rel="noopener"
>Doom Emacs&lt;/a>，是一份成熟的 Emacs 配置文件，相较于自己一点一滴的积攒 Emacs 配置，Doom Emacs 能让你立即开始你的工作，把更多精力放在编码或者工作上而不是折腾配置文件。&lt;/p>
&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;p>以下方式是不通过第三方包管理器的安装配置过程，使用第三方包管理器会方便很多。&lt;/p>
&lt;ul>
&lt;li>下载 &lt;a class="link" href="https://git-scm.com/download/win" target="_blank" rel="noopener"
>Git&lt;/a>&lt;/li>
&lt;li>下载 &lt;a class="link" href="https://github.com/BurntSushi/ripgrep/releases" target="_blank" rel="noopener"
>Ripgrep&lt;/a> 和 &lt;a class="link" href="https://github.com/sharkdp/fd/releases" target="_blank" rel="noopener"
>fd&lt;/a>。确保你下载的是 &lt;code>Windows-gnu&lt;/code> 版本。&lt;/li>
&lt;li>下载主角 &lt;a class="link" href="http://ftp.wayne.edu/gnu/emacs/windows/" target="_blank" rel="noopener"
>Emacs&lt;/a>。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Git&lt;/code> 是 .exe 文件，双击安装；解压缩 &lt;code>Ripgrep&lt;/code> 和 &lt;code>fd&lt;/code>，最好重命名一下文件夹分别叫 &lt;code>Ripgrep&lt;/code> 和&lt;code>fd&lt;/code> ，你可以把这两个文件夹放在你喜欢的位置。(后面会用到) &lt;code>Emacs&lt;/code> 有 .exe 文件，可以直接安装，也有免安装版，不管使用什么方式，同上面 Ripgrep 和 fd 的使用一样，记住 Emacs 放在了哪儿。&lt;/p>
&lt;h2 id="编辑系统环境变量">编辑系统环境变量&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>文件浏览器 -&amp;gt; 此电脑 -&amp;gt; 属性(左上角，第二个中间画 √ 的图标) -&amp;gt; 高级系统设置 -&amp;gt; 环境变量 -&amp;gt; 用户变量下面&lt;/p>
&lt;ul>
&lt;li>&lt;strong>新建&lt;/strong>，设置变量名为 &lt;code>HOME&lt;/code> ，变量值为 &lt;code>C:\Users\USERNAME&lt;/code> 点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;li>选中名为 &lt;code>Path&lt;/code> 的变量，&lt;strong>编辑&lt;/strong> 并添加 &lt;code>C:\path\to\the\emacs\bin&lt;/code> 文件路径，点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;li>选中名为 &lt;code>Path&lt;/code> 的变量，&lt;strong>编辑&lt;/strong> 并添加 &lt;code>C:\path\to\the\ripgrep&lt;/code> 文件路径，点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;li>选中名为 &lt;code>Path&lt;/code> 的变量，&lt;strong>编辑&lt;/strong> 并添加 &lt;code>C:\path\to\the\fd&lt;/code> 文件路径，点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;li>点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>所以要记住上面三个软件的安装目录，不要有遗漏的地方。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="安装doom">安装Doom&lt;/h2>
&lt;ul>
&lt;li>打开 &lt;code>git-bash.exe&lt;/code>。&lt;/li>
&lt;li>输入 &lt;code>cd ~&lt;/code>，中间有个空格。&lt;/li>
&lt;li>输入 &lt;code>git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d&lt;/code>。&lt;/li>
&lt;li>等下载完成后输入 &lt;code>cd .emacs.d/bin&lt;/code>，执行 &lt;code>doom install&lt;/code>，过程中，单击&lt;code>y&lt;/code> 继续。&lt;/li>
&lt;li>重复上面的操作 文件浏览器 -&amp;gt; 此电脑 -&amp;gt; 属性(左上角，第二个中间画 √ 的图标) -&amp;gt; 高级系统设置 -&amp;gt; 环境变量 -&amp;gt; 用户变量下面
&lt;ul>
&lt;li>选中名为 &lt;code>Path&lt;/code> 的变量，&lt;strong>编辑&lt;/strong> 并添加 &lt;code>C:\Users\USERNAME\.emacs.d\bin&lt;/code> 文件路径，点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;li>点击 &lt;strong>确认&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>现在才安装完成，可以打开 &lt;strong>Emacs&lt;/strong> 了。&lt;/p>
&lt;h2 id="all-the-icons">All the icons&lt;/h2>
&lt;p>默认状态下，Windows 上没法自动安装字体，但 &lt;strong>all the icons&lt;/strong> 这款插件有依赖于一些特殊的字体，所以我们要手动安装。&lt;/p>
&lt;ul>
&lt;li>打开 Emacs ，&lt;code>M-x package-install RET all-the-icons RET&lt;/code> 确保安装了 &lt;strong>all the icons&lt;/strong>。&lt;/li>
&lt;li>&lt;code>M-x all-the-icons-install-fonts&lt;/code> ，完成后，找到字体下载的位置，双击安装。&lt;/li>
&lt;/ul>
&lt;p>现在你就可以使用 &lt;strong>Doom Emacs&lt;/strong>。&lt;/p>
&lt;p>&lt;figure style="flex-grow: 171; flex-basis: 411px">
&lt;a href="https://yantree.github.io/p/doom-emacs/2020-11-06-doom-emacs.png" data-size="288x168">&lt;img src="https://yantree.github.io/p/doom-emacs/2020-11-06-doom-emacs.png"
srcset="https://yantree.github.io/p/doom-emacs/2020-11-06-doom-emacs_huc098e4ec69f01d8623178fcaf63a89c4_47684_480x0_resize_box_2.png 480w, https://yantree.github.io/p/doom-emacs/2020-11-06-doom-emacs_huc098e4ec69f01d8623178fcaf63a89c4_47684_1024x0_resize_box_2.png 1024w"
width="288"
height="168"
loading="lazy"
alt="Happy Hacking! ">
&lt;/a>
&lt;figcaption>Happy Hacking!&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>Emacs Magit✨插件</title><link>https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/</link><pubDate>Sun, 21 Jun 2020 09:14:22 +0800</pubDate><guid>https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/</guid><description>&lt;img src="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/topimg.png" alt="Featured image of post Emacs Magit✨插件" />&lt;h1 id="magit">Magit&lt;/h1>
&lt;blockquote>
&lt;p>A Git Porcelain inside Emacs。&lt;a class="link" href="https://magit.vc/" target="_blank" rel="noopener"
>Magit&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Magit&lt;/strong> 可以看作是一个嵌在 Emacs 里的一个客户端，但它同时也提供了命令行的操作（废话）。在 Emacs 里打开一个 &lt;strong>Git&lt;/strong> 项目，&lt;strong>M-x: magit-status&lt;/strong> 这样就启动了 magit 了，之后下面提到的操作就非常简单了。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#magit" >Magit&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#1-branch" >1. Branch&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#2-stageall--unstageall" >2. Stage(all) / Unstage(all)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#3-commit" >3. Commit&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#4-log" >4. Log&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#5-push" >5. Push&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#6-reset" >6. Reset&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e6%80%bb%e7%bb%93" >总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-branch">1. Branch&lt;/h2>
&lt;p>&lt;strong>b&lt;/strong>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 282; flex-basis: 677px">
&lt;a href="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-branch.png" data-size="810x287">&lt;img src="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-branch.png"
srcset="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-branch_hucf011515ea09214008f0bfa669273b3c_26623_480x0_resize_box_2.png 480w, https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-branch_hucf011515ea09214008f0bfa669273b3c_26623_1024x0_resize_box_2.png 1024w"
width="810"
height="287"
loading="lazy"
alt="magit-branch">
&lt;/a>
&lt;figcaption>magit-branch&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>会弹出以上菜单，和你平时看到的完全不同（毕竟是在 Emacs）。&lt;/p>
&lt;p>其中&lt;strong>紫色&lt;/strong>对应的是 &lt;code>按键&lt;/code> 后面的白色字体就是具体功能的描述了。例如：再单击 &lt;strong>c&lt;/strong> 我们就进入了创建新分支的命令。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Branch-Commands.html#Branch-Commands" target="_blank" rel="noopener"
>Branch&lt;/a>&lt;/strong>&lt;/p>
&lt;h2 id="2-stageall--unstageall">2. Stage(all) / Unstage(all)&lt;/h2>
&lt;p>这里我们可以 &lt;strong>Stage&lt;/strong> 单个文件，也可以 &lt;strong>Stage&lt;/strong> 全部缓冲区的文件，相反，&lt;strong>Unstage&lt;/strong> 也是这样的。&lt;/p>
&lt;p>&lt;strong>s&lt;/strong> &lt;strong>S&lt;/strong> 全选 , &lt;strong>u&lt;/strong> &lt;strong>U&lt;/strong> 全选 小写对应是单个缓冲区文件，大写对应的是全部缓冲区文件。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Staging-and-Unstaging.html" target="_blank" rel="noopener"
>Stage/Unstage&lt;/a>&lt;/strong>&lt;/p>
&lt;h2 id="3-commit">3. Commit&lt;/h2>
&lt;p>&lt;strong>c&lt;/strong>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 214; flex-basis: 514px">
&lt;a href="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-commit.png" data-size="675x315">&lt;img src="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-commit.png"
srcset="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-commit_hubab236a4f6deecbffe0e6a35dd4ca58e_33491_480x0_resize_box_2.png 480w, https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-21-magit-commit_hubab236a4f6deecbffe0e6a35dd4ca58e_33491_1024x0_resize_box_2.png 1024w"
width="675"
height="315"
loading="lazy"
alt="magit-commit">
&lt;/a>
&lt;figcaption>magit-commit&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>再单击一次 &lt;strong>c&lt;/strong> 就会进入编辑 &lt;strong>commit&lt;/strong> 的界面了，根据界面提示，&lt;strong>C-c C-c&lt;/strong> 提交 &lt;code>commit&lt;/code> ，&lt;strong>C-c C-k&lt;/strong> 取消 &lt;code>commit&lt;/code> 。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Initiating-a-Commit.html#Initiating-a-Commit" target="_blank" rel="noopener"
>Commit&lt;/a>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>上面 &amp;lsquo;-a&amp;rsquo;, &amp;lsquo;-e&amp;rsquo;&amp;hellip;的意思也是一样的，按 &lt;strong>-&lt;/strong> &lt;strong>a&lt;/strong>，不同的是带 &lt;strong>-&lt;/strong> 前缀的功能只会在当前的操作上暂时启用，而且后面灰色的注释会暂时高亮，代表着暂时启用对应的。当你再一次按 &lt;strong>c&lt;/strong> 时，后面的注释还是灰色，代表着没开启对应的功能。&lt;/p>
&lt;/blockquote>
&lt;h2 id="4-log">4. Log&lt;/h2>
&lt;p>&lt;strong>l&lt;/strong>&lt;/p>
&lt;p>还是弹出一个与上面类似的菜单，这里就不展示图片了。再次单击，我们就能看到当前分支的所有 &lt;code>commit&lt;/code> 记录。最常用的就是这个功能了，当然里面还有很多我还没使用过的功能。&lt;strong>但是&lt;/strong> 在这个显示 &lt;code>LOG&lt;/code> 记录的页面里，我们还可以轻松的完成 &lt;strong>RESET&lt;/strong>， &lt;strong>REVERT&lt;/strong> 这两个常用的操作。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Log-Buffer.html" target="_blank" rel="noopener"
>Log&lt;/a>&lt;/strong>&lt;/p>
&lt;h2 id="5-push">5. Push&lt;/h2>
&lt;p>&lt;strong>p&lt;/strong>&lt;/p>
&lt;p>在弹出菜单后，再按一次 &lt;strong>p&lt;/strong>，就触发了 &lt;strong>push&lt;/strong> 。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Pushing.html" target="_blank" rel="noopener"
>Push&lt;/a>&lt;/strong>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 188; flex-basis: 453px">
&lt;a href="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-push-force-lease.png" data-size="748x396">&lt;img src="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-push-force-lease.png"
srcset="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-push-force-lease_huf9810b2da72fe0d8106be0f93f5eb247_26953_480x0_resize_box_2.png 480w, https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-push-force-lease_huf9810b2da72fe0d8106be0f93f5eb247_26953_1024x0_resize_box_2.png 1024w"
width="748"
height="396"
loading="lazy"
alt="magit-push-force-lease">
&lt;/a>
&lt;figcaption>magit-push-force-lease&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>&lt;strong>❗ 当我们执行回滚操作后，要将回滚后的仓库提交到远程仓库时，执行以上 push 的方法是行不通的，无法提交到远程仓库&lt;/strong>&lt;/p>
&lt;p>先按 &lt;strong>p&lt;/strong>，进入 &lt;strong>push&lt;/strong> 菜单；再按 &lt;strong>-&lt;/strong> &lt;strong>f&lt;/strong>，暂时开启 &lt;strong>force with lease&lt;/strong>；然后再按 &lt;strong>p&lt;/strong> 执行 &lt;strong>push&lt;/strong> 操作，就能提交成功！&lt;/p>
&lt;blockquote>
&lt;p>想要具体了解 &lt;strong>force with lease&lt;/strong> 与 &lt;strong>force&lt;/strong> 之间的区别，自己百度一下就明白了。&lt;/p>
&lt;/blockquote>
&lt;h2 id="6-reset">6. Reset&lt;/h2>
&lt;p>&lt;strong>X&lt;/strong>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 274; flex-basis: 659px">
&lt;a href="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-reset.png" data-size="1066x388">&lt;img src="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-reset.png"
srcset="https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-reset_huca4ed04787ce00355a458a8d1710e9ce_42826_480x0_resize_box_2.png 480w, https://yantree.github.io/p/emacs-magit%E6%8F%92%E4%BB%B6/2020-06-22-magit-reset_huca4ed04787ce00355a458a8d1710e9ce_42826_1024x0_resize_box_2.png 1024w"
width="1066"
height="388"
loading="lazy"
alt="magit-reset">
&lt;/a>
&lt;figcaption>magit-reset&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>上面的说明够直白清楚的了，在我们一般惯性思维里，会选择 &lt;strong>X&lt;/strong> h，这种方式——一切都回到原来的那个状态。&lt;strong>&lt;a class="link" href="https://magit.vc/manual/magit/Resetting.html" target="_blank" rel="noopener"
>Reset&lt;/a>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>先按 &lt;strong>l&lt;/strong> &lt;strong>l&lt;/strong> 进入 Log，选择 &lt;strong>Reset&lt;/strong> 的点之后，再进行上面的操作。&lt;/p>
&lt;/blockquote>
&lt;h2 id="总结">总结&lt;/h2>
&lt;ul>
&lt;li>直接在 Github 单击下载按钮下载的仓库是没有 &lt;strong>.git&lt;/strong> 文件夹的，也就是说这样下载下来的不是一个仓库&amp;hellip;&amp;hellip;问题很大，所以还是使用 &lt;code>git clone ......&lt;/code> 的方式更稳妥，除非你不想要 &lt;strong>.git&lt;/strong> 文件，也就是仓库提交记录。&lt;/li>
&lt;li>在本地仓库新建 &lt;strong>dev&lt;/strong> branch 时，先 &lt;strong>p&lt;/strong> &lt;strong>u&lt;/strong>，目的是在远程仓库创建也新建一个 &lt;strong>dev&lt;/strong> branch，然后再 &lt;strong>p&lt;/strong> &lt;strong>p&lt;/strong>，不然会报错，你还不知道怎么弄。&lt;/li>
&lt;/ul></description></item><item><title>Github Actions 推送 Github Page</title><link>https://yantree.github.io/p/github-actions-%E6%8E%A8%E9%80%81-github-page/</link><pubDate>Sat, 20 Jun 2020 19:56:17 +0800</pubDate><guid>https://yantree.github.io/p/github-actions-%E6%8E%A8%E9%80%81-github-page/</guid><description>&lt;img src="https://yantree.github.io/p/github-actions-%E6%8E%A8%E9%80%81-github-page/topimg.svg" alt="Featured image of post Github Actions 推送 Github Page" />&lt;h1 id="hugogithub-actionsgithub-pages">HUGO|Github Actions|Github Pages&lt;/h1>
&lt;p>使用方法主要参考了这篇 &lt;a class="link" href="https://zhuanlan.zhihu.com/p/109057290" target="_blank" rel="noopener"
>文章&lt;/a> 。在这里我只是提炼一些关键点和遇到的坑。&lt;/p>
&lt;h2 id="1-绑定-ssh-key">1. 绑定 SSH Key&lt;/h2>
&lt;p>如果是两个独立的仓库的，将 &lt;strong>Public Key&lt;/strong> 添加到 &lt;code>&amp;lt;YourName&amp;gt;.github.io&lt;/code> 仓库，打开 &lt;strong>setting&lt;/strong> 面板，找到 &lt;strong>Deploy keys&lt;/strong> 选项，&lt;strong>Title： Deploy Github Page&lt;/strong>（看你个人喜好）。&lt;strong>Key：&lt;/strong> &lt;strong>Public Key&lt;/strong> ；将 &lt;strong>Private Key&lt;/strong> 添加到 &lt;code>another repository&lt;/code> 仓库，打开 &lt;strong>setting&lt;/strong> 面板，找到 &lt;strong>Secrets&lt;/strong> 选项，&lt;strong>Name：&lt;/strong> &lt;code>ACTIONS_DEPLOY_KEY&lt;/code>（后面会用到）。&lt;strong>Value：&lt;/strong> &lt;strong>Private Key&lt;/strong> 。这里有一个坑，要复制整个 Private Key 的值作为 &lt;strong>Value&lt;/strong> ，不然后面会报错。这是具体的&lt;a class="link" href="https://forums.fast.ai/t/fastpages-ssh-issues-solved/65948" target="_blank" rel="noopener"
>issues&lt;/a>&lt;/p>
&lt;h2 id="2-配置-yml">2. 配置 yml&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Github Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-18.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#with:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#submodules: true # Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.71.1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># extended: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="hl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">YanTree/YanTree.github.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#推送的分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;span class="hl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#要推送的文件夹&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">commit_message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.event.head_commit.message }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意调整上面 &lt;strong>29-32&lt;/strong> 高亮行的值，ACTIONS_DEPLOY_KEY 对应的是上面 &lt;code>Secret&lt;/code> 的 &lt;strong>Name&lt;/strong> ，&lt;code>external_repository&lt;/code> 改成你对应的仓库名 &lt;code>&amp;lt;YourName&amp;gt;/&amp;lt;YourName&amp;gt;.github.io&lt;/code>&lt;/p>
&lt;h2 id="反思">反思&lt;/h2>
&lt;p>如果是使用 &lt;strong>SSH&lt;/strong> 作为 &lt;code>Token&lt;/code> ，在电脑重装系统或者更换电脑的情况下，我们每一次都要重新更新 &lt;strong>Deploy keys&lt;/strong> ， &lt;strong>Secrets&lt;/strong> 的值，对于我这种动不动就重装系统的人不太友好😁。所以我新建了一个 &lt;strong>&lt;a class="link" href="https://github.com/settings/tokens" target="_blank" rel="noopener"
>Personal access tokens&lt;/a>&lt;/strong> 专门干这件事儿，目前看来是避免了上诉的痛点。本来是打算使用 &lt;strong>GITHUB_TOKEN&lt;/strong> 的，都不要额外配置，但是这个 &lt;code>TOKEN&lt;/code> 只适用于同一个仓库，这是具体的 &lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages/issues/318" target="_blank" rel="noopener"
>issues&lt;/a>，如果你是使用的同一个仓库的话，就可以使用这个功能了。&lt;/p></description></item><item><title>Git 命令行版本学习</title><link>https://yantree.github.io/p/git-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88%E6%9C%AC%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 15 Apr 2020 18:30:30 +0800</pubDate><guid>https://yantree.github.io/p/git-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88%E6%9C%AC%E5%AD%A6%E4%B9%A0/</guid><description>&lt;img src="https://yantree.github.io/p/git-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88%E6%9C%AC%E5%AD%A6%E4%B9%A0/topimg.png" alt="Featured image of post Git 命令行版本学习" />&lt;h1 id="leaning-git-and-github">Leaning Git and Github!&lt;/h1>
&lt;p>这是我自己学习使用 &lt;code>Git&lt;/code> &lt;code>Github&lt;/code> 时整理出的笔记，当时 &lt;code>Github&lt;/code> 还没有出 &lt;a class="link" href="https://lab.github.com/" target="_blank" rel="noopener"
>官方教程&lt;/a>，没有 &lt;a class="link" href="https://github.community/t5/GitHub-Learning-Lab/bd-p/learn" target="_blank" rel="noopener"
>论坛&lt;/a>，现在都有了，这都是很好的学习资源，强烈推荐:+1:。这份文章列出了我学习时遇到的问题和解决方法，刚好趁这次疫情期间再整理一下，主要是将 &lt;a class="link" href="https://orgmode.org/" target="_blank" rel="noopener"
>ORG&lt;/a> 文件转成 &lt;code>Markdown&lt;/code> 文件的工作，因为 Github 对 org 文件格式并不友好，真的非常遗憾 :disappointed:！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#leaning-git-and-github" >Leaning Git and Github!&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#config-global-users-imformation" >config global user&amp;rsquo;s imformation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#git-clone" >git clone&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#1-%e5%88%a9%e7%94%a8-gitee-%e5%81%9a%e5%b7%a5%e5%85%b7%e4%ba%ba" >1. 利用 Gitee 做工具人&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#2-%e4%bd%bf%e7%94%a8-cnpmjs%e9%95%9c%e5%83%8f" >2. 使用 cnpmjs镜像&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#%e8%a7%a3%e5%86%b3git-push%e4%bb%a3%e7%a0%81%e5%88%b0github%e4%b8%8a%e4%b8%80%e7%9b%b4%e6%8f%90%e7%a4%ba%e8%be%93%e5%85%a5%e7%94%a8%e6%88%b7%e5%90%8d%e5%8f%8a%e5%af%86%e7%a0%81%e7%9a%84%e9%97%ae%e9%a2%98" >解决git push代码到github上一直提示输入用户名及密码的问题&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e5%8e%9f%e5%9b%a0%e5%88%86%e6%9e%90" >原因分析&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95" >解决办法&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%b7%a5%e4%bd%9c%e5%8c%ba%e7%9a%84%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c" >工作区的文件操作&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e6%92%a4%e9%94%80%e6%93%8d%e4%bd%9c" >撤销操作&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e6%b7%bb%e5%8a%a0%e5%92%8c%e5%88%a0%e9%99%a4%e6%93%8d%e4%bd%9c" >添加和删除操作&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e7%a7%bb%e9%99%a4%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6" >移除版本控制&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#branch%e6%93%8d%e4%bd%9c" >branch操作&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e5%88%9b%e5%bb%ba%e6%93%8d%e4%bd%9c" >创建操作&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e6%9f%a5%e7%9c%8b%e5%b9%b6%e5%88%87%e6%8d%a2" >查看并切换&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%90%88%e5%b9%b6merge" >合并(merge)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%88%a0%e9%99%a4%e5%88%86%e6%94%afdelete" >删除分支(delete)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#%e8%ae%be%e7%bd%ae%e8%bf%9c%e7%a8%8b%e4%bb%93%e5%ba%93" >设置远程仓库&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#push-an-existing-repository-from-the-command-line" >push an existing repository from the command line&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#create-a-new-repository-on-the-command-line" >create a new repository on the command line&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%9b%9e%e6%bb%9a" >回滚&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#pull-requests-and-merge" >pull requests and merge&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#pull-requests" >pull requests&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#merge" >merge&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#%e6%80%bb%e7%bb%93" >总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="config-global-users-imformation">config global user&amp;rsquo;s imformation&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git config --global user.name &lt;span class="s2">&amp;#34;YourName&amp;#34;&lt;/span>
git config --global user.email &lt;span class="s2">&amp;#34;YourEmail@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-clone">git clone&lt;/h2>
&lt;p>因为一些原因，国内克隆 &lt;strong>GitHub&lt;/strong> 仓库的下载速度非常非常慢，这里提供两种解决办法。&lt;/p>
&lt;h3 id="1-利用-gitee-做工具人">1. 利用 Gitee 做工具人&lt;/h3>
&lt;p>注册一个 &lt;strong>&lt;a class="link" href="https://gitee.com/signup" target="_blank" rel="noopener"
>Gitee&lt;/a>&lt;/strong> 账号。点击右上角的 ➕ ，选择 &lt;strong>从 Github/GitLab 导入仓库&lt;/strong>，导入完成后使用 Github 同样的方式克隆仓库就行了。&lt;code>git clone git@gitee.com:[YourName]/[YourRepository] &lt;/code> ，将 github 换成 gitee。这个方法有点繁琐，不过效果好。&lt;/p>
&lt;h3 id="2-使用-cnpmjs镜像">2. 使用 cnpmjs镜像&lt;/h3>
&lt;p>这个方法非常简单，只要修改地址后面的 &lt;code>github.com&lt;/code> 为 &lt;code>github.com.cnpmjs.org&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git clone https://github.com/&lt;span class="o">[&lt;/span>YourName&lt;span class="o">]&lt;/span>/&lt;span class="o">[&lt;/span>YourRepository&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 使用cnpmjs&lt;/span>
git clone https://github.com.cnpmjs.org/&lt;span class="o">[&lt;/span>YourName&lt;span class="o">]&lt;/span>/&lt;span class="o">[&lt;/span>YourRepository&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="解决git-push代码到github上一直提示输入用户名及密码的问题">解决git push代码到github上一直提示输入用户名及密码的问题&lt;/h2>
&lt;h3 id="原因分析">原因分析&lt;/h3>
&lt;p>出现这种情况的原因是我们使用了 &lt;code>http&lt;/code> 的方式 &lt;code>clone&lt;/code> 代码到本地,相应的,也是使用 &lt;code>http&lt;/code> 的方式将代码 &lt;code>push&lt;/code> 到服务器.&lt;/p>
&lt;h3 id="解决办法">解决办法&lt;/h3>
&lt;p>解决办法很简单,将http方式改为ssh方式即可.
步骤：&lt;/p>
&lt;ol>
&lt;li>先查看当前方式&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git remote -v
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>把&lt;code>http&lt;/code>方式改为&lt;code>ssh&lt;/code>方式。先移除旧的&lt;code>http&lt;/code>的&lt;code>origin&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git remote rm origin
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>再添加新的&lt;code>ssh&lt;/code>方式的&lt;code>origin&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git remote add origin git@github.com:userName/repositoryName.git
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>改动完之后直接执行git push是无法推送代码的，需要设置一下上游要跟踪的分支,与此同时会自动执行一次git push命令,此时已经不用要求输入用户名及密码啦！​⚠​ 注意自己当前的分支，下面是推送到 &lt;code>master&lt;/code> 分支。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git push --set-upstream origin master
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="工作区的文件操作">工作区的文件操作&lt;/h2>
&lt;h3 id="撤销操作">撤销操作&lt;/h3>
&lt;p>假设有文件 &lt;code>test01.txt&lt;/code>和&lt;code>/test/test02.txt&lt;/code>&lt;/p>
&lt;p>代码分别是：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git checkout -- test01.txt
git checkout -- /test/test02.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加和删除操作">添加和删除操作&lt;/h3>
&lt;p>添加&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git add filename
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git rm filename
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="移除版本控制">移除版本控制&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git rm -r --cached file
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;code>.gitignore&lt;/code> 中添加要移除的文件，最后：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git commit -m &lt;span class="s1">&amp;#39;modified .gitignore&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="branch操作">branch操作&lt;/h2>
&lt;h3 id="创建操作">创建操作&lt;/h3>
&lt;p>我们创建&lt;code>dev&lt;/code>分支，然后切换到&lt;code>dev&lt;/code>分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git checkout -b dev
&lt;/code>&lt;/pre>&lt;/div>&lt;p>:exclamation: 解释上一条命令。&lt;/p>
&lt;p>git checkout命令加上 &lt;code>-b&lt;/code> 参数表示创建并切换，相当于以下两条命令：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git branch devgit checkout dev
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="查看并切换">查看并切换&lt;/h3>
&lt;ol>
&lt;li>查看
紧接着上面创建 &lt;code>dev&lt;/code> 分支后，继续讲。带 &lt;code>*&lt;/code> 号的就是当前分支。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git branch* dev master
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>切换至 &lt;code>master&lt;/code> 分支&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git checkout &lt;span class="o">{&lt;/span>master&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="合并merge">合并(merge)&lt;/h3>
&lt;p>&lt;code>master&lt;/code> ➡ &lt;code>dev&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git merge dev
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="删除分支delete">删除分支(delete)&lt;/h3>
&lt;p>删除 &lt;code>dev&lt;/code> 分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git branch -d devDeleted branch dev &lt;span class="o">(&lt;/span>was b17d20e&lt;span class="o">)&lt;/span>.
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="设置远程仓库">设置远程仓库&lt;/h2>
&lt;ol>
&lt;li>创建SSH key&lt;/li>
&lt;/ol>
&lt;p>打开Shell，输入以下代码&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">ssh-keygen -t rsa -C &lt;span class="s2">&amp;#34;youremail@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后不用管直接按两次 &lt;code>Enter&lt;/code> 就创建完毕了。&lt;/p>
&lt;ol start="2">
&lt;li>添加SSH密匙
创建完毕后用户目录下应该有个 &lt;code>.ssh&lt;/code> 的文件夹。（:exclamation: 没有的话，可能是你没有显示隐藏文件）复制 &lt;code>id_rsa.pub&lt;/code> 文件里的所有内容。
&lt;ul>
&lt;li>登录自己的 Github 账户，点击右上角头像图标。&lt;/li>
&lt;li>点击 &lt;code>Settings&lt;/code> 。&lt;/li>
&lt;li>找到并点击新页面下的 &lt;code>SSH and GPG keys&lt;/code> 。&lt;/li>
&lt;li>右边的页面刷新后，点击 &lt;code>SSH keys&lt;/code> 右边的 &lt;code>New SSH key&lt;/code> 。&lt;/li>
&lt;li>自己起一个 &lt;code>title&lt;/code>，例如当前的设备 &lt;code>win10-work&lt;/code>，在 &lt;code>Key&lt;/code> 这里粘贴刚刚从 &lt;code>id_rsa.pub&lt;/code> 文件里复制的所有内容。&lt;/li>
&lt;li>最后点击 &lt;code>Add SSH key&lt;/code> 大功告成。:tada:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="push-an-existing-repository-from-the-command-line">push an existing repository from the command line&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git remote add origin git@github.com:userName/repositoryName.gitgit push -u origin master
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-new-repository-on-the-command-line">create a new repository on the command line&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;# .emacs.d(your repository name)&amp;#34;&lt;/span> &amp;gt;&amp;gt; README.mdgit initgit add README.mdgit commit -m &lt;span class="s2">&amp;#34;first commit&amp;#34;&lt;/span>git remote add origin git@github.com:userName/repositoryName.gitgit push -u origin master
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="回滚">回滚&lt;/h2>
&lt;ol>
&lt;li>查看当前版本库的状态&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git log
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git log --pretty&lt;span class="o">=&lt;/span>oneline
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>回滚到上一次提交&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git reset --hard HEAD^
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git reset --hard &lt;span class="o">[&lt;/span>commit id&lt;span class="o">(&lt;/span>前五到六位数就够了&lt;span class="o">)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>⚠ 注意&lt;/p>
&lt;ul>
&lt;li>参数 &lt;code>hard&lt;/code> 的作用&lt;/li>
&lt;li>&lt;code>HEAD^^=HEAD~2&lt;/code> 意思就是回滚到前两次提交的状态&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>如果想恢复到新版本
&lt;ul>
&lt;li>&lt;code>&amp;gt; git reflog&lt;/code> 查看commit记录&lt;/li>
&lt;li>根据commit id 进行回滚(见步骤2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="pull-requests-and-merge">pull requests and merge&lt;/h2>
&lt;h3 id="pull-requests">pull requests&lt;/h3>
&lt;p>就是向一个分支提出合并请求，合并前弄清楚谁是被合并的分支&lt;/p>
&lt;h3 id="merge">merge&lt;/h3>
&lt;p>在提出一个pull requests 请求后，我们可以合并分支，也可以不合并，这就是这一步要做的事情。在合并时也可能出现问题，到时候自行Google，目前的经历的一个问题，是通过删除或保留一些“问题”文件解决的。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>除了一直提示输入用户名及密码的问题外，其他所有的问题都是比较容易解决的。当然我现在并没有使用官网命令行的 &lt;code>Git&lt;/code> ，在接触了 &lt;a class="link" href="https://www.gnu.org/software/emacs/" target="_blank" rel="noopener"
>Emacs&lt;/a> 后，有一个叫 &lt;a class="link" href="https://magit.vc/" target="_blank" rel="noopener"
>Magit&lt;/a> 的 &lt;code>Emacs&lt;/code> 杀手锏，类似于图形化界面的操作，我基本上就没用过命令行了。哈哈，having a nice day！&lt;/p></description></item></channel></rss>