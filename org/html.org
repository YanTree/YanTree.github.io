* html 注释

格式 <!-- This is a comment -->

#+begin_src html
  <!-- 这是一个测试示例 -->
#+end_src

* html 标题

- 标题 (Heading) 是通过 <h1> - <h6> 等标签进行定义的

ATTENTION
h -> head

#+BEGIN_EXPORT html

<h1>This is a heading</h1>
<h2>This is a heading</h2>
<h3>This is a heading</h3>

#+END_EXPORT


PROMPT

浏览器会自动地在标题的前后添加空行。
默认情况下，HTML 会自动地在块级元素前后添加一个额外的空行，比如段落、标题元素前后


ATTENTION

请确保 HTML heading 标签只用于标题。
搜索引擎使用标题为您的网页的结构和内容编制索引

* html 链接

- 图像是通过 <a> 标签进行定义的。
- 属性
  1. href   - 创建指向另一个文档的链接
  2. name   - 创建文档内的书签
  3. target - 定义被链接的文档在何处显示

#+begin_src html
  <a href="http://www.w3school.com.cn" target="_blank">This is a link</a>
  <!-- target="_blank",新窗口中打开当前链接 -->
#+end_src

PROMPT

"链接文本" 不必一定是文本。图片或其他 HTML 元素都可以成为链接。

* html 图像

- 图像是通过 <img> 标签进行定义的。

ATTENTION
img -> image

- 属性
  1. src    - 提供图像的 URL 地址
  2. alt    - 预备的可替换文本(当图片无法加载显示)

- 其它属性
  1. width  - 调整图片的宽度
  2. height - 调整图片的高度

#+begin_src html
  <img src="w3school.jpg" width="104" height="142" />
#+end_src

* html 空的元素

没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的

ATTENTION
br -> blank rule

#+BEGIN_EXPORT html
 <br />

<!-- 这本质上是按了一次回车键 -->
#+END_EXPORT

* html 水平线

<hr /> 标签在 HTML 页面中创建水平线。

ATTENTION
hr -> horizontal rule
p  -> paragraph

hr 元素可用于分隔内容
#+BEGIN_EXPORT html
<p>This is a paragraph</p>
<hr />
<p>This is a paragraph</p>
<hr />
<p>This is a paragraph</p>
#+END_EXPORT

* html 样式

style 属性用于改变 HTML 元素的样式

使用 ：style="shuxing01:value;shuxing02:value"

- 实例-背景颜色
#+begin_src html
  <html>

    <body style="background-color:yellow"> <!-- 整个 body 的背景颜色被改成 yellow -->
      <h2 style="background-color:red">This is a heading</h2> <!-- 标题行的颜色被改成 red -->
      <p style="background-color:green">This is a paragraph.</p> <!-- 段落行被改成 green -->
    </body>

  </html>
#+end_src

- 实例-字体、颜色和尺寸
#+begin_src html
  <html>

    <body>
      <h1 style="font-family:verdana">A heading</h1>
      <p style="font-family:arial;color:red;font-size:20px;">A paragraph.</p> <!-- 属性之间用 ; 隔开 -->
    </body>

  </html>
#+end_src

- 实例-文本对齐
#+begin_src html
  <html>

    <body>
      <h1 style="text-align:center">This is a heading</h1> <!-- text-align 属性规定了元素中文本的水平对齐方式 -->
      <p>The heading above is aligned to the center of this page.</p>
    </body>

  </html>
#+end_src

* html 格式化

- 文本格式化
#+begin_src html
  <html>
    <body>

      <b>This text is bold</b>                                    <!-- 定义粗体文本 -->
      <br />

      <strong>This text is strong</strong>                        <!-- 定义加重语气 -->
      <br />

      <big>This text is big</big>                                 <!-- 定义大号字 -->
      <br />

      <em>This text is emphasized</em>                            <!-- 定义着重文字 -->
      <br />

      <i>This text is italic</i>                                  <!-- 定义斜体字 -->
      <br />

      <small>This text is small</small>                           <!-- 定义小号字 -->
      <br />

      This text contains
      <sub>subscript</sub>                                        <!-- 定义下标字 -->
      <br />

      This text contains
      <sup>superscript</sup>                                      <!-- 定义上标字 -->

      <p>一打有 <del>二十</del> <ins>十二</ins> 件。</p>          <!-- <del> 定义删除字(划掉其中的文本) -->
        <br />                                                      <!-- <ins> 定义插入字(为文本添加下划线) -->

    </body>
  </html>
#+end_src

- “计算机输出”标签
#+begin_src html
  <html>
    <body>

      <code>Computer code</code>                     <!-- 定义计算机代码 -->
      <br />

      <kbd>Keyboard input</kbd>                      <!-- 定义键盘码 -->
      <br />

      <samp>Sample text</samp>                       <!-- 定义计算机代码样本 -->
      <br />

      <tt>Teletype text</tt>                         <!-- 定义打字机代码 -->
      <br />

      <var>Computer variable</var>                   <!-- 定义变量 -->
      <br />

      <pre>                                          <!-- 定义预格式文本 -->
        这是
        预格式文本。
        它保留了      空格
        和换行。
      </pre>
      <br />

      <p>
        <b>注释：</b>这些标签常用于显示计算机/编程代码。
      </p>

    </body>
  </html>

#+end_src

- 引用、引用和术语定义
#+begin_src html
  <html>
    <body>

      <abbr title="World Wide Web">WWW</abbr>                   <!-- 定义缩写 -->
      <!-- 在某些浏览器中，当您把鼠标移至缩略词语上时，title 可用于展示表达的完整版本。 -->
      <br />


      <address>                                                 <!-- 定义地址 -->
        Written by <a href="mailto:webmaster@example.com">Donald Duck</a>.<br />
        Visit us at:<br />
        Example.com<br />
        Box 564, Disneyland<br />
        USA
      </address>
      <br />

      <bdo dir="rtl">                                           <!-- 定义文字方向 -->
        Here is some Hebrew text
      </bdo>
      <!-- 结果：txet werbeH emos si ereH -->
      <br />



    </body>
  </html>
#+end_src

* html css

- 外部样式表
#+begin_src html
  <head>
    <link rel="stylesheet" type="text/css" href="mystyle.css">     <!-- 定义资源的引用 -->
  </head>
#+end_src

- 内部样式表
#+begin_src html
  <head>

    <style type="text/css">                                        <!-- 定义样式定义 -->
      body {background-color: red}
      p {margin-left: 20px}
    </style>

  </head>
  <!-- 最好将这样的样式表放在 <head> 里 -->
#+end_src

- 内联样式
#+begin_src html
  <p style="color: red; margin-left: 20px">                        <!-- 定义样式定义 -->
    This is a paragraph
  </p>
#+end_src

* html 表格

表格由 <table> 标签来定义。行（由 <tr> 标签定义），单元格（由 <td> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。

ATTENTION
th -> table head
tr -> table row
td -> table data


- 属性
  1. border    - 边框属性

- 子标签
  1. tr        - 表格的行
  2. td        - 表格的单元格
  3. th        - 表格的表头

#+begin_src html
  <table border="1">             <!-- 定义表格，设置 border 属性 -->
    <tr>                         <!-- 定义表格的行 -->
      <th>Heading</th>           <!-- 定义表格的表头 -->
      <th>Another Heading</th>
    </tr>
    <tr>
      <td>row 1, cell 1</td>     <!-- 定义表格单元 -->
      <td>row 1, cell 2</td>
    </tr>
    <tr>
      <td>row 2, cell 1</td>
      <td>row 2, cell 2</td>
    </tr>
  </table>
#+end_src

* html 列表

ATTENTION
ul -> unordered lists
ol -> ordered lists
dl -> definition lists
dt -> definition term
dd -> definition description

无序表  - ul
#+begin_src html
  <ul>                <!-- 定义无序列表 -->
    <li>Coffee</li>   <!-- 定义列表项 -->
    <li>Milk</li>
  </ul>
#+end_src

有序表  - ol
#+begin_src html
  <ol>                <!-- 定义有序列表 -->
    <li>Coffee</li>   <!-- 定义列表项 -->
    <li>Milk</li>
  </ol>
#+end_src

自定义列表

自定义列表以 <dl> 标签开始。每个自定义列表项以 <dt> 开始。每个自定义列表项的定义以 <dd> 开始。
#+begin_src html
  <dl>                         <!-- 定义自定义列表 -->
    <dt>Coffee</dt>            <!-- 定义自定义项目 -->
    <dd>Black hot drink</dd>   <!-- 定义自定义的描述 -->
    <dt>Milk</dt>
    <dd>White cold drink</dd>
  </dl>
#+end_src

* html 块

div -> division

#+begin_src html
  <div style="color:#00FF00">
    <h3>This is a header</h3>
    <p>This is a paragraph.</p>
  </div>
#+end_src
span

* html 类

分类块级元素
#+begin_src html
  <!DOCTYPE html>
  <html>
    <head>
      <style>                                 <!-- 定义一个内部样式表 -->
        .cities {
        background-color:black;
        color:white;
        margin:20px;
        padding:20px;
        }
      </style>
    </head>

    <body>

      <div class="cities">                    <!-- (块01)定义一个块，并使用上诉定义的内部样式表 -->
        <h2>London</h2>
        <p>
          London is the capital city of England.
          It is the most populous city in the United Kingdom,
          with a metropolitan area of over 13 million inhabitants.
        </p>
      </div>

      <div class="cities">                    <!-- (块02)定义一个块，并使用上诉定义的内部样式表 -->
        <h2>Paris</h2>
        <p>Paris is the capital and most populous city of France.</p>
      </div>

      <div class="cities">                    <!-- (块03)定义一个块，并使用上诉定义的内部样式表 -->
        <h2>Tokyo</h2>
        <p>Tokyo is the capital of Japan, the center of the Greater Tokyo Area,
          and the most populous metropolitan area in the world.</p>
      </div>

    </body>
  </html>
#+end_src

分类行内元素
#+begin_src html
  <!DOCTYPE html>
  <html>
    <head>
      <style>                                                 <!-- 内部样式表 -->
        span.red {color:red;}
      </style>
    </head>
    <body>

      <h1>My <span class="red">Important</span> Heading</h1>  <!-- 行内元素 -->

    </body>
  </html>
#+end_src

* html 布局

使用 <div> 元素的 HTML 布局
PROMPT ：<div> 元素常用作布局工具，因为能够轻松地通过 CSS 对其进行定位。

#+begin_src html

  <!DOCTYPE html>
  <html>

    <head>
      <style>
        #header {                     <!-- 根据 id 名添加样式 -->
        background-color:black;       <!-- 设置背景颜色 -->
        color:white;                  <!-- 设置文字的颜色 -->
        text-align:center;            <!-- 文字居中 -->
        padding:5px;
        }
        #nav {                        <!-- 根据 id 名添加样式 -->
        line-height:30px;             <!-- 一行的高度, 且文字是向下对齐的 -->
        background-color:#eeeeee;
        height:300px;                 <!-- 这一块 div 的高度  -->
        width:100px;                  <!-- 这一块 div 的宽度 -->
        float:left;                   <!-- 这一块 div 漂到显示器的最左边(漂！！！屏幕足够大时, 他们可能排在一行) -->
        padding:5px;
        }
        #section {                    <!-- 根据 id 名添加样式 -->
        width:350px;                  <!-- 这一块 div 的宽度 -->
        float:left;                   <!-- 这一块 div 继续向显示器的最左边漂！(当然是有可能被前一个 div 抵住的) -->
        padding:10px;
        }
        #footer {                     <!-- 根据 id 名添加样式 -->
        background-color:black;
        color:white;
        clear:both;                   <!-- 左右两边的 div 都不要挨着“我” -->
        text-align:center;
        padding:5px;
        }
      </style>
    </head>

    <body>

      <div id="header">               <!-- 为这个 div 设置能唯一识别的名字 -->

        <h1>City Gallery</h1>
      </div>

      <div id="nav">                  <!-- 为这个 div 设置能唯一识别的名字 -->

        London<br>
        Paris<br>
        Tokyo<br>
      </div>

      <div id="section">              <!-- 为这个 div 设置能唯一识别的名字 -->

        <h2>London</h2>
        <p>
          London is the capital city of England. It is the most populous city in the United Kingdom,
          with a metropolitan area of over 13 million inhabitants.
        </p>
        <p>
          Standing on the River Thames, London has been a major settlement for two millennia,
          its history going back to its founding by the Romans, who named it Londinium.
        </p>
      </div>

      <div id="footer">               <!-- 为这个 div 设置能唯一识别的名字 -->

        Copyright ? W3Schools.com
      </div>

    </body>
  </html>

#+end_src

*使用 HTML5 的网站布局*

HTML5 提供的新语义元素定义了网页的不同部分：

ATTENTION
HTML5 新语义元素
header  定义文档或节的页眉
nav           定义导航链接的容器
section 定义文档中的节
article 定义独立的自包含文章
aside         定义内容之外的内容（比如侧栏）
footer  定义文档或节的页脚
details 定义额外的细节
summary 定义 details 元素的标题
这个例子使用 <header>, <nav>, <section>, 以及 <footer> 来创建多列布局：
#+begin_src html
  <!DOCTYPE html>
  <html>

    <head>
      <style>
        header {
        background-color:black;
        color:white;
        text-align:center;
        padding:5px;
        }
        nav {
        line-height:30px;
        background-color:#eeeeee;
        height:300px;
        width:100px;
        float:left;
        padding:5px;
        }
        section {
        width:350px;
        float:left;
        padding:10px;
        }
        footer {
        background-color:black;
        color:white;
        clear:both;
        text-align:center;
        padding:5px;
        }
      </style>
    </head>

    <body>

      <header>                   <!-- 定义文档或节的页眉 -->
        <h1>City Gallery</h1>
      </header>

      <nav>                      <!-- 定义导航链接的容器 -->
        London<br>
        Paris<br>
        Tokyo<br>
      </nav>

      <section>                  <!-- 定义文档中的节 -->
        <h1>London</h1>
        <p>
          London is the capital city of England. It is the most populous city in the United Kingdom,
          with a metropolitan area of over 13 million inhabitants.
        </p>
        <p>
          Standing on the River Thames, London has been a major settlement for two millennia,
          its history going back to its founding by the Romans, who named it Londinium.
        </p>
      </section>

      <footer>                   <!-- 定义文档或节的页脚 -->
        Copyright W3Schools.com
      </footer>

    </body>
  </html>
#+end_src

* html 响应式设计

什么是响应式 Web 设计？
- RWD 指的是响应式 Web 设计（Responsive Web Design）
- RWD 能够以可变尺寸传递网页
- RWD 对于平板和移动设备是必需的

接触到 Bootstrap 框架

* html 框架

通过使用框架，你可以在同一个浏览器窗口中显示多个页面。

- 垂直框架
#+begin_src html
  <html>

    <frameset cols="25%,50%,25%">            <!-- cols 垂直 -->

      <frame src="/example/html/frame_a.html">
      <frame src="/example/html/frame_b.html">
      <frame src="/example/html/frame_c.html">

    </frameset>

  </html>
#+end_src

- 水平框架
#+begin_src html
  <html>

    <frameset rows="25%,50%,25%">            <!-- rows 水平 -->

      <frame src="/example/html/frame_a.html">
      <frame src="/example/html/frame_b.html">
      <frame src="/example/html/frame_c.html">

    </frameset>

  </html>

#+end_src

- 混合框架
#+begin_src html
  <html>

    <frameset rows="50%,50%">             <!-- 水平 -->

      <frame src="/example/html/frame_a.html">

      <frameset cols="25%,75%">             <!-- 垂直 -->
        <frame src="/example/html/frame_b.html">
        <frame src="/example/html/frame_c.html">
      </frameset>

    </frameset>

  </html>

#+end_src

* html 内联框架

iframe  用于在网页内显示网页。
