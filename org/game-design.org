#+NAME      游戏设计、原型与开发
#+AUTHOR    [美] Jeremy Gibson
* 01 像设计师一样思考
** 优秀游戏设计的秘密——迭代                                           :关键:

1) 决定进行游戏时你想要的感觉； *游戏风格*
设计游戏时想要的感觉(决定了游戏气质，例如：激烈残酷、从容淡定、策略和运气)(这就是游戏 *风格*)

2) 修改规则达到这种感觉；
设计规则
 + 每次试玩时只更改一条规则，保持改动足够简单，理解每条规则产生的影响。
 + 改动越大，就需要更多次体验，避免被游戏的随机性蒙蔽。
 + 修改一个数字也会影响游戏体验。就是很小的改动也能产生巨大的影响。

3) 玩游戏；
4) 分析规则是如何影响游戏的感觉的；
5) 回到步骤1,重复这个过程，知道你满意为止。

迭代设计的过程是对游戏设计进行小幅修改，实现和测试，并且分析对玩法的影响，随后重新进行另一项修改。

** 游戏的定义
*** 体验式理解

Passage(游戏名)用艺术的手法展现了生命中的各类目标.

 - 在角色死之前尽量向屏幕右侧移动（探索）
 - 找到尽可能多的宝箱来赢取高分（成就）
 - 找到一名同伴（社交）

Rohrer(Passage的作者)描绘出了每个人在人生中遇到的重大选择，以及它们产生的深远影响。比如上诉的三个目标共处与一个情镜中。如果游戏角色很早就结了婚，则更难找到宝箱，因为有些地方只允许一个人进入。如果你选择寻宝，需要花时间探索垂直方向，没法看到右边的景致。如果你打算向右侧深入，则不会找到很多宝箱。

书中的线性的剧情确实可以通过让读者展现角色的人生与选择来产生共鸣，但游戏规则能使玩家不仅理解选择的结果，还能让玩家参与选择并承担后果。

*** 创造有趣的选择

一个有趣的选择应该是：

+ 玩家有多个可行选择；
+ 每个选择都有利有弊；
+ 每个选择的结果可预测但不绝对。

如果玩家有多个选择，但有明显的最优解，那么决定的体验就不存在。如果游戏设计得当，玩家常常要面对多个选择，而且难以抉择。

*** 鼓励玩乐的态度

当人们拥有玩乐的态度时，他们设定挑战(也就是游戏里的规则)是为了体验战胜它们的喜悦。

*** 为什么玩游戏？

- 人类喜欢设计好的冲突
限制玩家的规则正好是因为这种限制带来了挑战，才对玩家有吸引力。

- 人类想成为别人
体验另一种生活。扮演哈姆雷特可以让你体验丹麦王子的动荡人生。

- 人类想要刺激
玩家主动参与游戏，作为玩家，你不是看别人被僵尸组追赶，而是亲身参与。

*** 模棱两可的定义
** 小结

- 定义帮你理解人们玩你游戏时动机
- 定义带你理解游戏的核心与边界
- 定义可以帮助你与同行交流

** 本书的核心目标

不仅教会你如何设计游戏，实际上还包括打造 _各类交互体验_ 。由设计师创造，内含规则、媒体、技术，并且通过游玩呈现，就可被称为互动体验。不论是设计游戏，筹划生日派对甚至是婚礼，都与游戏设计有共通之处。本书不只教会你设计游戏的方法，也是解决所有的设计难题，迭代设计过程之路。

* 02 游戏分析框架

游戏分析框架

- MDA（机制、动态、美学）
- FDD（形式、戏剧、动态元素）
- 四元法（机制、美学、剧情、技术）

** MDA（机制、动态、美学）

试图展示玩家与设计师看待游戏的不同方式和目的，设计师通过玩家的视角可以更有效地审视自己的作品。

** FDD（形式、戏剧、动态元素）

形式、戏剧和动态元素将游戏设计细分为特定组件分别对待和改进。本意是帮助游戏设计师细分游戏的各组成部分，并分别优化。FDD 还强调了叙事对玩家体验的重要性。

** 四元法（机制、美学、剧情、技术）

以游戏开发者视角看待游戏。它将原属于不同团队的游戏基本元素分区：设计师负责机制、艺术家负责美学、编剧负责剧情、程序员负责技术。

* 03 分层四元法

分层四元法帮助了解和创作游戏的各个方面，并帮助分析你喜爱的游戏，让你更全面地审视自己的作品。最终，不仅了解游戏的机制，还包括玩的内涵、社会属性、意义和文化。

** 分层四元法（三层四元）


                                             +-------------------------------+
                                             |                               |
                                             |  机制                 美学     |
                                             |                               | 文
                                             |                               | 化
                                             |                               | 层
                                             |  技术                 叙事     |
                                             |                               |
                                             +-------------------------------+


                     +------------------------------+
                     |                              |
                     |   机制                美学    |
                     |                              | 动
                     |                              | 态
                     |                              | 层
                     |   技术                叙事    |
                     |                              |
                     +------------------------------+


 +--------------------------------+
 |                                |
 |  机制                  美学     |
 |                                | 内
 |                                | 嵌
 |                                | 层
 |  技术                  叙事     |
 |                                |
 +--------------------------------+

** 设计师的责任

*重点*
游戏设计最重要的一点就是预测和打造玩家体验。

游戏能造福社会，帮助玩家学习技能。

** 小结                                                         :分层四元法:

分层四元法的重点在于理解三个层次表现的游戏从开发者到玩家的所有权转变。

- 内嵌层  所有内容同属于设计师和开发者，并且完全在开发者的掌控中。
- 动态层  游戏的体验所在，所以游戏设计师需要玩家付诸行动，作出选择去体验游戏。通过玩家的决定和对游戏系统的影响，玩家拥有部分体验，但总的来说还在开发者控制之下。如此一来，玩家和开发者共享动态层。
- 文化层  游戏脱离了开发者的控制。这也是为什么游戏mod适用于文化层：通过游戏mod，玩家得以控制游戏内容。当然，大部分游戏内容保持不变，特定元素则由玩家（mod开发者）说了算。玩家和社群对游戏所有权转变的过程定义了文化层。

* 04 内嵌层

内嵌层涵盖了所有游戏开发者直接设计和编程的内容(这一层完全是由开发者控制的，不受玩家控制)，内嵌机层的重点是游戏开发者可以设计的内容，机制也不例外。

** 机制内嵌

内嵌层的重点是 *游戏开发者刻意设计的内容，机制也不例外* 机制内嵌不包括步骤和结果，因为它们都由玩家控制，所以属于动态层。

*** 目标

玩家在游戏中的目标。玩家想要达成什么？

**** 目标的紧要性

- 短期目标
- 中期目标
- 长期目标·「the gold of war」的目标是登上山顶

**** 目标的重要性

- 支线任务
- 主线任务

**** 目标冲突

例如：《大富翁》中的目标是获得最多的金钱，但你必须花费金钱投资房地产和酒店，为了随后挣到更多的钱。

*** 玩家关系

**** 7种基本玩家交互模式


- 单人对抗游戏 :: 玩家的目标就是通关游戏
- 多人对抗游戏 :: 多个玩家协作，每人有不同的目标，但彼此合作不多。
- 合作游戏    :: 数个玩家一起通关游戏，目标一致。
- 玩家对玩家  :: 两个玩家的目标是击败对方。
- 多方竞赛    :: 类似玩家对玩家，人数更多且相互抵抗。
- 单方竞赛    :: 一个玩家对一队玩家。
- 团队对抗    :: 两队玩家互相对抗。

**** 玩家关系和角色由目标定义

除了上诉7种交互模式，还有各种它们的组合。任何时候，玩家间的关系由所有玩家目标的组合构成。这些关系让玩家扮演多个角色：

- 主角      :: 征服游戏的角色
- 竞争者     :: 玩家试图征服其他玩家，可以是为了赢得游戏或是站在游戏这一方
- 合作者     :: 玩家帮助其他人
- 市民      :: 玩家与其他人在同一个世界，但不会合作或竞争

*** 规则
*** 边界

定义了进行游戏的范围。在这个范围里，游戏规则才适用。

*** 资源

资源是游戏中的价值物，这些东西可以是资产 (用于消耗获取装备的东西等等)或只是数值。例如游戏中的：装备、金币、资源卡。数值常包括生命值、潜水时的氧气、经验值、魔力值、体力值等 (大多是反映角色状态的数值)

*** 空间

设计空间的要点：

- 空间的目的
- 流程     :: 空间是适合玩家通过还是限制行动？背后有何动机？
- 地标     :: 在虚拟场景中设置地标让玩家围绕它行动。
- 经验
- 短、中、长期目标

*** 表格

表格就是一堆数字，但也能用来设计和描绘各类其他东西。

- 概率     :: 用来定义特殊场景下的可能性
- 进程     :: 表格展示了玩家能力和属性的成长
- 试玩数据  :: 设计师用表格记录试玩数据和玩家体验

** 美学内嵌

美学内嵌是开发者置于游戏中的美学元素，包括所有的五感。

*** 五种美学感受

根据重要程度排序

**** 视觉
**** 听觉

| 音乐类型 | 及时性 | 适用场景               |
|----------+--------+------------------------|
| 声效     | 立即   | 提醒玩家，传达简单信息 |
| 音乐     | 中     | 营造氛围               |
| 对话     | 中/长  | 传达复杂信息           |

**** 触觉
**** 嗅觉

*** 美学目标

1) 情绪


美学帮助游戏营造情绪氛围的效果出众

2) 信息


颜色信息内置于我们哺乳动物的心智中。警示颜色红、黄、黑色在哺乳动物界随处可见。反之，蓝色和绿色通常代表平和。另外可以训练玩家对特定美学的理解。

** 叙事内嵌

本节探讨叙事的核心组件、叙事的动机和方法，以及游戏叙事和线性叙事的差异

*** 叙事的核心组件

- 前提   :: 前提是叙事的基础，故事在此产生
- 设定   :: 设定在前提的骨架上展开来，详细描绘故事发生的世界
- 角色   :: 主角、反派、同伴、仆从或是师傅
- 情节   :: 叙事时发生的一系列事件

*** 传统戏剧结构                                       :达到叙事目标的方法:

国外：

**** 五幕结构

**** 三幕结构

*** 叙事内嵌的目标

- 唤起情感
- 动机和理由  :: 叙事可以操纵情绪，同样可能促使玩家采取行动，或是把恶行正当化。
- 进程和奖励  :: 用过场讲故事和奖励玩家
- 加强机制    :: 内嵌叙事的主要目的之一就是加强游戏机制

** 技术内嵌

*** 桌面游戏技术内嵌

常见的桌面游戏的技术内嵌是随机、状态记录和进度

- 随机
- 状态记录
- 进度

*** 电子游戏技术的内嵌

* 05 动态层

一旦玩家开始游戏，就从内嵌层走向了动态层。玩法、策略和玩家选择在这个层面涌现。这章将探索动态层的各种涌现行为，以及设计师如何预估设计决策的后果。

** 玩家的角色

由于玩家的参与，内嵌层就转变为了动态层，这一过程离开了玩家就无法实现。电影可以在空无一人的影院放映，电视信号即使没人收看也没什么影响。但是，游戏离开了玩家就不能称作为游戏。玩家非常重要。

** 涌现                                                               :重点:


核心：

即使简单规则也能产生复杂的动态行为。

-------------------------------------------------------------------------
分层四元法的动态层包含了玩家与四类(机制、美学、叙事、技术)元素互动的结果


-------------------------------------------------------------------------
涌现也会为游戏带来bug，尤其是玩家人数激增会大大增加产生异常的机会，设计师要负责解决这些问题

** 动态机制

这一机制让互动媒体与其他媒体区别开来，成为了游戏。

*** 步骤

内嵌层的机制包括了规则：设计师给玩家准备的游戏指南。步骤是玩家回应规则的动态行为。要留意一些隐藏的规则。

*** 有意义的玩法

Katie Salen，Eric Zimmerman 定义有意义的玩法：既要玩家可识别，还能整合到更大的游戏中。如果玩家的行动没意义，很快就会丧失兴趣。Katie Salen，Eric Zimmerman提出“有意义的玩法”的概念，在于提醒设计师注意玩家的心态和他们与游戏的互动是否清晰明了。

**** 可识别

可识别玩法就是玩家的行为产生可见后果。比如，每次调低空调温度是都会“滴”的一声表示操作完成，如果没有声音，你会怀疑自己操作是否有效。

**** 互相协调

如果玩家知道行为会影响游戏结果，这就叫协调。比如，调整空调温度时，按“下”键，你就知道空调温度下降了一度。

*** 策略

当游戏允许有意义的行为，玩家通常会利用策略取胜。策略是一系列精心算计的行为，帮助玩家达成某个 *目标* 目标不仅限于赢得游戏，还可能是享受过程、获取知识。

**** 最优策略

当游戏非常简单时，玩家可能会找出游戏的最优策略。但大多数游戏都太过复杂没有最优策略。通常意义上的最优策略指的是帮助玩家扩大赢面的笼统概念，通过一系列的选择来扩大自己的赢面。

**** 策略性设计

1) 提供玩家多种获胜选择，每个都需要做出艰难的选择

2) 目标之间相互纠缠(比如两个目标的条件一致)

**** 自定规则

*** 玩家意图：Bartel分类，作弊者和扫兴者

MUD设计师提出的

Bartle 定义的四类玩家

- 成就型  :: 追求游戏中的最高分。想要称霸游戏
- 探索型  :: 致力于探索游戏每个角落。想要了解游戏
- 社交型  :: 想和朋友一起玩游戏。希望了解其他玩家
- 杀手型  :: 喜欢挑衅其他玩家。想要主宰其他玩家



          +--------------+--------------+
          |              |              | 世
          |              |              | 界
          |   探索型      |   成就型      |
          |              |              |
          |              |              |
          |--------------+--------------|
          |              |              |
          |              |              |
          |   社交型      |   杀手型      |
          |              |              | 玩
          |              |              | 家
          +--------------+--------------+
              交互            扮演

还可能会遇到的两类玩家

- 作弊者  :: 在意输赢但不在乎游戏公平。作弊者会为了取胜扭曲规则
- 扫兴者  :: 不在乎输赢也不在意游戏。扫兴者常常会破坏其他玩家的体验

*** 结果

许多传统游戏是零和游戏，也就是说有一方赢就会有一方输


------------------------------------------------------------------
大多数游戏都有下列结果：

- 直接结果  :: 每个独立行为都有结果。玩家攻击敌人，攻击结果不是击中就是落空
- 任务结果  :: 完成游戏中的任务，就会给予相应的奖励。 *任务的结果常标志着一小段故事的结束*
- 积累结果  :: 当玩家花费时间朝一个目标努力最终达成，这就叫积累结果。最常见的形式就是刷经验(XP)升级。 *与任务结果最大的区别是没有叙事成分*
- 最终结果  :: 大多数游戏结束时会有个结果。 *有以玩家角色死亡为结束，但玩家角色死亡常常不是游戏的最终结局* 大部分游戏中，死亡只是回到之前的检查点

** 动态美学

与动态机制类似，动态美学是游戏进行时产生的。大体上分为两类：

*** 过程美学

利用电子游戏中的 *代码生成* (或者桌面游戏中利用机制生成)，这包括了游戏过程直接由代码生成的音乐和美术


**** 过程音乐

过程(生成)音乐在现代游戏中随处可见，目前有三种不同技术实现：

- 横向重排(HRS)  :: HRS 是根据设计师对当前游戏氛围的需要，重新排序预先录制好的音乐段落。长短音乐用来循环播放，短促的音乐用来掩饰不同音乐间的过度。 *这是目前最常见的过程音乐技术*
- 竖向重编(VRO)  :: VRO 包括了一首歌的多条音轨，可以启动和禁用，常见于音乐游戏如 PaRappa the Rapper 和 Frequency
- 过程编曲(PCO)  :: PCO 是最少见的过程音乐做法，话费时间最多，难度最高。PCO 不是将已有的音乐段落重新排序，而是通过程序规则实时编曲。如 C.P.U.Bach 《花》

**** 过程美术

由代码动态生成游戏中的美术就叫做过程美术，有以下几种过程美术：

- 粒子系统  :: 最常见的过程美术形式，当今游戏几乎都有例子系统
- 过程动画  :: 过程动画涵盖了一群生物的群路行为到Will Wright，在《孢子》中制作的过程动画引擎——为各类玩家创造的生物移动、攻击和其他各类动画
- 过程环境  :: 比如Mojang的《我的世界》，每次玩家开始新游戏，整个世界(上亿个方格)以一个种子数字创建(也被称作随机种子)

*** 环境美学

这是游戏进行中的环境，不太受到开发者的控制

**** 游戏环境视觉

由于玩家设备与设定不同，所以设计师要注意可能造成的影响。尤其要留意下面两种要素：

- 环境亮度         :: 绝大多数游戏在精心控制的灯光条件下进行，保证画面清晰。玩家的光照环境不一定很好，所以要确保你的视觉美学有强烈的明暗对比， *或者允许玩家调节伽马值或亮度*
- 玩家屏幕分辨率    ::

**** 游戏声音环境

与游戏环境视觉类似，你对游戏进行时的声音环境无能为力。尤其是移动设备上的游戏。要考虑的因素包括：

- 环境噪音           :: 保证玩家漏听某些声音时仍然可以进行游戏。保证游戏本身不要太吵，不影响玩家获取关键信息。你还要注意别用细微的声音当重要的声音提示
- 玩家控制音量        :: 玩家可能会开启静音，在手游上更是如此。如果有重要对话，确保玩家可以打开字幕。如果利用声音提示玩家，确保同时也有视觉引导

**** 体贴玩家

不是所有的玩家都能感受到全部5种美学。下面两点经常被设计师忽略：

- 色盲          :: 色盲有几种，最常见的是让人不能区别红色和绿色(国外)。可以用PhotoShop测试，在试图目录下找到ProofSetup，有两种常见的色盲设置
- 癫痫和偏头痛   :: 频繁闪光可以引起癫痫和偏头痛， *儿童尤其容易对光敏感* 开发游戏时移除快速闪光

** 动态叙事
*** 互动叙事的摇篮期

- 互动小说影响玩家       :: 互动小说直接影响玩家。例如：游戏Zork。互动小说是唯一一种读者/玩家角色需要采取行动并承担后果的叙事媒体
- 通过共同体验构建关系    :: 互动小说另一个特别的地方在于玩家通过共享经历与其他角色建立关系(游戏里的其他角色)。例如：2B与另一个男性...我忘了他叫啥了

** 涌现叙事

正真的动态叙事在玩家和系统共同叙事时同时出现。

** 动态技术

核心概念：

你创作的代码(你的内嵌技术)将成为供玩家体验的系统。与其他动态系统一样，会有事件涌现，也就是说好事和坏事都可能会发生。动态技术包括了所有运行时影响玩家的代码。这可以是任何代码实现的内容，比如物理模拟或是人工智能

** 小结

机制、美学、叙事和技术都来自玩家进行游戏。虽然难以预测会涌现什么，但这是设计师的责任去试玩和理解涌现背后的意义

* 06 文化层

这一层是离设计师最远的，也是最难掌握的部分，但是文化层对游戏设计开发的整体理解至关重要

** 游戏之外

游戏的文化层主要有两种社群玩家得到体现，其中的一种是游戏的 *硬核玩家* ，另一种是刚刚接触游戏的 *新玩家* 后者了解游戏往往不是通过游戏本身，而是通过硬核玩家写的指导、指南等。

Constance Steinkuehler 在她的 the Mangle of Play 文章中指出，一个游戏的动态层，特别是大型多人游戏的动态层是交互稳定的混合体。动态层不仅包括游戏开发者的意图，也包含玩家的意向，游戏体验受玩家和开发者双方的影响。

*** 由玩家社区创建的文化层

                                             +-----------------+
                                             |                 |
                                             |  机制      美学  |
                                             |                 | 文
                                             |                 | 化     <----------- 社会
                                             |                 | 层
                                             |  技术      叙事  |
                                             |                 |
                                             +-----------------+
                                                        ^
                                                        |
                     +------------------+               | 社
                     |                  |               | 区
                     |   机制      美学  |               |
                     |                  | 动            |
                     |                  | 态 -----------‘
                     |                  | 层
                     |   技术      叙事  |
                     |                  |
                     +------------------+
                                 ^
                                 |
 +-----------------+             | 玩
 |                 |             | 家
 |  机制      美学  |             |
 |                 | 内          |
 |                 | 嵌 ---------'
 |                 | 层
 |  技术      叙事  |
 |                 |
 +-----------------+

** 文化机制

文化机制发正在玩家掌握游戏机制的时候，有时也发生在游戏外。以下是几种最常见的例子：

- 游戏mod    :: 玩家改动游戏机制，制作成mod
- 定制关卡    :: 在不改变核心机制的前提下，一些游戏提供玩家制作关卡的工具

** 美学文化

美学文化指的是社区玩家创作游戏相关的艺术作品。其形式丰富多样，有角色人物图、音乐等，也可以用游戏引擎来进行创作：

1) 同人图
2) Cosplay
3) 游戏性的艺术

** 叙事文化

有时，玩家社区会根据游戏的世界创作自己的故事和剧情。文化叙事是游玩的必要组成部分。除此之外，还有很多与其不同的例子：

1) 同人小说
2) 剧情mod
3) 引擎电影

** 技术文化

技术文化核心有两部分组成：1.游戏的技术对玩家生活的影响,2.玩家社区用来修改游戏内置技术和体验的技术

- 游戏外的游戏技术    :: 可以应用到医学成像和电影的可视化预览
- 玩家制作的外部工具  ::
- 粉丝制作的游戏指南  ::

** 授权的跨媒体不属于文化层

跨媒体指的是把同一件事在多个不同的渠道传播。

分清授权的跨媒体和未授权的粉丝制作作品，后者属于文化层，而前者不是。

分层四元法中的内嵌层、动态层和文化层是相互分开的，这基于游戏制作人嵌入作品内的要素的不断发展，以及玩家的游玩和游戏对玩家及社会造成的文化影响。相比之下，授权的跨媒体是由品牌和知识产权所有者对游戏的重新描绘和刻画。所有授权的跨媒体与内嵌层不可分割。每一个跨媒体作品都是内嵌层的产品，都有属于自己的动态层和文化层。最大的区别就是操作方不同。游戏和授权的跨媒体的内嵌层由开发公司控制；而动态层则由开发者用到的技术、机制和玩家的行为、策略等控制；在文化层上则完全由社区玩家控制。所以同人小说、Cosplay、游戏mod、粉丝制作跨媒体都属于文化层，而授权的跨媒体产品则不属于。

若想要了解更多关于跨媒体的内容，阅读 Henry Jenkins 的书和论文

*** 分层四元法与跨媒体之间的位置关系


                                             +-----------------+
                                             |                 |
                                             |  机制      美学  |
                                             |                 | 文
                                             |                 | 化     <----------- 社会
                                             |                 | 层
                                             |  技术      叙事  |
                                             |                 |
                                             +-----------------+
                                                        ^
                                                        |
                     +------------------+               | 社
                     |                  |               | 区
                     |   机制      美学  |               |
                     |                  | 动            |
                     |                  | 态 -----------‘
                     |                  | 层
                     |   技术      叙事  |
                     |                  |
                     +------------------+
                                 ^
                                 |
 +-----------------+             | 玩                                      +----------------------+
 |                 |             | 家                                      |                      |
 |  机制      美学  |             |                                         | 授权的跨媒体(电影、图书、|
 |                 | 内          |                                         |书籍等等)              |
 |                 | 嵌 ---------'---------------------------->    IP所有者 |                      |
 |                 | 层                                                    |                      |
 |  技术      叙事  |                                                       |                      |
 |                 |                                                       |                      |
 +-----------------+                                                       +----------------------+

* 07 像一名设计师一样工作

如何创造交互式体验

** 迭代设计

迭代设计适用与多个方面，从游戏内的背景到故事叙事和游戏设计，都可以得到很好的应用。


顺时针方向循环

             +--------|--------+
             |分析     |    设计|
             |        |        |
             |        |        |
             |--------+--------|
             |        |        |
             |        |        |
             |测试     |    迭代|
             +--------|--------+

- 分析   :: 弄清自己所处位置和自己想要达成的目标。明确你在设计里想要解决的问题(或是想要利用的机会)，考虑项目开发上你能利用哪些资源，统筹你一共有多少时间
- 设计   :: 用现有的资源创造一个设计，该设计能够解决你的难题或是提供可以用的机会，最后决定一个切实可行的计划
- 实现   :: 把游戏设计的想法尽可能快地转换成可玩的原型
- 测试   :: 请一些人来玩你的作品，并观察他们的反应。最好早一点测试，这样还有机会改变并纠正错误

*** 分析

开始前，先问自己这样几个问题：

- 我的游戏面向哪些玩家 :: 我的游戏是给什么人(小孩、成年人)玩的，决定游戏平台(手机、PC等)，有一些玩家可能是色盲玩家，重要的一点是  *区分玩家喜欢的内容和真正激发他们玩的因素*

- 我有什么资源 :: 最主要的资源 *时间和才华* ，可能有一些有才能的朋友
- 现有技术有什么？ :: 用于描述与你的作品相关联的现存游戏和其他媒介的术语。不仅仅要知道是哪些游戏激发了你的灵感，也要知道哪些最近和将来的作品将成为你的竞争者
- 我想快点作出一个能投入测试的可玩性高的游戏，有没有什么捷径 :: 每天高效率地利用时间，确定作品里的核心机制(《超级玛丽》中，核心机制是跳跃)，再来设计和测试。这样你就知道值不值得接下来继续开发了。重点 *游戏的机制和游戏性上* 这是作为一名设计师的核心目标

*** 设计

设计所关乎的不是你自己本身，而是项目团队成员的合作。作为一名设计师，你要做的工作是和团队的其他人合作与沟通，最重要的就是 *倾听*

- 倾听玩家的声音  :: 询问玩家想要什么样的游戏体验。整个设计的迭代重复过程就是你先做出一些内容，然后交给游戏测试人员，最后得到玩家的反馈
- 倾听团队的声音  :: 搜集所有团队成员的想法，并合作挖掘出对所瞄准的目标玩家最好的游戏创意，切忌团队成员动辄争吵
- 倾听客户的声音  :: 在各个阶段里听取他们的想法：他们告诉你他们想要的是什么；他们心里想要的是什么却没说出来；甚至他们自己都没承认但却是内心深处真正想要的东西。与客户接触，需要谨慎小心察言观色
- 倾听作品的声音  :: 有时候在游戏设计里，把特定元素组合在一起就像双手带上手套一样贴合恰当，而有时候，就像把肥胖的熊猫塞进袜子里一样臃肿。即使某个方面的设计非常巧妙，他也可能与其他部分不融洽和谐，你也应该舍弃

- 倾听自己的声音

  1. 听从你的直觉

  2. 注意你的健康

  3. 自己的声音别人听是什么样的

*** 实现

在迭代设计过程中为了有效实现自己的想法，测试游戏是最有用的方法

例子：为游戏菜单系统做测试

*** 测试

1) 不管现在你觉得自己的作品怎么样，只有直到玩家(not you)来测试并给出反馈的时候，你才真正对作品的好坏有个客观的理解。测试的玩家越多，相应反馈也就越真实合理
2) 提高设计水平的最好办法就是，尽可能多地让别人来测试你的作品并获得他们的反馈。另外，再把测试人员的反馈内容记录下来
3) 确保测试者提供的反馈是真实有效的。可以这样告诉游戏测试员：“我需要你的帮助，这个游戏现在有一些问题，但是我还不知道是什么。请你一定要告诉我，哪里你不喜欢，这能帮我大忙。”鼓励他们心口如一地告诉你作品的缺陷和不足

*** 分析/设计/实现/测试/重复

根据反馈内容，将相似的反馈内容集中到一起，然后整体分析这些反馈，找出造成玩家这样感受的原因。判断这是一个潜在、中度还是严重的问题，再提出相应的解决方案。在提出所有解决办法后，再设计部分应用相应的解决方案，然后重复上述的步骤。

** 创新

Frans Johansson

- 渐进型创新  :: 这种创新很容易说服投资人投入资金，这种类型的创新永远不会瞬间出现飞跃性成果
- 交汇点创新  :: 出现在两种截然不同的观念碰撞的时候，成果过于新颖且难以预料，要让别人认同这种成果是非常困难的

** 头脑风暴

“找到好点子的最佳办法就是尽可能地多想点子，再扔掉那些不好的。” —— Linus Pauling

首先准备好：一堆纸片、笔。在5 - 10个人的时候使用效果最佳

- 扩展阶段  :: 画一个简单的东西，由此开始联想，想到什么就写下什么
- 收集阶段  :: 收集前面的想法
- 碰撞阶段  :: 给每个成员发两张卡片，每个人根据卡片的内容想出三个不同的游戏点子
- 评分阶段  :: 每个人选出上一步骤中最好的两个点子写在白板上，选出最受欢迎的前三个点子

** 改变你的想法

一部优秀的作品是在游戏初始原型上不断听取别人建议进行修改加工完成的。  ——适用与小型企划或是项目的产前阶段。

若是项目人数众多，投入了大量的时间和精力，该变想法是一件既困难又昂贵的事情。一个标准的专业游戏开发分为几个不同的阶段

1. 制作前
2. 制作
3. 内部测试
4. Beta测试
5. “黄金”阶段
6. 发售后

** 规划作品的范围大小

如何规划游戏内容的范围。根据你现有的时间和资源来合理地压缩设计内容的过程就是规划范围，而  _过多的设计内容则是游戏项目的第一杀手_

如果你想要找点灵感，看看每年的 [[http://indiecade.com][IndieCade]] 展会上的知名游戏。

** 小结                                                               :重点:

1. 头脑风暴的方法
2. 重复迭代设计
3. 快速制作原型
4. 合理的规划内容范围

2 ~ 4 是改善游戏设计的重点

* 08 设计目标

- 以设计为中心的目标

  1. 财富
  2. 名气
  3. 团体
  4. 个人表达
  5. 更高的善
  6. 成为一名出色的游戏策划

- 以玩家为中心的目标

  1. 趣味
  2. 游戏性态度
  3. 心流
  4. 结构化冲突
  5. 力量感
  6. 兴趣/关注/投入
  7. 有意义的决定
  8. 体验式理解

* 09 纸面模型

纸面模型是游戏设计师迅速测试游戏和改变想法的重要工具之一，这个工具简单易用。虽然你的想法和概念都要数字化，但是它能告诉你作品还缺少什么内容。

** 纸面原型的优势

1. 实现想法的速度
2. 简易度
3. 初始开发速度
4. 重复迭代速度
5. 低技术门槛
6. 协作的原型
7. 集中的原型构建与测试  :: 在纸面测试时，测试员能集中测试原型的功能性，而不是其他细节内容。纸面原型有助于引导测试者的关注方向，这样他们不会过分关注原型的外观，而是会重点研究游戏内容，这也是你最想测试的内容。

** 纸面原型工具

1. 几张大纸          :: 大概 36X25 英寸
2. 骰子             :: 不同面的骰子
3. 卡牌             :: 一套标有 1～6的卡牌
4. 卡套             :: 给卡牌使用，也可用以区分卡组中的特殊牌
5. 3X5英寸的卡片     :: 这个大小很适合做卡组
6. 便签纸
7. 白板
8. 烟斗通条/乐高
9. 一个笔记本        :: 别人测试你的原型时，应该记下来

** 一个字面原型的例子

P91

这是一个战术游戏的例子

** 纸面原型的优点

- 理解玩家在地图里的移动路线
- 平衡系统
- 图形用户界面(GUI)
- 尝试大胆的主意

** 纸面原型的缺点

- 信息匮乏
- 游戏节奏过快或过慢
- 实体界面

* 10 游戏测试

在原型和迭代设计里，我们发现要作出优秀的游戏设计，高质量的测试是不可或缺的。怎样才能做好测试呢？

** 为什么要测试游戏

测试游戏才能让你的作品变得更好；你所获得的评价，无论是正面的还是负面的都能帮助你改善玩家的体验和你的设计。

- 监控员  :: 管理游戏测试的人
- 试玩者  :: 试玩游戏并给出反馈的人

** 成为出色的试玩者

- 边想边说                     :: 测试的时候就应该把感想说出来
- 展示你的偏好                  :: 谈一谈这个游戏让你想起来的其他游戏、电影、书籍、回忆等
- 自我分析                     :: 深度发掘，这款游戏让你感到开心或者难过的原因
- 区分不同要素                  :: 给出反馈后，单独分析一下游戏的美术、机制、氛围、音效、音乐等
- 如果他们不喜欢你的想法，不要担心 :: 面对监控员，你应该畅所欲言，只要是能改善作品的想法，都应该告诉他

** 试玩者圈子

测试过程

自己 ---->   朋友，熟人 ---->   周围认识的人

不同的人来试玩游戏能提供不同角度的反馈

- 你自己
- 值得信赖的朋友

    在反复测试完游戏，做了一些改进，游戏体验已经接近你的最初的期望以后，这时候该把游戏给其他人测试了。第一批人应该是你值得信赖的朋友和家人，最好是目标玩家或是游戏开发社区的人
    纸巾试玩者是一个行业术语，所有人都只能成为一次纸巾试玩者。留几名好朋友放在最后测试
- 熟人和其他人

  找更多的人来试玩游戏
  1. 本地大学
  2. 本地的游戏商店/商场
  3. 农贸市场/社区活动/聚会
- 互联网

** 测试方法

*** 非正式的单独测试

- 避免提供给玩家太多信息  :: 根据玩家的反映，可以辨别游戏的界面是否直观、游戏的目的是否明确
- 不要引导试玩者         :: 让试玩者自己研究一会儿游戏内容，这能让你明白作品里的哪些内容不直观
- 切勿争论或找接口       :: 试玩者拿出自己的时间为你测试游戏，你应该倾听他们的想法来改善设计
- 记笔记                :: 记录你获得的反馈内容，留意很多人都反映过的相同内容

*** 正式的团体测试

这是大型工作室选择的游戏测试方式，侧重于从众多的玩家那里收集大量的数据，监控员对试玩者的体验有更清晰直观的了解。

测试问卷的一些例子：

- “在这部游戏里，你最喜欢哪三个部分，最讨厌哪三个部分？”
- 将游戏的不同内容列成一个列表(截图更好)，然后问“你如何评价以下内容？”
- “如何评级主角(或其他角色)？在试玩过程中，你对主角的看法有变化吗？”
- “你愿意为这个游戏支付多少钱？你觉得这个游戏应该以什么价格销售？”
- “指出你觉得困惑的地方”

**** 所有正式的测试都需要一个计划稿

内容：
- 在试玩玩家开始玩游戏前，监控员应该对玩家说些什么？应该提供哪些操作指南？
- 在测试过程中，监控员应该作何反应？如果玩家做了什么有趣或反常的事情，监控员是否应该询问？监控员是否可以在测试中给玩家提示？
- 应该怎样安排测试环境？玩家应该测试多久？
- 测试完成后，监控员应该问试玩者一些什么问题？

*** 正式的个人测试

P105

正式的个人测试倾向于从单个试玩者的游玩体验那里收集更详细的数据

需要记录的有：

- 屏幕录制              :: 你想知道玩家看的是什么
- 记录试玩者的动作
- 录制玩家的面部         :: 通过看玩家的面部表情，你就能了解他们的情绪
- 把试玩者说的话记录音频  :: 间接感受到试玩者心里是怎么想的
- 记录游戏数据           :: 记录游戏时间和游戏内的数据。包括：玩家输出、玩家在任务上的成功或失败、玩家的位置、每一阶段花费的时间等。阅读“自动数据记录”有更详细的内容

之后需要同步数据

**** 运行正式的个人测试

准备好测试环境，尽量让玩家感到舒服自在。准备一些零食和饮料、舒服的沙发或者椅子。

监控员最好不是游戏开发团队的成员。这样监控员看问题的角度不会受到个人对作品投入的影响。在找到合适的监控员以后，在整个过程里，你最好一直用这一个人，这样他能提供一个玩家整体体验的变化

*** 在线游戏测试

你的作品必须进入测试阶段以后才能尝试这个测试。这种测试俗称 Beta 测试，有以下几种形式：

- 封测 :: 限制人数的邀请制测试。一开始，你应该只让几个值得信任的朋友来上网测试。这是在服务器架构上找 Bug 的好机会，也是挑出作品哪些内容不清晰的机会
- 内测 :: 有一些特殊条件，只要注册，玩家就能来参与测试。最常见的限制是对玩家人数的限制
- 公测 :: 没有人数限制，任何人都可以来玩。人数的突然飙升可能会导致服务器过载。你应该保证游戏基本上完成了再进行线上公测

自动记录数据

尽早地把自动记录(ADL)放进游戏里。ADL 自动记录玩家的行为和游戏事件。记录的数据通常存储在服务器上，也可以下载到本地里。

*** 其他重要的测试方法

- 焦点测试
- 兴趣投票
- 可用性测试
- 质量保证测试
- 自动化测试

** 小结

这章的目的是宏观的了解一下不同形式的游戏测试。

* 11 数字和游戏平衡

** 游戏平衡的意义

- 多人游戏   :: 一般指的公平，每个玩家取胜的机会相同
- 对称的游戏 :: 最容易实现，因为大家技能和起始点一样
- 不对称游戏 :: 难度显著提高，因为看似平衡的设计对于个别玩家可能会严重偏斜
- 单人游戏   :: 意味着难度等级和曲线，如果游戏某点难度激增，玩家很容易流失

** 使用Open Office Calc

* 12 谜题设计

** Scott Kim 与谜题设计

*** 什么是谜题

Kim : 妙趣横生的谜题都有一个正确的答案。这个定义区别了玩具和解谜

**** 谜题让人开心

- Kim指出的有趣谜题的三个要素：

 - 新奇
 - 合适的难度
 - 棘手

谜题都有一个正确的答案

*** 谜题的种类

Kim 指出了四种类型的谜题


- 动作  :: 《俄罗斯方块》的动作类游戏，有一定的时间限制和容错空间。这种类型就是动作和解谜的结合
- 故事  :: 《神秘岛》将剧情与解谜结合了起来。多数的找物品的解谜游戏都要通过探索剧情和环境来解题。这种类型将两者紧密的结合了起来
- 建造  :: 《不可思议的机器》玩家用各种零件来制造物品从而解决问题。这种类型融合了建造、工程以及空间推理谜题几个要素
- 策略  :: 《象棋解谜》一般将多人的游戏转变成单人的版本。这种类型将多人游戏的思考方式和解谜所需要的技巧巧妙地结合了起来，从而提高玩家多人游戏的水平

Kim 同时也表示，有一些纯粹的解谜不能融入这四种类型。比如数独、纵横填字游戏等

*** 玩解密游戏的四大理由

Kim 认为人们主要基于四个理由选择玩解谜游戏：

1. 挑战
2. 打发时间
3. 角色和氛围
4. 心灵之旅

*** 解密需要的思考模式

- 填字       :: 词汇量
- 画面       :: 包括拼图、寻物揭秘、2D/3D空间解谜
- 逻辑
- 文字/画面
- 图像/逻辑   :: 滑动拼图
- 逻辑/文字   :: 许多谜语游戏

*** Kim 的数字谜题设计的八个步骤

1. 灵感
2. 简单化

   把原来的想法简单化

   1. 找出谜题的核心机制，玩家需要的解题技巧
   2. 去除不相关的内容，聚焦重点内容
   3. 一体化
   4. 简化操作。玩实物魔方容易操作，但用键鼠玩数字版的魔方就很困难

3. 建造组件

   制作一个可以简便快速制作谜题的工具。纸面原型工具或是数字原型

4. 规则

   确定规则。定义面板、方块、移动的方式、谜题最终的目标、级别等

5. 谜题

   设置不同难度的谜题。保证不同难度的谜题相应的解题机制不同

6. 测试

   回到 4 ～ 5 步重新打磨设计

7. 排序
8. 外观

   完善界面外观和改善系统信息的方式

*** 谜题设计的七个目标

- 用户友好       :: 用户可以比较容易地熟悉和理解谜题
- 入门简单       :: 玩家能在一分钟之内明白游戏的玩法，几分钟以内就可以体验游戏
- 即使反馈       :: 解谜游戏应该及时对玩家的输入形成反馈
- 永动          :: 游戏机制要刺激玩家继续游玩。例如：在过关界面设置 “Play Again” 按钮，而不是 "Game Over"
- 清晰的目标     :: 让玩家清晰地知道谜题的主要目的。也可以给玩家设置进阶性的多个目标
- 难度级别       :: 游戏的难度应该与玩家的能力相当
- 一些特别的内容

** 动作解谜游戏的几种类型

- 滑块/位置解谜  :: 通常都是第三人称动作游戏，要求玩家移动地面上的方块或箱子一类的东西。《古墓丽影》
- 物理谜题      :: 涉及物理环境模拟。玩家需要移动物品来击中目标。《传送门》
- 横越谜题      :: 谜题的任务就是让玩家到达一个目标地点，但是中间过程很复杂。玩家需要绕很多路去解锁大门或是桥梁才能到达目标地点。《刺客信条》
- 潜行谜题      :: 要求玩家在不被敌人发现的前提下达到目标点，敌人巡逻的路径都是事先安排好的。玩家都有打击敌人的手段，但是如果运用得不好，很有可能会被敌人察觉。《合金装备》
- 连锁反应      :: 这类游戏都有物理模拟系统，各种物品之间可以相互影响，可以制造爆炸等。玩家可以通过使用工具制作陷阱来解谜或是攻击敌人。《生化奇兵》
- Boss 战      :: 多数Boss战，玩家都要找到Boss攻击的模式和节奏才能打败Boss。《超级马里奥》

** 小结

*游戏设计的重点是实时的游戏性，谜题设计的重点则是洞察与观察的技巧* 另外，谜题设计要让玩家在解谜时能分清自己的答案是否正确，而游戏设计里的选项则是玩家不能确定选项的结果或是选项的正确性。作为谜题设计师，你也要制作原型，并且像测试游戏那样测试谜题。

* 13 指引玩家                                                      :实用技巧:
** 直接指引

直接指引的手法，玩家通常可以明确而清楚地感受到。直接指引的方式很多，其效果主要由四点决定，及时性、稀缺性、简洁性和明确性。

- 及时性  :: 指引信息必须在 *需要时* 立即传达给玩家，不要一开始就一股脑地将所有操作机制教给玩家
- 稀缺性  :: 不少现代游戏涉及许许多多的操作机制与模拟目标，所以，不要让玩家一次性地被大量的操作信息冲昏头脑，这非常重要。让直接的指引信息变得很稀少，会让这些信息显得更有价值，也更容易接受。任务设计方面，这个道理同样适用
- 简洁性  :: 在指引中永远不要使用任何不必要的词句，也不要一次塞给玩家太多的信息
- 明确性  :: 保证你想要传达的信息100%准确

*** 直接指引的具体手段                                           :经典手段:

1. 介绍

   游戏明确地告诉玩家该干什么。形式可以是:

   1) 直接出现在屏幕上方的文字
   2) 与NPC的对话
   3) 可以是图表图形

2. 尝试行动

   1) 最常见的形式就是NPC给玩家提供任务。笔者推荐：先给玩家设立一个长期目标，然后再给玩家设立一系列期间可以完成的短期和中期目标

3. 地图或导航系统

   1) 很多游戏都内置一个地图或像GPS一样的导航系统，指引玩家完成目标或是任务

4. 弹出

   1) 在一些游戏里，操作可能会根据玩家周围情况的变化而改变。《刺客信条 4:黑旗》里，一个按键在不同情况下，功能可能是开门、点燃成桶的火药、控制已装备的武器等。为了让玩家快速了解这些功能，在可以操作时，通常会弹出一个按键图标，旁边注明一条简短的功能描述

** 间接指引

间接影响是一门艺术，在玩家不知不觉的基础上指引玩家。Jesse Schell 在 /The Art of Game Design/ 提到的 “间接控制”。下面是对他的六个方法的扩展。

*** 约束

如果你提供有限的选择给玩家，那么玩家就只能从这些选项里选择。

*** 目标

目标也可以用来间接指引玩家。Schell指出，如果玩家有一个收集香蕉的目标，还有两扇门可以进去，那么在其中的一扇门后面放置玩家能看见的香蕉就能起到指引玩家的完成任务的目的。玩家也喜欢给自己设定目标，设计师可以通过提供材料来帮助玩家完成。例如游戏：《我的世界》

*** 物理界面

Schell 在他的书中提到，物理界面也可以用来间接引导玩家：
如果你给《吉他英雄》《摇滚乐对》的玩家一个吉他形状的手柄，玩家就会期待拿它来弹奏。如果是一个普通手柄，他可能认为是拿它来移动角色的。

还有一个办法就是通过手柄震动的不同强度来提示玩家。

*** 视觉设计

有几种视觉设计来间接指引玩家

1. 光线

   人们天生就会被光线吸引。如果玩家置身于一个黑暗的房间里，房间的另外一端射出一道光线，玩家在探索其他以前都会先向光线走去

2. 相似性

   如果玩家在游戏里找到了什么有益的(有用的、回复血量的、有价值的等)物品，那么他会继续寻找和它相似的东西

3. 路径

   相似性会引发一种像是面包屑小路一样的影响。玩家捡起了一个特定的道具以后，会追随同样的道具前进探索

4. 路标

   大型建筑物或目标可以当作目标。有一种万花丛中一点绿的感觉

5. 箭头

   利用隐蔽箭头的方式引导玩家的方法。胖虎玩的《the gold of war》

6. 镜头

   许多有到达目的地任务的游戏会用移动镜头的方法指引玩家。通过镜头给玩家展示远处的物品或跳跃地点，指引玩家前进的方向避免产生疑惑

7. 对比

   1) 亮度

      形成箭头(玩家前进方向)的区域亮度差异最大。较暗的区域与较亮的区域延伸出一条明显的线条

   2) 材质

      有东西的地方，材质细腻，无关紧要的环境设置(石头等)质地粗糙

   3) 颜色

      用比较突出的颜色来暗示玩家该走哪里

   4) 方向性

      反方向性的反差也可以有效的吸引玩家的视线。在画面大多数线条是垂直的情况下，水平的线条会非常显眼

*** 音频设计

Schell 指出音乐能够影响玩家的心情和行为

缓慢、安静、爵士乐风格的音乐通常会和潜行或搜查任务联系在一起

高亢的快节奏、强有力的音乐适合用在玩家激烈的战斗中

音效也可以通过吸引玩家的注意力，从而影响玩家的行为。《刺客信条》中，玩家接近宝箱时，就会出现铃声的音效

*** 玩家化身

玩家化身的模型(玩家的角色)能对玩家的行为有深远影响。

如果玩家的角色手持一把剑，那么玩家就会想自己可能会进入战斗。
如果玩家的角色头戴巫师帽，身穿长袍，手拿一本书而不是武器，那么玩家就会尽可能避免硬碰硬的战斗，而是会专注施法

*** NPC

NPC 是间接指引中最复杂灵活的形式之一。NPC 指引也有很多手段

**** 构建行为

NPC 角色有不同模式的行为。在游戏中，构建行为的目的是为了让玩家能看出规律

1. 消极的行为

   NPC 通常会做一些玩家应该避免做的事情，NPC 起到了示范的作用。例如：NPC 误入了一个陷阱被抓，向敌人方向扔

2. 积极的行为

   NPC 可以引导玩家如何躲避陷阱，向玩家展示正确的操作方法

3. 安全

   NPC 跳进的区域看起来很危险，但正是因为NPC 能够跳进去，所以玩家才知道跟着跳进去是安全的

**** 情感联系

情感联系是NPC 影响玩家行为的另一种方式。

例如：《风之旅人》

** 介绍新技能和新概念

以上提到的直接或间接引导重点都放在玩家的移动上。这一节里，将介绍如何引导玩家更好地理解游戏内容

如果游戏操作简单，你可以给玩家展示一个操作图，或者让玩家直接自己体验。
因为现代游戏的复杂性，所以让玩家学会如何玩变得极其重要，不能简单的给玩家一个说明手册，而是要通过体验慢慢教会玩家如何操作。


*** 排序

排序是一种排列信息的艺术
例子：玩《神庙逃亡》的教程

- 单独介绍  :: 系统向玩家介绍一种新机制时，要等玩家适应了以后再继续。向前滑动是跳跃
- 扩展     :: 排序教程的下一个步骤。向左/向右滑动是 左/右转向，向下滑动是滑铲
- 增加危险  :: 增加额外的难度。游戏里增加多个障碍物，玩家要不断的跳跃/滑铲来躲避障碍
- 提升难度  :: 设置更难的障碍，加快速度

*** 融合

在玩家学会了单独的机制以后(如上面所述的例子)，玩家就该学习如何应用这些不同的机制了。

** 小结                                                               :重点:

在你设计游戏时，时刻牢记指引玩家。这个任务对于你来说可能是最艰难的任务之一，因为作为一名设计师，所有的机制你都了然于心。

尽早测试，频繁测试，让更多的人来试玩。

* 14 数字游戏产业

** 小结

这一章讲了游戏的变革，以及如何走到行业中去，(例如：如何应聘，与业内专业人士会面需要做什么准备之类的，这一章有很多如何融入这个行业内的提点)

* 15 数字化系统中的思维                                          :拾苹果例子:

** 棋类游戏中的系统思维

以一面标准的六面骰子为例，掷骰子的行为方式有些符合人们的预期，有些则不符合

+ 棋类游戏中掷骰子时符合预期的行为方式

  1) 每个骰子在掷出后都会出现一个1～6之间的点数
  2) 两个骰子通常一起掷出，尤其是两个骰子颜色和大小都相同的时候
  3) 两个骰子一起掷出时，通常会计算总点数
  4) 如果一起掷出一对同样的点数，有时会给玩家特殊利益

+ 棋类游戏中掷骰子时不符合预期的行为方式

  1) 玩家不能直接用骰子摆出自己想要的点数
  2) 骰子必须停在桌面上，并且必须有一个面完全朝下才算有效。否则需要重新掷
  3) 玩家掷出骰子后，在这一回合内通常不允许再触碰骰子
  4) 骰子通常不能掷向其他玩家

这个例子很好的说明：棋类游戏中有很多规则其实并未写入规则手册中，而是由玩家基于公平比赛的共识默契遵守。对大多数玩家来说，游戏玩法中隐藏着大量的默认规则。

但是，计算机游戏做每件事都要依赖明确的指令。只有把自己的想法d编译成非常简单的指令让它执行，计算机才能产生貌似智能的行为表现

** 简单命令练习

例如："站起来"这一复杂过程，你需要发出很多简单的指令。可以试着找个同伴，让他按照你的指令一步步的站起来试一试

*** 代码库

在C#中，常用行为的高级命令集成为代码库(code library)。如果你使用C#和Unity进行开发，有上百个这样的代码库供你使用

*** 开发环境

Unity

*** 把复杂问题分解为简单问题

如果不允许“站起来”这样复杂的指令，你就需要把复杂命令分解成更细、更琐碎的命令。尽管这在练习时很困难，但你会在编程过程中发现，把复杂命令分解为简单命令的技巧是你处理所面临的挑战时最重要的能力，让你把所要创建的游戏一点一点建立起来。

*** 游戏分析：《拾苹果》

基于游戏原型 Kaboom! 制作人 Activision

**** 基本玩法

**** 游戏对象

**** 游戏对象动作列表

**** 游戏对象流程图

** 小结

数字化游戏可以分解为一系列非常简单的选择和命令。在第28章里会进行详细分析

* 16 Unity开发环境简介
* 17 C#编程语言简介
